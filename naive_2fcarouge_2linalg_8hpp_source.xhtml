<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/linalg/naive/fcarouge/linalg.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.2.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('naive_2fcarouge_2linalg_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">linalg.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="naive_2fcarouge_2linalg_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.2.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_LINALG_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_LINALG_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;<a class="code" href="utility_8hpp.xhtml">fcarouge/utility.hpp</a>&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;initializer_list&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Row = 1, auto Column = 1&gt; <span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a> {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a9faeccaa0850f175969d390a0e863c80">   56</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a9faeccaa0850f175969d390a0e863c80">matrix</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a4ddc6dbe38e87fb2e146626602a40813">   58</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span>(<span class="keyword">false</span>) <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#af86ce6ac51113a4d4659d9d132cb43f4">matrix</a>(Type element)</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  {</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0] = element;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#aa509b56340d93b1486f06fa61d16647e">   64</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#aa509b56340d93b1486f06fa61d16647e">matrix</a>(Type(element)[1])</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0] = element[0];</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a8dda20ca56c012564c398936ca47e775">   70</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a8dda20ca56c012564c398936ca47e775">matrix</a>(Type(column)[<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>])</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0}; i &lt; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>; ++i) {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][0] = column[i];</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#ad83aaad1b4ba18c5ce4244834952de57">   78</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ad83aaad1b4ba18c5ce4244834952de57">matrix</a>(Type(row)[<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>])</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> &gt; 1)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0}; j &lt; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>; ++j) {</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j] = row[j];</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  }</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#acac83196782ff7b1616f772d6714d5be">   86</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#acac83196782ff7b1616f772d6714d5be">matrix</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...elements)</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1 &amp;&amp; <span class="keyword">sizeof</span>...(elements) == <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>)</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0};</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    ([&amp;] { <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i++][0] = elements; }(), ...);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a482c9f9e56645d54ab791a1f23d40470">   93</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a482c9f9e56645d54ab791a1f23d40470">matrix</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...elements)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> &gt; 1 &amp;&amp; <span class="keyword">sizeof</span>...(elements) == <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>)</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0};</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    ([&amp;] { <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j++] = elements; }(), ...);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  }</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a215381dc58da35149bae60ee3bb9210a">  100</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a215381dc58da35149bae60ee3bb9210a">matrix</a>(</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>      <span class="keyword">const</span> std::initializer_list&lt;std::initializer_list&lt;Type&gt;&gt; &amp;rows) {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="comment">// static_assert</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0}; <span class="keyword">auto</span> &amp;&amp;elements : rows) {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>      <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0}; <span class="keyword">auto</span> &amp;&amp;element : elements) {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>        <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j++] = element;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>      }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>      ++i;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    }</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a8faf72ffb586809e220a72311f55e047">  111</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span>(<span class="keyword">false</span>) <span class="keyword">operator</span> Type() <span class="keyword">const</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0];</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#ac9ccb51a6ae30b457f528898debf4cf5">  117</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> Type &amp;<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac9ccb51a6ae30b457f528898debf4cf5">operator[]</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[index][0];</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a48534181438acd7b9655acdf51e9d766">  123</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> Type &amp;<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a48534181438acd7b9655acdf51e9d766">operator[]</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1)</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  {</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][index];</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a5863b8a98707ffea0b9209e7b38bec01">  129</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> Type &amp;<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a5863b8a98707ffea0b9209e7b38bec01">operator()</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  {</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[index][0];</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a27105b3bf58c0859a8fc527d9d9e56d3">  135</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> Type &amp;<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a27105b3bf58c0859a8fc527d9d9e56d3">operator()</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> == 1)</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][index];</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  }</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a274f6d5d7f01fea4439ac6588f3931a2">  141</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> Type &amp;<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a274f6d5d7f01fea4439ac6588f3931a2">operator()</a>(<span class="keyword">auto</span> row, <span class="keyword">auto</span> column)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[row][column];</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  }</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#aeed3a86caa430b8b39d8d1997fd9189a">  145</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#aeed3a86caa430b8b39d8d1997fd9189a">operator==</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other) <span class="keyword">const</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 || <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> &gt; 1)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">  149</a></span>  [[no_unique_address]] Type <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>][<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>]{};</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>};</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Column = 1&gt;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#ac13c25e27a85ae315c7996927b7a3c28">row_vector</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a>&lt;Type, <span class="keyword">decltype</span>(Column){1}, Column&gt;;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>, auto Row = 1&gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a>&lt;Type, Row, <span class="keyword">decltype</span>(Row){1}&gt;;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a>(Type) -&gt; matrix&lt;Type, 1, 1&gt;;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a>(<span class="keyword">const</span> Type (&amp;)[Row][Column]) -&gt; matrix&lt;Type, Row, Column&gt;;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row&gt;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a>(<span class="keyword">const</span> Type (&amp;)[Row]) -&gt; matrix&lt;Type, Row, 1&gt;; <span class="comment">// column_vector</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="comment"></span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> matrix&lt;Type, Row, Column&gt;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    identity_v&lt;matrix&lt;Type, Row, Column&gt;&gt;{[] {</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>      matrix&lt;Type, Row, Column&gt; result;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>      <span class="comment">// Combine!</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>      <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (Row &lt; Column) {</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) k{0}; k &lt; Row; ++k) {</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>          result.data[k][k] = 1.0;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        }</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      } <span class="keywordflow">else</span> {</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) k{0}; k &lt; Column; ++k) {</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>          result.data[k][k] = 1.0;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        }</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>      }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>      <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>    }()};</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> matrix&lt;Type, Row, Column&gt; zero_v&lt;matrix&lt;Type, Row, Column&gt;&gt;{};</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column, auto Size&gt;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a187a07dcf4d00a975909a9c2a7283b95">  201</a></span><a class="code hl_function" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Size&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Size, Column&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>      <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Size) k{0}; k &lt; Size; ++k) {</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] += lhs.data[i][k] * rhs.data[k][j];</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>      }</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>    }</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  }</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>}</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a4f016f1b86f66fffb39dd5e6c4dd96ab">  217</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">operator*</a>(<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> lhs,</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>                                              <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, 1&gt;</a> rhs) {</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  <span class="keywordflow">return</span> lhs * rhs.data[0][0];</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>}</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Column&gt;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a56e2559ee22855fd69532dc43fe038ad">  223</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">operator*</a>(<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> lhs,</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>                                              <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, Column&gt;</a> rhs) {</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, Column&gt;</a> result;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j] = lhs * rhs.data[0][j];</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  }</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>}</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa73759a941a3efd3355642460f4687a3">  235</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="namespacefcarouge.xhtml#aa73759a941a3efd3355642460f4687a3">operator*=</a>(<a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>                                  <a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> rhs) {</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>      lhs.data[i][j] *= rhs;</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>    }</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  }</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keywordflow">return</span> lhs;</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>}</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#acd2db4da220479f456ab712130ed255c">  247</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">operator*</a>(<a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> lhs,</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>                                              <a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> rhs) {</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keywordflow">return</span> lhs *= rhs;</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>}</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a6a6887c11028ae91379ae3902bf983ec">  254</a></span><a class="code hl_function" href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">operator+</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result{lhs};</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] += rhs.data[i][j];</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    }</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  }</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>}</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a05f99d04c239164bdf5ecb627cd9b614">  268</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">operator+</a>(<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> lhs,</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>                                              <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, 1&gt;</a> rhs) {</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  <span class="keywordflow">return</span> lhs + rhs.data[0][0];</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>}</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a11a6f09387090b4241f56399c3e4960a">  274</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">operator+</a>(<a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, 1&gt;</a> lhs,</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>                                              <a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> rhs) {</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <span class="keywordflow">return</span> lhs.data[0][0] + rhs;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>}</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac5db1b5cabde635b27f85fe3ddc3dcc9">  281</a></span><a class="code hl_function" href="namespacefcarouge.xhtml#ac5db1b5cabde635b27f85fe3ddc3dcc9">operator-</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result{lhs};</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span> </div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] -= rhs.data[i][j];</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>    }</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  }</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>}</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ab7e4a66b8fa71546907279397bb9971a">  295</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#ac5db1b5cabde635b27f85fe3ddc3dcc9">operator-</a>(<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> lhs,</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>                                              <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, 1&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  <span class="keywordflow">return</span> lhs - rhs.data[0][0];</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>}</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row&gt;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ae2c572219d8e2ce56c12424b71489c59">  301</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#ae6a34b26f8067a57bfc5de22cb4b625a">operator/</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, 1&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>                                              <a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> <span class="keyword">auto</span> rhs) {</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, 1&gt;</a> result{lhs};</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>    result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][0] /= rhs;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>  }</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>}</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Row, auto Column&gt;</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">  314</a></span><a class="code hl_function" href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">transpose</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> &amp;lhs) {</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Column, Row&gt;</a> result;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[j][i] = lhs.data[i][j];</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>    }</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  }</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>}</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_LINALG_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1arithmetic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a></div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00056">utility.hpp:56</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a214880fe1dfe8701212c14c9ece44013"><div class="ttname"><a href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">fcarouge::operator+</a></div><div class="ttdeci">matrix&lt; Type, 1, 1 &gt; operator+(Type lhs, matrix&lt; Type, 1, 1 &gt; rhs)</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00399">linalg.hpp:399</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5f46009dfa013275132875c5be3ab85c"><div class="ttname"><a href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">fcarouge::operator*</a></div><div class="ttdeci">matrix&lt; Type, Row, 1 &gt; operator*(matrix&lt; Type, Row, Size &gt; lhs, matrix&lt; Type, Size, 1 &gt; rhs)</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00374">linalg.hpp:374</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a6f496dc857f8b172efc57e3ba9bfdbf8"><div class="ttname"><a href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00066">linalg.hpp:66</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a91e1f8a82696aa85761b7c29666235e6"><div class="ttname"><a href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">fcarouge::matrix</a></div><div class="ttdeci">Eigen::Matrix&lt; Type, Row, Column &gt; matrix</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00058">linalg.hpp:58</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa73759a941a3efd3355642460f4687a3"><div class="ttname"><a href="namespacefcarouge.xhtml#aa73759a941a3efd3355642460f4687a3">fcarouge::operator*=</a></div><div class="ttdeci">constexpr auto &amp; operator*=(matrix&lt; Type, Row, Column &gt; &amp;lhs, arithmetic auto rhs)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00235">linalg.hpp:235</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac13c25e27a85ae315c7996927b7a3c28"><div class="ttname"><a href="namespacefcarouge.xhtml#ac13c25e27a85ae315c7996927b7a3c28">fcarouge::row_vector</a></div><div class="ttdeci">Eigen::RowVector&lt; Type, Column &gt; row_vector</div><div class="ttdoc">Compile-time sized Eigen3 row vector.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00062">linalg.hpp:62</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac5db1b5cabde635b27f85fe3ddc3dcc9"><div class="ttname"><a href="namespacefcarouge.xhtml#ac5db1b5cabde635b27f85fe3ddc3dcc9">fcarouge::operator-</a></div><div class="ttdeci">constexpr auto operator-(const matrix&lt; Type, Row, Column &gt; &amp;lhs, const matrix&lt; Type, Row, Column &gt; &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00281">linalg.hpp:281</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac922632c2da8269e8396756088ba9a1f"><div class="ttname"><a href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">fcarouge::transpose</a></div><div class="ttdeci">constexpr auto transpose(const matrix&lt; Type, Row, Column &gt; &amp;lhs)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00314">linalg.hpp:314</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae6a34b26f8067a57bfc5de22cb4b625a"><div class="ttname"><a href="namespacefcarouge.xhtml#ae6a34b26f8067a57bfc5de22cb4b625a">fcarouge::operator/</a></div><div class="ttdeci">constexpr auto operator/(const Numerator &amp;lhs, const Denominator &amp;rhs) -&gt; quotient&lt; Numerator, Denominator &gt;</div><div class="ttdef"><b>Definition:</b> <a href="update__linalg__xx0_8cpp_source.xhtml#l00055">update_linalg_xx0.cpp:55</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a></div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00114">linalg.hpp:114</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a0a995e0b4a122d37f327be9b065d8136"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">fcarouge::matrix::Row</a></div><div class="ttdeci">constexpr Row</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00195">linalg.hpp:195</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a215381dc58da35149bae60ee3bb9210a"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a215381dc58da35149bae60ee3bb9210a">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; &amp;rows)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00100">linalg.hpp:100</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a24baa2c48b4606232abeab530ec019ce"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">fcarouge::matrix::data</a></div><div class="ttdeci">Type data[Row][Column]</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">linalg.hpp:149</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a27105b3bf58c0859a8fc527d9d9e56d3"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a27105b3bf58c0859a8fc527d9d9e56d3">fcarouge::matrix::operator()</a></div><div class="ttdeci">constexpr const Type &amp; operator()(auto index) const</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00135">linalg.hpp:135</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a274f6d5d7f01fea4439ac6588f3931a2"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a274f6d5d7f01fea4439ac6588f3931a2">fcarouge::matrix::operator()</a></div><div class="ttdeci">constexpr const Type &amp; operator()(auto row, auto column) const</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00141">linalg.hpp:141</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a482c9f9e56645d54ab791a1f23d40470"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a482c9f9e56645d54ab791a1f23d40470">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const auto &amp;...elements)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00093">linalg.hpp:93</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a48534181438acd7b9655acdf51e9d766"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a48534181438acd7b9655acdf51e9d766">fcarouge::matrix::operator[]</a></div><div class="ttdeci">constexpr const Type &amp; operator[](auto index) const</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00123">linalg.hpp:123</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a5863b8a98707ffea0b9209e7b38bec01"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a5863b8a98707ffea0b9209e7b38bec01">fcarouge::matrix::operator()</a></div><div class="ttdeci">constexpr const Type &amp; operator()(auto index) const</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00129">linalg.hpp:129</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a8dda20ca56c012564c398936ca47e775"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a8dda20ca56c012564c398936ca47e775">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(Type(column)[Row])</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00070">linalg.hpp:70</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a9faeccaa0850f175969d390a0e863c80"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a9faeccaa0850f175969d390a0e863c80">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix()=default</div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_aa509b56340d93b1486f06fa61d16647e"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#aa509b56340d93b1486f06fa61d16647e">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(Type(element)[1])</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00064">linalg.hpp:64</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ab24112c8116a37f1feff0dbbe6ac9178"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">fcarouge::matrix::Column</a></div><div class="ttdeci">constexpr Column</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00195">linalg.hpp:195</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ac9ccb51a6ae30b457f528898debf4cf5"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#ac9ccb51a6ae30b457f528898debf4cf5">fcarouge::matrix::operator[]</a></div><div class="ttdeci">constexpr const Type &amp; operator[](auto index) const</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00117">linalg.hpp:117</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_acac83196782ff7b1616f772d6714d5be"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#acac83196782ff7b1616f772d6714d5be">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const auto &amp;...elements)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00086">linalg.hpp:86</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ad83aaad1b4ba18c5ce4244834952de57"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#ad83aaad1b4ba18c5ce4244834952de57">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(Type(row)[Column])</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00078">linalg.hpp:78</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_aeed3a86caa430b8b39d8d1997fd9189a"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#aeed3a86caa430b8b39d8d1997fd9189a">fcarouge::matrix::operator==</a></div><div class="ttdeci">constexpr bool operator==(const matrix &amp;other) const =default</div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_af86ce6ac51113a4d4659d9d132cb43f4"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#af86ce6ac51113a4d4659d9d132cb43f4">fcarouge::matrix::matrix</a></div><div class="ttdeci">constexpr matrix()</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00117">linalg.hpp:117</a></div></div>
<div class="ttc" id="autility_8hpp_xhtml"><div class="ttname"><a href="utility_8hpp.xhtml">utility.hpp</a></div><div class="ttdoc">The collection of utilities supporting the library.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c1845e5bf011c2136883d0d7188f50e9.xhtml">linalg</a></li><li class="navelem"><a class="el" href="dir_5c422dffce8b56da66aa5bce35afaadd.xhtml">naive</a></li><li class="navelem"><a class="el" href="dir_24e45c3c0a20829319c2ae855f697b9d.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="naive_2fcarouge_2linalg_8hpp.xhtml">linalg.hpp</a></li>
    <li class="footer">Generated on Thu Jul 6 2023 05:20:14 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
