<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: std::formatter&lt; fcarouge::matrix&lt; Type, Row, Column &gt;, Char &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">std::formatter&lt; fcarouge::matrix&lt; Type, Row, Column &gt;, Char &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Specialization of the standard formatter for the Eigen matrix.  
 <a href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for std::formatter&lt; fcarouge::matrix&lt; Type, Row, Column &gt;, Char &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4__coll__graph.svg" width="188" height="166"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9a236dabfb55a810a77016d62daf8e0f" id="r_a9a236dabfb55a810a77016d62daf8e0f"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a9a236dabfb55a810a77016d62daf8e0f">parse</a> (std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</td></tr>
<tr class="separator:a9a236dabfb55a810a77016d62daf8e0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a675d74648d18e290b55e05b2d3fc8896" id="r_a675d74648d18e290b55e05b2d3fc8896"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; </td></tr>
<tr class="memitem:a675d74648d18e290b55e05b2d3fc8896"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#a675d74648d18e290b55e05b2d3fc8896">format</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</td></tr>
<tr class="separator:a675d74648d18e290b55e05b2d3fc8896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade28579df44a6ac08afb625d15596f88" id="r_ade28579df44a6ac08afb625d15596f88"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; </td></tr>
<tr class="memitem:ade28579df44a6ac08afb625d15596f88"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#ade28579df44a6ac08afb625d15596f88">format</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;::RowsAtCompileTime==1 &amp;&amp;<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;::ColsAtCompileTime !=1)</td></tr>
<tr class="separator:ade28579df44a6ac08afb625d15596f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae98f28dcceeee642a381ecbdfc0cbe1" id="r_aae98f28dcceeee642a381ecbdfc0cbe1"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; </td></tr>
<tr class="memitem:aae98f28dcceeee642a381ecbdfc0cbe1"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml#aae98f28dcceeee642a381ecbdfc0cbe1">format</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;::RowsAtCompileTime==1 &amp;&amp;<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;::ColsAtCompileTime==1)</td></tr>
<tr class="separator:aae98f28dcceeee642a381ecbdfc0cbe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type, auto Row, auto Column, typename Char&gt;<br />
struct std::formatter&lt; fcarouge::matrix&lt; Type, Row, Column &gt;, Char &gt;</div><p>Specialization of the standard formatter for the Eigen matrix. </p>

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00123">123</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a675d74648d18e290b55e05b2d3fc8896" name="a675d74648d18e290b55e05b2d3fc8896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a675d74648d18e290b55e05b2d3fc8896">&#9670;&#160;</a></span>format() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>format_context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; OutputIterator </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00130">130</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  132</span>                        {</div>
<div class="line"><span class="lineno">  133</span>    <span class="keyword">const</span> Eigen::IOFormat output_format{Eigen::StreamPrecision,</div>
<div class="line"><span class="lineno">  134</span>                                        Eigen::DontAlignCols,</div>
<div class="line"><span class="lineno">  135</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><span class="lineno">  136</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><span class="lineno">  137</span>                                        <span class="stringliteral">&quot;[&quot;</span>,</div>
<div class="line"><span class="lineno">  138</span>                                        <span class="stringliteral">&quot;]&quot;</span>,</div>
<div class="line"><span class="lineno">  139</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><span class="lineno">  140</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><span class="lineno">  141</span>                                        <span class="charliteral">&#39; &#39;</span>};</div>
<div class="line"><span class="lineno">  142</span> </div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">return</span> std::format_to(</div>
<div class="line"><span class="lineno">  144</span>        format_context.out(), <span class="stringliteral">&quot;[{}]&quot;</span>,</div>
<div class="line"><span class="lineno">  145</span>        (std::stringstream{} &lt;&lt; value.format(output_format)).str());</div>
<div class="line"><span class="lineno">  146</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ade28579df44a6ac08afb625d15596f88" name="ade28579df44a6ac08afb625d15596f88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade28579df44a6ac08afb625d15596f88">&#9670;&#160;</a></span>format() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>format_context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; OutputIterator
    requires(<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt;Type, Row, Column&gt;::RowsAtCompileTime == 1 &amp;&amp;
             <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt;Type, Row, Column&gt;::ColsAtCompileTime != 1)
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00150">150</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  155</span>  {</div>
<div class="line"><span class="lineno">  156</span>    <span class="keyword">const</span> Eigen::IOFormat output_format{Eigen::StreamPrecision,</div>
<div class="line"><span class="lineno">  157</span>                                        Eigen::DontAlignCols,</div>
<div class="line"><span class="lineno">  158</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><span class="lineno">  159</span>                                        <span class="stringliteral">&quot;, &quot;</span>,</div>
<div class="line"><span class="lineno">  160</span>                                        <span class="stringliteral">&quot;[&quot;</span>,</div>
<div class="line"><span class="lineno">  161</span>                                        <span class="stringliteral">&quot;]&quot;</span>,</div>
<div class="line"><span class="lineno">  162</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><span class="lineno">  163</span>                                        <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><span class="lineno">  164</span>                                        <span class="charliteral">&#39; &#39;</span>};</div>
<div class="line"><span class="lineno">  165</span> </div>
<div class="line"><span class="lineno">  166</span>    <span class="keywordflow">return</span> std::format_to(</div>
<div class="line"><span class="lineno">  167</span>        format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>,</div>
<div class="line"><span class="lineno">  168</span>        (std::stringstream{} &lt;&lt; value.format(output_format)).str());</div>
<div class="line"><span class="lineno">  169</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aae98f28dcceeee642a381ecbdfc0cbe1" name="aae98f28dcceeee642a381ecbdfc0cbe1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae98f28dcceeee642a381ecbdfc0cbe1">&#9670;&#160;</a></span>format() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>format_context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; OutputIterator
    requires(<a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt;Type, Row, Column&gt;::RowsAtCompileTime == 1 &amp;&amp;
             <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt;Type, Row, Column&gt;::ColsAtCompileTime == 1)
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00173">173</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  178</span>  {</div>
<div class="line"><span class="lineno">  179</span>    <span class="keywordflow">return</span> std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.value());</div>
<div class="line"><span class="lineno">  180</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a9a236dabfb55a810a77016d62daf8e0f" name="a9a236dabfb55a810a77016d62daf8e0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a236dabfb55a810a77016d62daf8e0f">&#9670;&#160;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, typename Char &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, Column &gt;, Char &gt;::parse </td>
          <td>(</td>
          <td class="paramtype">std::basic_format_parse_context&lt; Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>parse_context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00124">124</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  124</span>                                                                           {</div>
<div class="line"><span class="lineno">  125</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><span class="lineno">  126</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/support/eigen/fcarouge/<a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>std</b></li><li class="navelem"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1matrix_3_01_type_00_01_row_00_01_column_01_4_00_01_char_01_4.xhtml">formatter&lt; fcarouge::matrix&lt; Type, Row, Column &gt;, Char &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
