<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::test::anonymous_namespace{kalman_format_arguments.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.2</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('namespacefcarouge_1_1test_1_1anonymous__namespace_02kalman__format__arguments_8cpp_03.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::test::anonymous_namespace{kalman_format_arguments.cpp} Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a14fc43b54126c6d8162fa195e944a273" id="r_a14fc43b54126c6d8162fa195e944a273"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a14fc43b54126c6d8162fa195e944a273">test</a></td></tr>
<tr class="separator:a14fc43b54126c6d8162fa195e944a273"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a14fc43b54126c6d8162fa195e944a273" name="a14fc43b54126c6d8162fa195e944a273"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14fc43b54126c6d8162fa195e944a273">&#9670;&#160;</a></span>test</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::test::anonymous_namespace{kalman_format_arguments.cpp}::test</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{[] {</div>
<div class="line">  <a class="code hl_function" href="namespacefcarouge.xhtml#a4a3bd37a96fd242e89867316396afcd5">kalman</a> filter{state{0.},</div>
<div class="line">                output&lt;double&gt;,</div>
<div class="line">                input&lt;double&gt;,</div>
<div class="line">                estimate_uncertainty{1.},</div>
<div class="line">                process_uncertainty{0.},</div>
<div class="line">                output_uncertainty{0.},</div>
<div class="line">                update_types&lt;double, double&gt;,</div>
<div class="line">                prediction_types&lt;double, double, double&gt;};</div>
<div class="line"> </div>
<div class="line">  assert(std::format(<span class="stringliteral">&quot;{}&quot;</span>, filter) == R<span class="stringliteral">&quot;({&quot;f&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;g&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;h&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;k&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;p&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_0&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_1&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_2&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;q&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;r&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;s&quot;: 1,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;u&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;update_0&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;update_1&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;x&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;y&quot;: 0,)&quot;</span></div>
<div class="line"><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;z&quot;: 0})&quot;);</span></div>
<div class="line"><span class="stringliteral"></span> </div>
<div class="line"><span class="stringliteral">  </span><span class="keywordflow">return</span> 0;</div>
<div class="line">}()}</div>
<div class="ttc" id="anamespacefcarouge_xhtml_a4a3bd37a96fd242e89867316396afcd5"><div class="ttname"><a href="namespacefcarouge.xhtml#a4a3bd37a96fd242e89867316396afcd5">fcarouge::kalman</a></div><div class="ttdeci">kalman(Arguments... arguments) -&gt; kalman&lt; kalman_internal::deduce_filter&lt; Arguments... &gt; &gt;</div><div class="ttdoc">Deduces the filter type from its declared configuration.</div></div>
</div><!-- fragment --><dl class="test"><dt><b><a class="el" href="test.xhtml#_test000019">Test</a></b></dt><dd>Verifies formatting filters for single-dimension filters with input control and additional arguments. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman__format__arguments_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="kalman__format__arguments_8cpp_source.xhtml">kalman_format_arguments.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   48</span>                          {[] {</div>
<div class="line"><span class="lineno">   49</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter{state{0.},</div>
<div class="line"><span class="lineno">   50</span>                output&lt;double&gt;,</div>
<div class="line"><span class="lineno">   51</span>                input&lt;double&gt;,</div>
<div class="line"><span class="lineno">   52</span>                estimate_uncertainty{1.},</div>
<div class="line"><span class="lineno">   53</span>                process_uncertainty{0.},</div>
<div class="line"><span class="lineno">   54</span>                output_uncertainty{0.},</div>
<div class="line"><span class="lineno">   55</span>                update_types&lt;double, double&gt;,</div>
<div class="line"><span class="lineno">   56</span>                prediction_types&lt;double, double, double&gt;};</div>
<div class="line"><span class="lineno">   57</span> </div>
<div class="line"><span class="lineno">   58</span>  assert(std::format(<span class="stringliteral">&quot;{}&quot;</span>, filter) == R<span class="stringliteral">&quot;({&quot;f&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   59</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;g&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   60</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;h&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   61</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;k&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   62</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;p&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   63</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_0&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   64</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_1&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   65</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;prediction_2&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   66</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;q&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   67</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;r&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   68</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;s&quot;: 1,)&quot;</span></div>
<div class="line"><span class="lineno">   69</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;u&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   70</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;update_0&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   71</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;update_1&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   72</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;x&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   73</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;y&quot;: 0,)&quot;</span></div>
<div class="line"><span class="lineno">   74</span><span class="stringliteral">                                      R</span><span class="stringliteral">&quot;( &quot;z&quot;: 0})&quot;);</span></div>
<div class="line"><span class="lineno">   75</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   76</span><span class="stringliteral">  </span><span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">   77</span>}()};</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter.</div><div class="ttdef"><b>Definition</b> <a href="kalman__forward_8hpp_source.xhtml#l00049">kalman_forward.hpp:49</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02kalman__format__arguments_8cpp_03.xhtml">anonymous_namespace{kalman_format_arguments.cpp}</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
