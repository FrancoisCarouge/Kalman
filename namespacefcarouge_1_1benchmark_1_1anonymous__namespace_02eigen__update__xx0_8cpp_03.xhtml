<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp} Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_1_1divide.xhtml">divide</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aacd2f767bd89c4b79cdb43df1354049b"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Size&gt; </td></tr>
<tr class="memitem:aacd2f767bd89c4b79cdb43df1354049b"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml#aacd2f767bd89c4b79cdb43df1354049b">vector</a> = Eigen::Vector&lt; Type, Size &gt;</td></tr>
<tr class="separator:aacd2f767bd89c4b79cdb43df1354049b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aafd4bf2641b0d6a877e33093999de4eb"><td class="memTemplParams" colspan="2">template&lt;std::size_t StateSize, std::size_t OutputSize&gt; </td></tr>
<tr class="memitem:aafd4bf2641b0d6a877e33093999de4eb"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml#aafd4bf2641b0d6a877e33093999de4eb">eigen_update</a> (::benchmark::State &amp;state)</td></tr>
<tr class="separator:aafd4bf2641b0d6a877e33093999de4eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc41f6f242eb7940f62a476a4faec25"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml#aebc41f6f242eb7940f62a476a4faec25">Name</a> (&quot;eigen_update_${STATE_SIZE}x${OUTPUT_SIZE}x0&quot;) -&gt; Unit(::benchmark::kNanosecond) -&gt;ComputeStatistics(&quot;min&quot;, [](const auto &amp;results) { return std::ranges::min(results);}) -&gt; ComputeStatistics(&quot;max&quot;, [](const auto &amp;results) { return std::ranges::max(results);}) -&gt; UseManualTime() -&gt; Complexity(::benchmark::oAuto) -&gt; DisplayAggregatesOnly(true) -&gt; Repetitions(100)</td></tr>
<tr class="separator:aebc41f6f242eb7940f62a476a4faec25"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aacd2f767bd89c4b79cdb43df1354049b" name="aacd2f767bd89c4b79cdb43df1354049b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacd2f767bd89c4b79cdb43df1354049b">&#9670;&nbsp;</a></span>vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp}::vector = typedef Eigen::Vector&lt;Type, Size&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen__update__xx0_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="eigen__update__xx0_8cpp_source.xhtml">eigen_update_xx0.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aafd4bf2641b0d6a877e33093999de4eb" name="aafd4bf2641b0d6a877e33093999de4eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafd4bf2641b0d6a877e33093999de4eb">&#9670;&nbsp;</a></span>eigen_update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::size_t StateSize, std::size_t OutputSize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp}::eigen_update </td>
          <td>(</td>
          <td class="paramtype">::benchmark::State &amp;&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Benchmark</dt><dd>Measure the update of the filter for different dimensions of states and outputs with the Eigen linear algebra backend. </dd></dl>

<p class="definition">Definition at line <a class="el" href="eigen__update__xx0_8cpp_source.xhtml#l00079">79</a> of file <a class="el" href="eigen__update__xx0_8cpp_source.xhtml">eigen_update_xx0.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   79</span>                                         {</div>
<div class="line"><span class="lineno">   80</span> </div>
<div class="line"><span class="lineno">   81</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> =</div>
<div class="line"><span class="lineno">   82</span>      <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;float, StateSize&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml#aacd2f767bd89c4b79cdb43df1354049b">vector&lt;float, OutputSize&gt;</a>, void, <a class="code hl_struct" href="structfcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_1_1divide.xhtml">divide</a>&gt;;</div>
<div class="line"><span class="lineno">   83</span> </div>
<div class="line"><span class="lineno">   84</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><span class="lineno">   85</span>  std::random_device random_device;</div>
<div class="line"><span class="lineno">   86</span>  std::mt19937 random_generator(random_device());</div>
<div class="line"><span class="lineno">   87</span>  std::uniform_real_distribution uniformly_distributed(0.f, 1.f);</div>
<div class="line"><span class="lineno">   88</span> </div>
<div class="line"><span class="lineno">   89</span>  <span class="keywordflow">for</span> (<span class="keyword">auto</span> _ : state) {</div>
<div class="line"><span class="lineno">   90</span> </div>
<div class="line"><span class="lineno">   91</span>    <span class="keyword">typename</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af56b8ad91ef0452ff3da4e94ce0b7436">kalman::output</a> z;</div>
<div class="line"><span class="lineno">   92</span> </div>
<div class="line"><span class="lineno">   93</span>    <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a>&lt;std::size_t{0}, OutputSize, 1&gt;(</div>
<div class="line"><span class="lineno">   94</span>        [&amp;z, &amp;uniformly_distributed, &amp;random_generator](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">   95</span>          z[position] = uniformly_distributed(random_generator);</div>
<div class="line"><span class="lineno">   96</span>        });</div>
<div class="line"><span class="lineno">   97</span> </div>
<div class="line"><span class="lineno">   98</span>    ::benchmark::ClobberMemory();</div>
<div class="line"><span class="lineno">   99</span>    <span class="keyword">const</span> <span class="keyword">auto</span> start{clock::now()};</div>
<div class="line"><span class="lineno">  100</span> </div>
<div class="line"><span class="lineno">  101</span>    filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2697eb6865282a481107ec3aa4d42af5">update</a>(z);</div>
<div class="line"><span class="lineno">  102</span> </div>
<div class="line"><span class="lineno">  103</span>    ::benchmark::ClobberMemory();</div>
<div class="line"><span class="lineno">  104</span>    <span class="keyword">const</span> <span class="keyword">auto</span> end{clock::now()};</div>
<div class="line"><span class="lineno">  105</span> </div>
<div class="line"><span class="lineno">  106</span>    state.SetIterationTime(</div>
<div class="line"><span class="lineno">  107</span>        std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(end - start)</div>
<div class="line"><span class="lineno">  108</span>            .count());</div>
<div class="line"><span class="lineno">  109</span>  }</div>
<div class="line"><span class="lineno">  110</span>}</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter for C++23.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00171">kalman.hpp:171</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2697eb6865282a481107ec3aa4d42af5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2697eb6865282a481107ec3aa4d42af5">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01275">kalman.hpp:1275</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af56b8ad91ef0452ff3da4e94ce0b7436"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af56b8ad91ef0452ff3da4e94ce0b7436">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00204">kalman.hpp:204</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_xhtml_aacd2f767bd89c4b79cdb43df1354049b"><div class="ttname"><a href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml#aacd2f767bd89c4b79cdb43df1354049b">fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp}::vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Size &gt; vector</div><div class="ttdef"><b>Definition:</b> <a href="eigen__update__xx0_8cpp_source.xhtml#l00057">eigen_update_xx0.cpp:57</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4c0bbc15a41d76dd2b4b23d8566fba57"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00076">utility.hpp:76</a></div></div>
<div class="ttc" id="astructfcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_1_1divide_xhtml"><div class="ttname"><a href="structfcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_1_1divide.xhtml">fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp}::divide</a></div><div class="ttdef"><b>Definition:</b> <a href="eigen__update__xx0_8cpp_source.xhtml#l00059">eigen_update_xx0.cpp:59</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utility_8hpp_source.xhtml#l00076">fcarouge::internal::for_constexpr()</a>, and <a class="el" href="kalman_8hpp_source.xhtml#l01275">fcarouge::kalman&lt; State, Output, Input, Divide, UpdateTypes, PredictionTypes &gt;::update()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03_aafd4bf2641b0d6a877e33093999de4eb_cgraph.svg" width="392" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aebc41f6f242eb7940f62a476a4faec25" name="aebc41f6f242eb7940f62a476a4faec25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebc41f6f242eb7940f62a476a4faec25">&#9670;&nbsp;</a></span>Name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fcarouge::benchmark::anonymous_namespace{eigen_update_xx0.cpp}::Name </td>
          <td>(</td>
          <td class="paramtype">&quot;eigen_update_${STATE_SIZE}x${OUTPUT_SIZE}x0&quot;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  Unit(::benchmark::kNanosecond) -&gt;ComputeStatistics(&quot;min&quot;, [](const auto &amp;results) { return std::ranges::min(results);}) -&gt; ComputeStatistics(&quot;max&quot;, [](const auto &amp;results) { return std::ranges::max(results);}) -&gt; UseManualTime() -&gt; Complexity(::benchmark::oAuto) -&gt; DisplayAggregatesOnly(true) -&gt; Repetitions(100)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>Find a way to remove macros or find a different benchmark library that doesn't use macros. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1benchmark.xhtml">benchmark</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02eigen__update__xx0_8cpp_03.xhtml">anonymous_namespace{eigen_update_xx0.cpp}</a></li>
    <li class="footer">Generated on Thu Oct 27 2022 04:15:30 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
