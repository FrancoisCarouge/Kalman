<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structfcarouge_1_1internal_1_1kalman.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="structfcarouge_1_1internal_1_1kalman-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1internal_1_1kalman__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1internal_1_1kalman__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Types</div></td></tr>
<tr class="memitem:a15f8ae2111c2b7141eaf77bfc976eddc"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> = State</td></tr>
<tr class="memdesc:a15f8ae2111c2b7141eaf77bfc976eddc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state estimate vector X.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">More...</a><br /></td></tr>
<tr class="separator:a15f8ae2111c2b7141eaf77bfc976eddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8755deb8bc331fb6cd8b05f8ede7a089"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> = Output</td></tr>
<tr class="memdesc:a8755deb8bc331fb6cd8b05f8ede7a089"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation vector Z.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">More...</a><br /></td></tr>
<tr class="separator:a8755deb8bc331fb6cd8b05f8ede7a089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2d5d99193ce38bbd98569819f0f0ffc"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">input</a> = Input</td></tr>
<tr class="memdesc:ab2d5d99193ce38bbd98569819f0f0ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control vector U.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">More...</a><br /></td></tr>
<tr class="separator:ab2d5d99193ce38bbd98569819f0f0ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad33efc9cd3219556f5079bb8c3eb3c97"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:ad33efc9cd3219556f5079bb8c3eb3c97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the estimated covariance matrix P.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">More...</a><br /></td></tr>
<tr class="separator:ad33efc9cd3219556f5079bb8c3eb3c97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a40ec6020426d2dd630f6d065c061d1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:a5a40ec6020426d2dd630f6d065c061d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the process noise covariance matrix Q.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">More...</a><br /></td></tr>
<tr class="separator:a5a40ec6020426d2dd630f6d065c061d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f8a5845e45546b2d7fff70aa85e134"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, Output &gt; &gt;</td></tr>
<tr class="memdesc:af1f8a5845e45546b2d7fff70aa85e134"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation, measurement noise covariance matrix R.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">More...</a><br /></td></tr>
<tr class="separator:af1f8a5845e45546b2d7fff70aa85e134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24749d96d76540a88823f17010c7354b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:a24749d96d76540a88823f17010c7354b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state transition matrix F.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">More...</a><br /></td></tr>
<tr class="separator:a24749d96d76540a88823f17010c7354b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a4367c3e7dec24a9a6077cf09d3db9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, State &gt; &gt;</td></tr>
<tr class="memdesc:a41a4367c3e7dec24a9a6077cf09d3db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation transition matrix H.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">More...</a><br /></td></tr>
<tr class="separator:a41a4367c3e7dec24a9a6077cf09d3db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25a9751abe2e43ec852df39561a9ff55"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, Input &gt; &gt;</td></tr>
<tr class="memdesc:a25a9751abe2e43ec852df39561a9ff55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control transition matrix G.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">More...</a><br /></td></tr>
<tr class="separator:a25a9751abe2e43ec852df39561a9ff55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0be139884218d5b6884cd508f9c99615"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a> = std::decay_t&lt; std::invoke_result_t&lt; Transpose, <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a> &gt; &gt;</td></tr>
<tr class="memdesc:a0be139884218d5b6884cd508f9c99615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the gain matrix K.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">More...</a><br /></td></tr>
<tr class="separator:a0be139884218d5b6884cd508f9c99615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a162bb13eacd80b503fd8d5c453098"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a> = <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a></td></tr>
<tr class="memdesc:a90a162bb13eacd80b503fd8d5c453098"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the innovation vector Y.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">More...</a><br /></td></tr>
<tr class="separator:a90a162bb13eacd80b503fd8d5c453098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaa5916bb3602218f307b98f46221e7b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">innovation_uncertainty</a> = <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a></td></tr>
<tr class="memdesc:abaa5916bb3602218f307b98f46221e7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the innovation uncertainty matrix S.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">More...</a><br /></td></tr>
<tr class="separator:abaa5916bb3602218f307b98f46221e7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Functions</div></td></tr>
<tr class="memitem:a549f84cd3dc8cbb3fdefd52aef3c35cc"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a549f84cd3dc8cbb3fdefd52aef3c35cc">update</a> (const auto &amp;...output_z)</td></tr>
<tr class="separator:a549f84cd3dc8cbb3fdefd52aef3c35cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab86860dc9f2992f0fb3c6b71e980c187"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab86860dc9f2992f0fb3c6b71e980c187">predict</a> (const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</td></tr>
<tr class="separator:ab86860dc9f2992f0fb3c6b71e980c187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d57524a5d32755d22d4addce475fa0"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#aa1d57524a5d32755d22d4addce475fa0">predict</a> (const PredictionArguments &amp;...arguments)</td></tr>
<tr class="separator:aa1d57524a5d32755d22d4addce475fa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Variables</div></td></tr>
<tr class="memitem:a3c2fb73364094e21919a0f165a1ba926"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a>&gt;() }</td></tr>
<tr class="memdesc:a3c2fb73364094e21919a0f165a1ba926"><td class="mdescLeft">&#160;</td><td class="mdescRight">The state estimate vector x.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">More...</a><br /></td></tr>
<tr class="separator:a3c2fb73364094e21919a0f165a1ba926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96369239684b9408a98d0b6cf4d7ee6d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a></td></tr>
<tr class="memdesc:a96369239684b9408a98d0b6cf4d7ee6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The estimate uncertainty, covariance matrix P.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">More...</a><br /></td></tr>
<tr class="separator:a96369239684b9408a98d0b6cf4d7ee6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd1da894df4e15d533ff3557665976cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a></td></tr>
<tr class="separator:afd1da894df4e15d533ff3557665976cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6cb3405e455350e066756ba6d412442"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">r</a></td></tr>
<tr class="separator:ae6cb3405e455350e066756ba6d412442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bfec506273dd8b71a17ddb04e6b6cab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>&gt;() }</td></tr>
<tr class="separator:a3bfec506273dd8b71a17ddb04e6b6cab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38eb1cb214c8119eb33abab5cd952d7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a>&gt;() }</td></tr>
<tr class="separator:a38eb1cb214c8119eb33abab5cd952d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af67df6bd81ca269314ef740d50d33e5f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af67df6bd81ca269314ef740d50d33e5f">g</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a>&gt;() }</td></tr>
<tr class="separator:af67df6bd81ca269314ef740d50d33e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a9f6401b10747c71909a5c0d4bd0191"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a>&gt;() }</td></tr>
<tr class="separator:a1a9f6401b10747c71909a5c0d4bd0191"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56d7d2e51bc70d78cf1239f5e56e5065"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a56d7d2e51bc70d78cf1239f5e56e5065">y</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a>&gt;() }</td></tr>
<tr class="separator:a56d7d2e51bc70d78cf1239f5e56e5065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a8f3d5e18f0e84012d77567f59dcef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">innovation_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2a8f3d5e18f0e84012d77567f59dcef">s</a></td></tr>
<tr class="separator:ab2a8f3d5e18f0e84012d77567f59dcef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea2b1a5d957dc58c72ec9d16a164dcd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>&gt;() }</td></tr>
<tr class="separator:a1ea2b1a5d957dc58c72ec9d16a164dcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Function Objects</div></td></tr>
<tr class="memitem:a768ce84161980497fe1237a45011bd48"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">observation_state_h</a></td></tr>
<tr class="memdesc:a768ce84161980497fe1237a45011bd48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the state observation H matrix.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">More...</a><br /></td></tr>
<tr class="separator:a768ce84161980497fe1237a45011bd48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a502a705d45ea16f5998a24318f792aa7"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a502a705d45ea16f5998a24318f792aa7">noise_observation_r</a></td></tr>
<tr class="memdesc:a502a705d45ea16f5998a24318f792aa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute observation noise R matrix.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a502a705d45ea16f5998a24318f792aa7">More...</a><br /></td></tr>
<tr class="separator:a502a705d45ea16f5998a24318f792aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6086d37a82cc56f95efc7a04e04b4692"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a6086d37a82cc56f95efc7a04e04b4692">transition_state_f</a></td></tr>
<tr class="memdesc:a6086d37a82cc56f95efc7a04e04b4692"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the state transition F matrix.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a6086d37a82cc56f95efc7a04e04b4692">More...</a><br /></td></tr>
<tr class="separator:a6086d37a82cc56f95efc7a04e04b4692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e5813637b66d559da0d7d8fd7ef42a"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90e5813637b66d559da0d7d8fd7ef42a">noise_process_q</a></td></tr>
<tr class="memdesc:a90e5813637b66d559da0d7d8fd7ef42a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute process noise Q matrix.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a90e5813637b66d559da0d7d8fd7ef42a">More...</a><br /></td></tr>
<tr class="separator:a90e5813637b66d559da0d7d8fd7ef42a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a66a8ec4bc3b44f1baf393b6942e381"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a>(const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">transition_control_g</a></td></tr>
<tr class="memdesc:a9a66a8ec4bc3b44f1baf393b6942e381"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute control transition G matrix.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">More...</a><br /></td></tr>
<tr class="separator:a9a66a8ec4bc3b44f1baf393b6942e381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4717515ec7921871b2db5d6a6448038"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">transition</a></td></tr>
<tr class="memdesc:af4717515ec7921871b2db5d6a6448038"><td class="mdescLeft">&#160;</td><td class="mdescRight">State transition function f.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">More...</a><br /></td></tr>
<tr class="separator:af4717515ec7921871b2db5d6a6448038"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b6fd589bf54fe4d2a03ec2c3e9644b"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">observation</a></td></tr>
<tr class="memdesc:ad8b6fd589bf54fe4d2a03ec2c3e9644b"><td class="mdescLeft">&#160;</td><td class="mdescRight">State observation function h.  <a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">More...</a><br /></td></tr>
<tr class="separator:ad8b6fd589bf54fe4d2a03ec2c3e9644b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af3d4ae2e00204dee7935f1cebfa643"><td class="memItemLeft" align="right" valign="top">Transpose&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a></td></tr>
<tr class="separator:a4af3d4ae2e00204dee7935f1cebfa643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a458b1580ace1c1359eaee0606070dd28"><td class="memItemLeft" align="right" valign="top">Divide&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a458b1580ace1c1359eaee0606070dd28">divide</a></td></tr>
<tr class="separator:a458b1580ace1c1359eaee0606070dd28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a451576ad62b329ab221fe84b0f90aa4b"><td class="memItemLeft" align="right" valign="top">Symmetrize&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a451576ad62b329ab221fe84b0f90aa4b">symmetrize</a></td></tr>
<tr class="separator:a451576ad62b329ab221fe84b0f90aa4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d1c48812cb68dfa2f11562d28be045"><td class="memItemLeft" align="right" valign="top">Identity&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a77d1c48812cb68dfa2f11562d28be045">identity</a></td></tr>
<tr class="separator:a77d1c48812cb68dfa2f11562d28be045"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename State, typename Output, typename Input, typename Transpose, typename Symmetrize, typename Divide, typename Identity, typename... PredictionArguments&gt;<br />
struct fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</div>
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad33efc9cd3219556f5079bb8c3eb3c97" name="ad33efc9cd3219556f5079bb8c3eb3c97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad33efc9cd3219556f5079bb8c3eb3c97">&#9670;&nbsp;</a></span>estimate_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the estimated covariance matrix P. </p>
<p >Also known as Σ. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00071">71</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a0be139884218d5b6884cd508f9c99615" name="a0be139884218d5b6884cd508f9c99615"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0be139884218d5b6884cd508f9c99615">&#9670;&nbsp;</a></span>gain</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a> =  std::decay_t&lt;std::invoke_result_t&lt;Transpose, <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the gain matrix K. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00101">101</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a90a162bb13eacd80b503fd8d5c453098" name="a90a162bb13eacd80b503fd8d5c453098"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a162bb13eacd80b503fd8d5c453098">&#9670;&nbsp;</a></span>innovation</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a> =  <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the innovation vector Y. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00104">104</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="abaa5916bb3602218f307b98f46221e7b" name="abaa5916bb3602218f307b98f46221e7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaa5916bb3602218f307b98f46221e7b">&#9670;&nbsp;</a></span>innovation_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">innovation_uncertainty</a> =  <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the innovation uncertainty matrix S. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00107">107</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ab2d5d99193ce38bbd98569819f0f0ffc" name="ab2d5d99193ce38bbd98569819f0f0ffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2d5d99193ce38bbd98569819f0f0ffc">&#9670;&nbsp;</a></span>input</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">input</a> =  Input</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control vector U. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a25a9751abe2e43ec852df39561a9ff55" name="a25a9751abe2e43ec852df39561a9ff55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25a9751abe2e43ec852df39561a9ff55">&#9670;&nbsp;</a></span>input_control</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, Input&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control transition matrix G. </p>
<p >Also known as B. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00097">97</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a8755deb8bc331fb6cd8b05f8ede7a089" name="a8755deb8bc331fb6cd8b05f8ede7a089"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8755deb8bc331fb6cd8b05f8ede7a089">&#9670;&nbsp;</a></span>output</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> =  Output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation vector Z. </p>
<p >Also known as Y or O. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00063">63</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a41a4367c3e7dec24a9a6077cf09d3db9" name="a41a4367c3e7dec24a9a6077cf09d3db9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41a4367c3e7dec24a9a6077cf09d3db9">&#9670;&nbsp;</a></span>output_model</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, Output, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation transition matrix H. </p>
<p >Also known as C. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00091">91</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="af1f8a5845e45546b2d7fff70aa85e134" name="af1f8a5845e45546b2d7fff70aa85e134"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1f8a5845e45546b2d7fff70aa85e134">&#9670;&nbsp;</a></span>output_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, Output, Output&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation, measurement noise covariance matrix R. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00079">79</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a5a40ec6020426d2dd630f6d065c061d1" name="a5a40ec6020426d2dd630f6d065c061d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a40ec6020426d2dd630f6d065c061d1">&#9670;&nbsp;</a></span>process_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the process noise covariance matrix Q. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00075">75</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a15f8ae2111c2b7141eaf77bfc976eddc" name="a15f8ae2111c2b7141eaf77bfc976eddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15f8ae2111c2b7141eaf77bfc976eddc">&#9670;&nbsp;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> =  State</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state estimate vector X. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a24749d96d76540a88823f17010c7354b" name="a24749d96d76540a88823f17010c7354b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24749d96d76540a88823f17010c7354b">&#9670;&nbsp;</a></span>state_transition</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state transition matrix F. </p>
<p >Also known as Φ or A. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00085">85</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa1d57524a5d32755d22d4addce475fa0" name="aa1d57524a5d32755d22d4addce475fa0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d57524a5d32755d22d4addce475fa0">&#9670;&nbsp;</a></span>predict() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict </td>
          <td>(</td>
          <td class="paramtype">const PredictionArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00287">287</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  {</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a6086d37a82cc56f95efc7a04e04b4692">transition_state_f</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, arguments...);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90e5813637b66d559da0d7d8fd7ef42a">noise_process_q</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, arguments...);</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">transition</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, arguments...);</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a451576ad62b329ab221fe84b0f90aa4b">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a> });</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a38eb1cb214c8119eb33abab5cd952d7b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">fcarouge::internal::kalman::f</a></div><div class="ttdeci">state_transition f</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00134">kalman.hpp:134</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a3c2fb73364094e21919a0f165a1ba926"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">fcarouge::internal::kalman::x</a></div><div class="ttdeci">state x</div><div class="ttdoc">The state estimate vector x.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00117">kalman.hpp:117</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a451576ad62b329ab221fe84b0f90aa4b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a451576ad62b329ab221fe84b0f90aa4b">fcarouge::internal::kalman::symmetrize</a></div><div class="ttdeci">Symmetrize symmetrize</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00245">kalman.hpp:245</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a4af3d4ae2e00204dee7935f1cebfa643"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">fcarouge::internal::kalman::transpose</a></div><div class="ttdeci">Transpose transpose</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00243">kalman.hpp:243</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a6086d37a82cc56f95efc7a04e04b4692"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a6086d37a82cc56f95efc7a04e04b4692">fcarouge::internal::kalman::transition_state_f</a></div><div class="ttdeci">std::function&lt; state_transition(const state &amp;, const PredictionArguments &amp;...)&gt; transition_state_f</div><div class="ttdoc">Compute the state transition F matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00190">kalman.hpp:190</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a90e5813637b66d559da0d7d8fd7ef42a"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a90e5813637b66d559da0d7d8fd7ef42a">fcarouge::internal::kalman::noise_process_q</a></div><div class="ttdeci">std::function&lt; process_uncertainty(const state &amp;, const PredictionArguments &amp;...)&gt; noise_process_q</div><div class="ttdoc">Compute process noise Q matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00202">kalman.hpp:202</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a96369239684b9408a98d0b6cf4d7ee6d"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">fcarouge::internal::kalman::p</a></div><div class="ttdeci">estimate_uncertainty p</div><div class="ttdoc">The estimate uncertainty, covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00122">kalman.hpp:122</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ad33efc9cd3219556f5079bb8c3eb3c97"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">fcarouge::internal::kalman::estimate_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; estimate_uncertainty</div><div class="ttdoc">Type of the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00071">kalman.hpp:72</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_af4717515ec7921871b2db5d6a6448038"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">fcarouge::internal::kalman::transition</a></div><div class="ttdeci">std::function&lt; state(const state &amp;, const PredictionArguments &amp;...)&gt; transition</div><div class="ttdoc">State transition function f.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00227">kalman.hpp:227</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_afd1da894df4e15d533ff3557665976cf"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">fcarouge::internal::kalman::q</a></div><div class="ttdeci">process_uncertainty q</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00126">kalman.hpp:126</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00134">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::f</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00202">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::noise_process_q</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00122">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00126">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00245">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::symmetrize</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00227">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00190">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition_state_f</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00243">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transpose</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00117">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x</a>.</p>

</div>
</div>
<a id="ab86860dc9f2992f0fb3c6b71e980c187" name="ab86860dc9f2992f0fb3c6b71e980c187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab86860dc9f2992f0fb3c6b71e980c187">&#9670;&nbsp;</a></span>predict() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict </td>
          <td>(</td>
          <td class="paramtype">const PredictionArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>input_u</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000009">Todo:</a></b></dt><dd><p class="startdd">F would be the predict Jacobian(x) extended? </p>
<p class="enddd">Would x = extended_ff(x, u) be extended? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">275</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  {</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keyword">const</span> <span class="keyword">auto</span> u{ <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">input</a>{ input_u... } };</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a6086d37a82cc56f95efc7a04e04b4692">transition_state_f</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, arguments...);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90e5813637b66d559da0d7d8fd7ef42a">noise_process_q</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, arguments...);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af67df6bd81ca269314ef740d50d33e5f">g</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">transition_control_g</a>(arguments...);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af67df6bd81ca269314ef740d50d33e5f">g</a> * u;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a451576ad62b329ab221fe84b0f90aa4b">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a> });</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9a66a8ec4bc3b44f1baf393b6942e381"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">fcarouge::internal::kalman::transition_control_g</a></div><div class="ttdeci">std::function&lt; input_control(const PredictionArguments &amp;...)&gt; transition_control_g</div><div class="ttdoc">Compute control transition G matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00213">kalman.hpp:213</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab2d5d99193ce38bbd98569819f0f0ffc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">fcarouge::internal::kalman::input</a></div><div class="ttdeci">Input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00066">kalman.hpp:66</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_af67df6bd81ca269314ef740d50d33e5f"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#af67df6bd81ca269314ef740d50d33e5f">fcarouge::internal::kalman::g</a></div><div class="ttdeci">input_control g</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00137">kalman.hpp:137</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00134">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::f</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00137">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::g</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00202">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::noise_process_q</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00122">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00126">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00245">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::symmetrize</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00213">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition_control_g</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00190">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition_state_f</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00243">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transpose</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00117">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00860">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::operator()()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1internal_1_1kalman_ab86860dc9f2992f0fb3c6b71e980c187_icgraph.svg" width="360" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a549f84cd3dc8cbb3fdefd52aef3c35cc" name="a549f84cd3dc8cbb3fdefd52aef3c35cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a549f84cd3dc8cbb3fdefd52aef3c35cc">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>output_z</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000008">Todo:</a></b></dt><dd><p class="startdd">Do we want to store i - k * h in a temporary result for reuse? Or does the compiler/linker do it for us? </p>
<p class="interdd">H would be the observe Jacobian(x) extended? </p>
<p class="enddd">Would innovation y = z - extended_hh(x) be extended? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">257</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  {</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    <span class="keyword">const</span> <span class="keyword">auto</span> i{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a77d1c48812cb68dfa2f11562d28be045">identity</a>.template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>&gt;() };</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span> </div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a> = <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>{ output_z... };</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">observation_state_h</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">r</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a502a705d45ea16f5998a24318f792aa7">noise_observation_r</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>, <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a>);</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2a8f3d5e18f0e84012d77567f59dcef">s</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">r</a>;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a458b1580ace1c1359eaee0606070dd28">divide</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a>), <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2a8f3d5e18f0e84012d77567f59dcef">s</a>);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    <span class="comment">// Do we want to support custom y = output_difference(z, observation(x))?</span></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a56d7d2e51bc70d78cf1239f5e56e5065">y</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a> - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">observation</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a56d7d2e51bc70d78cf1239f5e56e5065">y</a>;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a451576ad62b329ab221fe84b0f90aa4b">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>{</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>        (i - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a>) * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(i - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">r</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a4af3d4ae2e00204dee7935f1cebfa643">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">k</a>) });</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a1a9f6401b10747c71909a5c0d4bd0191"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a1a9f6401b10747c71909a5c0d4bd0191">fcarouge::internal::kalman::k</a></div><div class="ttdeci">gain k</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00140">kalman.hpp:140</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a1ea2b1a5d957dc58c72ec9d16a164dcd"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">fcarouge::internal::kalman::z</a></div><div class="ttdeci">output z</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00145">kalman.hpp:145</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a3bfec506273dd8b71a17ddb04e6b6cab"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">fcarouge::internal::kalman::h</a></div><div class="ttdeci">output_model h</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00133">kalman.hpp:133</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a458b1580ace1c1359eaee0606070dd28"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a458b1580ace1c1359eaee0606070dd28">fcarouge::internal::kalman::divide</a></div><div class="ttdeci">Divide divide</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00244">kalman.hpp:244</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a502a705d45ea16f5998a24318f792aa7"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a502a705d45ea16f5998a24318f792aa7">fcarouge::internal::kalman::noise_observation_r</a></div><div class="ttdeci">std::function&lt; output_uncertainty(const state &amp;, const output &amp;)&gt; noise_observation_r</div><div class="ttdoc">Compute observation noise R matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00173">kalman.hpp:173</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a56d7d2e51bc70d78cf1239f5e56e5065"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a56d7d2e51bc70d78cf1239f5e56e5065">fcarouge::internal::kalman::y</a></div><div class="ttdeci">innovation y</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00141">kalman.hpp:141</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a768ce84161980497fe1237a45011bd48"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">fcarouge::internal::kalman::observation_state_h</a></div><div class="ttdeci">std::function&lt; output_model(const state &amp;)&gt; observation_state_h</div><div class="ttdoc">Compute the state observation H matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00164">kalman.hpp:164</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a77d1c48812cb68dfa2f11562d28be045"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a77d1c48812cb68dfa2f11562d28be045">fcarouge::internal::kalman::identity</a></div><div class="ttdeci">Identity identity</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00246">kalman.hpp:246</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a8755deb8bc331fb6cd8b05f8ede7a089"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">fcarouge::internal::kalman::output</a></div><div class="ttdeci">Output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab2a8f3d5e18f0e84012d77567f59dcef"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2a8f3d5e18f0e84012d77567f59dcef">fcarouge::internal::kalman::s</a></div><div class="ttdeci">innovation_uncertainty s</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00142">kalman.hpp:142</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ad8b6fd589bf54fe4d2a03ec2c3e9644b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">fcarouge::internal::kalman::observation</a></div><div class="ttdeci">std::function&lt; output(const state &amp;)&gt; observation</div><div class="ttdoc">State observation function h.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00239">kalman.hpp:239</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ae6cb3405e455350e066756ba6d412442"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">fcarouge::internal::kalman::r</a></div><div class="ttdeci">output_uncertainty r</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00129">kalman.hpp:129</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00244">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::divide</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00133">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::h</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00140">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::k</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00173">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::noise_observation_r</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00239">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::observation</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00164">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::observation_state_h</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00122">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00129">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::r</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00142">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::s</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00245">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::symmetrize</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00243">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transpose</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00117">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x</a>, <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00141">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::y</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00145">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::z</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00860">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::operator()()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1internal_1_1kalman_a549f84cd3dc8cbb3fdefd52aef3c35cc_icgraph.svg" width="360" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a458b1580ace1c1359eaee0606070dd28" name="a458b1580ace1c1359eaee0606070dd28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a458b1580ace1c1359eaee0606070dd28">&#9670;&nbsp;</a></span>divide</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Divide <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::divide</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00244">244</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a38eb1cb214c8119eb33abab5cd952d7b" name="a38eb1cb214c8119eb33abab5cd952d7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38eb1cb214c8119eb33abab5cd952d7b">&#9670;&nbsp;</a></span>f</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::f { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00134">134</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>.</p>

</div>
</div>
<a id="af67df6bd81ca269314ef740d50d33e5f" name="af67df6bd81ca269314ef740d50d33e5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af67df6bd81ca269314ef740d50d33e5f">&#9670;&nbsp;</a></span>g</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::g { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>Should G be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00137">137</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>.</p>

</div>
</div>
<a id="a3bfec506273dd8b71a17ddb04e6b6cab" name="a3bfec506273dd8b71a17ddb04e6b6cab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bfec506273dd8b71a17ddb04e6b6cab">&#9670;&nbsp;</a></span>h</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::h { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>Should H be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00133">133</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a77d1c48812cb68dfa2f11562d28be045" name="a77d1c48812cb68dfa2f11562d28be045"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77d1c48812cb68dfa2f11562d28be045">&#9670;&nbsp;</a></span>identity</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Identity <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="structfcarouge_1_1internal_1_1identity.xhtml">identity</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00246">246</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a1a9f6401b10747c71909a5c0d4bd0191" name="a1a9f6401b10747c71909a5c0d4bd0191"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a9f6401b10747c71909a5c0d4bd0191">&#9670;&nbsp;</a></span>k</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::k { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">gain</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd>Should K be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00140">140</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a502a705d45ea16f5998a24318f792aa7" name="a502a705d45ea16f5998a24318f792aa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a502a705d45ea16f5998a24318f792aa7">&#9670;&nbsp;</a></span>noise_observation_r</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> &amp;)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::noise_observation_r</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>,</div>
<div class="line">                                  <span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a>) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a> {</div>
<div class="line">        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line">        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a1ea2b1a5d957dc58c72ec9d16a164dcd">z</a>);</div>
<div class="line">        <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ae6cb3405e455350e066756ba6d412442">r</a>;</div>
<div class="line">      } }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a15f8ae2111c2b7141eaf77bfc976eddc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">fcarouge::internal::kalman::state</a></div><div class="ttdeci">State state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00058">kalman.hpp:58</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_af1f8a5845e45546b2d7fff70aa85e134"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">fcarouge::internal::kalman::output_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, Output &gt; &gt; output_uncertainty</div><div class="ttdoc">Type of the observation, measurement noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00079">kalman.hpp:80</a></div></div>
</div><!-- fragment -->
<p>Compute observation noise R matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00173">173</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00510">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::r()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a90e5813637b66d559da0d7d8fd7ef42a" name="a90e5813637b66d559da0d7d8fd7ef42a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90e5813637b66d559da0d7d8fd7ef42a">&#9670;&nbsp;</a></span>noise_process_q</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::noise_process_q</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>,</div>
<div class="line">               <span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a> {</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a5a40ec6020426d2dd630f6d065c061d1"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">fcarouge::internal::kalman::process_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; process_uncertainty</div><div class="ttdoc">Type of the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00075">kalman.hpp:76</a></div></div>
</div><!-- fragment -->
<p>Compute process noise Q matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00202">202</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="kalman_8hpp_source.xhtml#l00428">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q()</a>.</p>

</div>
</div>
<a id="ad8b6fd589bf54fe4d2a03ec2c3e9644b" name="ad8b6fd589bf54fe4d2a03ec2c3e9644b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8b6fd589bf54fe4d2a03ec2c3e9644b">&#9670;&nbsp;</a></span>observation</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::observation</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> { <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>; }</div>
<div class="line">  }</div>
</div><!-- fragment -->
<p>State observation function h. </p>
<p >For linear system h(x) = H * X. For non-linear system, or extended filter, the client implements a linearization of the observation function hand the state observation H matrix is the Jacobian of the state observation function. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00239">239</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00812">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::observation()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a768ce84161980497fe1237a45011bd48" name="a768ce84161980497fe1237a45011bd48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a768ce84161980497fe1237a45011bd48">&#9670;&nbsp;</a></span>observation_state_h</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::observation_state_h</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">output_model</a> {</div>
<div class="line">      <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line">      <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3bfec506273dd8b71a17ddb04e6b6cab">h</a>;</div>
<div class="line">    }</div>
<div class="line">  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a41a4367c3e7dec24a9a6077cf09d3db9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">fcarouge::internal::kalman::output_model</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, State &gt; &gt; output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00091">kalman.hpp:92</a></div></div>
</div><!-- fragment -->
<p>Compute the state observation H matrix. </p>
<p >The state observation H is also known as C. For non-linear system, or extended filter, H is the Jacobian of the state observation function. H = ∂h/∂X = ∂hj/∂xi that is each row i contains the derivatives of the state observation function for every element j in the state vector X.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000006">Todo:</a></b></dt><dd>Should we pass through the reference to the state x or have the user access it through k.x() when needed? Where does the practical/performance tradeoff leans toward? For the general case? For the specialized cases? Same question applies to other parameters. </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00164">164</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00667">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::h()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a96369239684b9408a98d0b6cf4d7ee6d" name="a96369239684b9408a98d0b6cf4d7ee6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96369239684b9408a98d0b6cf4d7ee6d">&#9670;&nbsp;</a></span>p</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">estimate_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
</div><!-- fragment -->
<p>The estimate uncertainty, covariance matrix P. </p>
<p >The estimate uncertainty, covariance is also known as Σ. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00122">122</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="afd1da894df4e15d533ff3557665976cf" name="afd1da894df4e15d533ff3557665976cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd1da894df4e15d533ff3557665976cf">&#9670;&nbsp;</a></span>q</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    0 * Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">process_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00126">126</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>.</p>

</div>
</div>
<a id="ae6cb3405e455350e066756ba6d412442" name="ae6cb3405e455350e066756ba6d412442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6cb3405e455350e066756ba6d412442">&#9670;&nbsp;</a></span>r</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::r</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ 0 *</div>
<div class="line">                        Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">output_uncertainty</a>&gt;() }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00129">129</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="ab2a8f3d5e18f0e84012d77567f59dcef" name="ab2a8f3d5e18f0e84012d77567f59dcef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a8f3d5e18f0e84012d77567f59dcef">&#9670;&nbsp;</a></span>s</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">innovation_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::s</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">innovation_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_abaa5916bb3602218f307b98f46221e7b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">fcarouge::internal::kalman::innovation_uncertainty</a></div><div class="ttdeci">output_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00107">kalman.hpp:107</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00142">142</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a451576ad62b329ab221fe84b0f90aa4b" name="a451576ad62b329ab221fe84b0f90aa4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a451576ad62b329ab221fe84b0f90aa4b">&#9670;&nbsp;</a></span>symmetrize</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Symmetrize <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::symmetrize</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00245">245</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="af4717515ec7921871b2db5d6a6448038" name="af4717515ec7921871b2db5d6a6448038"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4717515ec7921871b2db5d6a6448038">&#9670;&nbsp;</a></span>transition</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>,</div>
<div class="line">                         <span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> {</div>
<div class="line">        (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">        <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>;</div>
<div class="line">      } }</div>
</div><!-- fragment -->
<p>State transition function f. </p>
<p >For linear system f(x) = F * X. For non-linear system, or extended filter, the client implements a linearization of the transition function f and the state transition F matrix is the Jacobian of the state transition function. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00227">227</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00287">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="kalman_8hpp_source.xhtml#l00796">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition()</a>.</p>

</div>
</div>
<a id="a9a66a8ec4bc3b44f1baf393b6942e381" name="a9a66a8ec4bc3b44f1baf393b6942e381"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a66a8ec4bc3b44f1baf393b6942e381">&#9670;&nbsp;</a></span>transition_control_g</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a>(const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition_control_g</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">input_control</a> {</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af67df6bd81ca269314ef740d50d33e5f">g</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a25a9751abe2e43ec852df39561a9ff55"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">fcarouge::internal::kalman::input_control</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, Input &gt; &gt; input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00097">kalman.hpp:98</a></div></div>
</div><!-- fragment -->
<p>Compute control transition G matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00213">213</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00744">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::g()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>.</p>

</div>
</div>
<a id="a6086d37a82cc56f95efc7a04e04b4692" name="a6086d37a82cc56f95efc7a04e04b4692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6086d37a82cc56f95efc7a04e04b4692">&#9670;&nbsp;</a></span>transition_state_f</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;, const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transition_state_f</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>,</div>
<div class="line">               <span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">state_transition</a> {</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>);</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a38eb1cb214c8119eb33abab5cd952d7b">f</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a24749d96d76540a88823f17010c7354b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">fcarouge::internal::kalman::state_transition</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00085">kalman.hpp:86</a></div></div>
</div><!-- fragment -->
<p>Compute the state transition F matrix. </p>
<p >The state transition F matrix is also known as Φ or A. For non-linear system, or extended filter, F is the Jacobian of the state transition function. F = ∂f/∂X = ∂fj/∂xi that is each row i contains the derivatives of the state transition function for every element j in the state vector X.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000007">Todo:</a></b></dt><dd>Pass the arguments by universal reference? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00190">190</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00588">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::f()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>.</p>

</div>
</div>
<a id="a4af3d4ae2e00204dee7935f1cebfa643" name="a4af3d4ae2e00204dee7935f1cebfa643"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4af3d4ae2e00204dee7935f1cebfa643">&#9670;&nbsp;</a></span>transpose</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Transpose <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::transpose</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00243">243</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a3c2fb73364094e21919a0f165a1ba926" name="a3c2fb73364094e21919a0f165a1ba926"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c2fb73364094e21919a0f165a1ba926">&#9670;&nbsp;</a></span>x</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">state</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The state estimate vector x. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>Is there a simpler, more portable way to get a zero initialization? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00117">117</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00275">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict()</a>, and <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a56d7d2e51bc70d78cf1239f5e56e5065" name="a56d7d2e51bc70d78cf1239f5e56e5065"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56d7d2e51bc70d78cf1239f5e56e5065">&#9670;&nbsp;</a></span>y</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::y { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">innovation</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00141">141</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<a id="a1ea2b1a5d957dc58c72ec9d16a164dcd" name="a1ea2b1a5d957dc58c72ec9d16a164dcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ea2b1a5d957dc58c72ec9d16a164dcd">&#9670;&nbsp;</a></span>z</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::z { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">output</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00145">145</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00257">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/fcarouge/internal/<a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1internal.xhtml">internal</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">kalman</a></li>
    <li class="footer">Generated on Sat Jun 25 2022 00:28:48 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
