<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: test/eigen_initialization.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('eigen__initialization_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">eigen_initialization.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="eigen__initialization_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#include &quot;<a class="code" href="kalman_8hpp.xhtml">fcarouge/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="preprocessor">#include &lt;Eigen/Eigen&gt;</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1test.xhtml">fcarouge::test</a> {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml">   46</a></span><span class="keyword">namespace </span>{</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">   48</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Size&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector</a> = Eigen::Vector&lt;Type, Size&gt;;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto RowSize, auto ColumnSize&gt;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">   51</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix</a> = Eigen::Matrix&lt;Type, RowSize, ColumnSize&gt;;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a991d530609aef3e10f6b455c79ffbc3d">   54</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a991d530609aef3e10f6b455c79ffbc3d">defaults543</a>{[] {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> =</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>      <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 5&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;</a>&gt;;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z3x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;::Zero</a>()};</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x3{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 3&gt;::Identity</a>()};</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == i5x5);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i5x3);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i4x5);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i5x4);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == i5x5);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == z5x5 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == z4x4 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == i4x4);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == z3x1 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == z5x1 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == z4x1);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == z4x1);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>}()};</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1fa5d89d767ab85f6b030848ca0b7183">   88</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1fa5d89d767ab85f6b030848ca0b7183">defaults54</a>{[] {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 5&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;</a>&gt;;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == i5x5);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i4x5);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i5x4);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == i5x5);</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == z5x5 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == z4x4 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == i4x4);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == z5x1 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == z4x1);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == z4x1);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>}()};</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a7ebadc8b8c8a56900a05ae40620cdc6d">  117</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a7ebadc8b8c8a56900a05ae40620cdc6d">defaults143</a>{[] {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;double, vector&lt;double, 4&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;</a>&gt;;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z3x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;::Zero</a>()};</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 1&gt;::Identity</a>()};</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x3{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 3&gt;::Identity</a>()};</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == 1);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i1x3);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i4x1);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i1x4);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == 1);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == z4x4 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == i4x4);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == z3x1 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == z4x1);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == z4x1);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>}()};</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1bee717e0ee1900581eb442a6eda7bf3">  147</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1bee717e0ee1900581eb442a6eda7bf3">defaults513</a>{[] {</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 5&gt;</a>, double, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;</a>&gt;;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z3x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;::Zero</a>()};</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x3{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 3&gt;::Identity</a>()};</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 1&gt;::Identity</a>()};</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == i5x5);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i5x3);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i1x5);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i5x1);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == i5x5);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == z5x5 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == 1);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == z3x1 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == z5x1 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == 0);</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == 0);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>}()};</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a0143751961127719a363bf55a9d8a1e5">  177</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a0143751961127719a363bf55a9d8a1e5">defaults541</a>{[] {</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 5&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;</a>, <span class="keywordtype">double</span>&gt;;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 1&gt;::Identity</a>()};</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == i5x5);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i5x1);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i4x5);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i5x4);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == i5x5);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == z5x5 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == z4x4 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == i4x4);</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == z5x1 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == z4x1);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == z4x1);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>}()};</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a364cc76ccc9e880d7a31a8c4d0457c80">  209</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a364cc76ccc9e880d7a31a8c4d0457c80">defaults511</a>{[] {</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 5&gt;</a>, double, <span class="keywordtype">double</span>&gt;;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 1&gt;::Identity</a>()};</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Identity</a>()};</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z5x5{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 5, 5&gt;::Zero</a>()};</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == i5x5);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i5x1);</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i1x5);</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i5x1);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == i5x5);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == z5x5 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == 1);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == z5x1 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == 0);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == 0);</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>}()};</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a58a71bfb2c59642fa2d863c0d6ff1ce8">  237</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a58a71bfb2c59642fa2d863c0d6ff1ce8">defaults141</a>{[] {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;double, vector&lt;double, 4&gt;</a>, <span class="keywordtype">double</span>&gt;;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 1&gt;::Identity</a>()};</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 4&gt;::Identity</a>()};</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z4x4{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 4, 4&gt;::Zero</a>()};</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == 1);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == 1);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == i4x1);</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == i1x4);</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == 1);</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == z4x4 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == i4x4);</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == z4x1);</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == z4x1);</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>}()};</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#aa4d409e8814f1ff95ca98965a5aab2bd">  264</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#aa4d409e8814f1ff95ca98965a5aab2bd">defaults113</a>{[] {</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;double, double, vector&lt;double, 3&gt;</a>&gt;;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  <span class="keyword">const</span> <span class="keyword">auto</span> z3x1{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">vector&lt;double, 3&gt;::Zero</a>()};</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i1x3{<a class="code hl_typedef" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">matrix&lt;double, 1, 3&gt;::Identity</a>()};</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>() == 1);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">g</a>() == i1x3);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>() == 1);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">k</a>() == 1);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>() == 1);</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No process noise by default.&quot;</span>);</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;No observation noise by default.&quot;</span>);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">s</a>() == 1);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">u</a>() == z3x1 &amp;&amp; <span class="stringliteral">&quot;No initial control.&quot;</span>);</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>() == 0 &amp;&amp; <span class="stringliteral">&quot;Origin state.&quot;</span>);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">y</a>() == 0);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  assert(filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">z</a>() == 0);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>}()};</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>} <span class="comment">// namespace fcarouge::test</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter for C++23.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00171">kalman.hpp:171</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a20e4a128994e061d95c7cc8547edeae2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; const process_uncertainty &amp;</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00872">kalman.hpp:872</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a321ed407a09472e739e593efd9d89dd7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; const estimate_uncertainty &amp;</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00838">kalman.hpp:838</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a366196a038db0f54b7322b29f1862be0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a366196a038db0f54b7322b29f1862be0">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; const innovation_uncertainty &amp;</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01104">kalman.hpp:1104</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4734807882ed3bd3aeaffbb678e37be7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4734807882ed3bd3aeaffbb678e37be7">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; const input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01040">kalman.hpp:1040</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a70e5dcb292b21eb58a81edf2b50bdf98"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; const output_model &amp;</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00998">kalman.hpp:998</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a74e44ad09f9cfef290aa929c3cc9a7e9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a74e44ad09f9cfef290aa929c3cc9a7e9">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; const gain &amp;</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01086">kalman.hpp:1086</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a75faf76f6d2e995276409a50a216f36b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a75faf76f6d2e995276409a50a216f36b">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; const input &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the last control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00828">kalman.hpp:828</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a97aceea287d6f047b294f556db529baa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; const state_transition &amp;</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00956">kalman.hpp:956</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac1f06b20e6494b0301d5b2ab8e4214b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; const state &amp;</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00768">kalman.hpp:768</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae595d0ba1c0ede697b3669db0ff2dc20"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae595d0ba1c0ede697b3669db0ff2dc20">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; const innovation &amp;</div><div class="ttdoc">Returns the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01095">kalman.hpp:1095</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afd422d2d0b9bdf85ffc00df9ae380be3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; const output_uncertainty &amp;</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00914">kalman.hpp:914</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afe87bffe9950ca5fbb77b3ef8b610dac"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afe87bffe9950ca5fbb77b3ef8b610dac">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; const output &amp;</div><div class="ttdoc">Returns the last observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00819">kalman.hpp:819</a></div></div>
<div class="ttc" id="akalman_8hpp_xhtml"><div class="ttname"><a href="kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The main Kalman filter class.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a0143751961127719a363bf55a9d8a1e5"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a0143751961127719a363bf55a9d8a1e5">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults541</a></div><div class="ttdeci">auto defaults541</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00177">eigen_initialization.cpp:177</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a1bee717e0ee1900581eb442a6eda7bf3"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1bee717e0ee1900581eb442a6eda7bf3">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults513</a></div><div class="ttdeci">auto defaults513</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00147">eigen_initialization.cpp:147</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a1fa5d89d767ab85f6b030848ca0b7183"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a1fa5d89d767ab85f6b030848ca0b7183">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults54</a></div><div class="ttdeci">auto defaults54</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00088">eigen_initialization.cpp:88</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a303fc28c1f0d25034be22be1666a2fec"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a303fc28c1f0d25034be22be1666a2fec">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Size &gt; vector</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00048">eigen_initialization.cpp:48</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a364cc76ccc9e880d7a31a8c4d0457c80"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a364cc76ccc9e880d7a31a8c4d0457c80">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults511</a></div><div class="ttdeci">auto defaults511</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00209">eigen_initialization.cpp:209</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a58a71bfb2c59642fa2d863c0d6ff1ce8"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a58a71bfb2c59642fa2d863c0d6ff1ce8">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults141</a></div><div class="ttdeci">auto defaults141</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00237">eigen_initialization.cpp:237</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a778d05129b0c49afddba132effcd412e"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a778d05129b0c49afddba132effcd412e">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::matrix</a></div><div class="ttdeci">Eigen::Matrix&lt; Type, RowSize, ColumnSize &gt; matrix</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00051">eigen_initialization.cpp:51</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a7ebadc8b8c8a56900a05ae40620cdc6d"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a7ebadc8b8c8a56900a05ae40620cdc6d">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults143</a></div><div class="ttdeci">auto defaults143</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00117">eigen_initialization.cpp:117</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_a991d530609aef3e10f6b455c79ffbc3d"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#a991d530609aef3e10f6b455c79ffbc3d">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults543</a></div><div class="ttdeci">auto defaults543</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00054">eigen_initialization.cpp:54</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03_xhtml_aa4d409e8814f1ff95ca98965a5aab2bd"><div class="ttname"><a href="namespacefcarouge_1_1test_1_1anonymous__namespace_02eigen__initialization_8cpp_03.xhtml#aa4d409e8814f1ff95ca98965a5aab2bd">fcarouge::test::anonymous_namespace{eigen_initialization.cpp}::defaults113</a></div><div class="ttdeci">auto defaults113</div><div class="ttdef"><b>Definition:</b> <a href="eigen__initialization_8cpp_source.xhtml#l00264">eigen_initialization.cpp:264</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1test_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1test.xhtml">fcarouge::test</a></div><div class="ttdoc">Unit, integration, regression, and usage tests.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_13e138d54eb8818da29c3992edef070a.xhtml">test</a></li><li class="navelem"><a class="el" href="eigen__initialization_8cpp.xhtml">eigen_initialization.cpp</a></li>
    <li class="footer">Generated on Sun Nov 20 2022 23:51:26 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
