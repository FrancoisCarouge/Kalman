<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Todo List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('todo.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Todo List </div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="namespacefcarouge_1_1eigen_1_1internal.xhtml#a7cf7faca778eb747dab6c1d5c044290b">fcarouge::eigen::internal::kalman</a>  </dt>
<dd><a class="anchor" id="_todo000001"></a>Improve support and optimize for no input: neither type nor void but an equivalent empty type? Void may be more intuitive, practical for the user although less theoretically correct?  </dd>
<dt>Class <a class="el" href="structfcarouge_1_1identity__matrix.xhtml">fcarouge::identity_matrix</a>  </dt>
<dd><a class="anchor" id="_todo000015"></a>Could we remove this for a standard facility? Perhaps a form of std::integral_constant? </dd>
<dt>Class <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a>  </dt>
<dd><p class="startdd"><a class="anchor" id="_todo000016"></a>Is this filter restricted to Newton's equations of motion? That is only a discretized continuous-time kinematic filter? How about non-Newtonian systems? </p>
<p class="interdd"></p>
<p class="interdd">Would it be beneficial to support initialization list for characteristics? </p>
<p class="interdd"></p>
<p class="interdd">Symmetrization support might be superfluous. How to confirm it is safe to remove? </p>
<p class="interdd"></p>
<p class="interdd">Would we want to support smoothers? </p>
<p class="interdd"></p>
<p class="interdd">How to add or associate constraints on the types and operation to support compilation and semantics? </p>
<p class="interdd"></p>
<p class="interdd">Which constructors to support? </p>
<p class="interdd"></p>
<p class="interdd">Is the Kalman filter a recursive state estimation, confirm terminology? </p>
<p class="interdd"></p>
<p class="interdd">Prepare support for std::format? </p>
<p class="interdd"></p>
<p class="interdd">Prepare support for larger dataset recording for graphing, metrics of large test data to facilitate tuning. </p>
<p class="interdd"></p>
<p class="interdd">Support filter generator? Integration? Reflection in C++... </p>
<p class="interdd"></p>
<p class="interdd">Compare performance of general filter with its equivalent generated? </p>
<p class="interdd"></p>
<p class="interdd">Support ranges operator filter? </p>
<p class="interdd"></p>
<p class="interdd">Support mux pipes <a href="https://github.com/joboccara/pipes">https://github.com/joboccara/pipes</a> operator filter? </p>
<p class="interdd"></p>
<p class="interdd">Reproduce Ardupilot's inertial navigation EKF and comparison benchmarks in SITL (software in the loop simulation). </p>
<p class="interdd"></p>
<p class="interdd">Should we provide the operator[] for the vector characteristics regardless of implementation? And for the matrix ones too? It could simplify client code. </p>
<p class="interdd"></p>
<p class="interdd">Should we provide the operator[] for state directly on the filter? Is the state X always what the user would want? </p>
<p class="interdd"></p>
<p class="interdd">Consider if a fluent interface would be preferable for characteristics? </p>
<p class="interdd"></p>
<p class="interdd">Consider additional constructors? </p>
<p class="interdd"></p>
<p class="interdd">Consider additional characteristics method overloads? </p>
<p class="interdd"></p>
<p class="interdd">A clear or reset member equivalent may be useful for real-time re-initializations but to what default? </p>
<p class="interdd"></p>
<p class="enddd">Could the Input be void by default? Or empty?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::input</a>  </dt>
<dd><a class="anchor" id="_todo000017"></a>Conditionally remove this member type when no input is present.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::input_control</a>  </dt>
<dd><a class="anchor" id="_todo000018"></a>Conditionally remove this member type when no input is present.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#afaabe5997ea40e19a88811ef477895d7">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::observation</a>  (const auto &amp;callable)</dt>
<dd><a class="anchor" id="_todo000024"></a>Help the user with callable type definition, visibility.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#aaf36b1b1209a66a74c86b27681eb28dc">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::observation</a>  (auto &amp;&amp;callable)</dt>
<dd><a class="anchor" id="_todo000025"></a>Help the user with callable type definition, visibility.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#aab1dba08047eb5eb08dfbc8095ea1861">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::operator()</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000026"></a>Consider if returning the state vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation? </p>
<p class="interdd"></p>
<p class="interdd">Understand why the implementation cannot be moved out of the class. </p>
<p class="interdd"></p>
<p class="enddd">What should be the order of the parameters? Update first?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a326b305473fba0a1efc17660c94eb199">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::predict</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000028"></a>Consider whether this method needs to exist or if the operator() is sufficient for all clients? </p>
<p class="interdd"></p>
<p class="enddd">Consider if returning the state vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a2ff65c799a4c81478238546c6c1346c5">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::q</a>  (auto &amp;&amp;value, auto &amp;&amp;...values)</dt>
<dd><a class="anchor" id="_todo000019"></a>Reset functions or values when the other is set?  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a33f0875f7b0284b9350529018e6a27af">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::q</a>  (const auto &amp;callable)</dt>
<dd><a class="anchor" id="_todo000020"></a>Understand why Clang Tidy doesn't find the out-of-line definition.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a9085a5ff6f7f9a868f177afb6859ccab">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::r</a>  (const auto &amp;callable)</dt>
<dd><a class="anchor" id="_todo000021"></a>Understand why Clang Tidy doesn't find the out-of-line definition.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a5157efe03fa59171da02dc6dcce0b2cd">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::transition</a>  (const auto &amp;callable)</dt>
<dd><a class="anchor" id="_todo000022"></a>Help the user with callable type definition, visibility.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a193c41ece11420b7eb0573fe0428efa7">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::transition</a>  (auto &amp;&amp;callable)</dt>
<dd><a class="anchor" id="_todo000023"></a>Help the user with callable type definition, visibility.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a71b11bb6c9a898533dfd86ce6eef5c20">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;::update</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000027"></a>Consider whether this method needs to exist or if the operator() is sufficient for all clients? </p>
<p class="interdd"></p>
<p class="enddd">Consider if returning the state vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation? </p>
</dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sun Jul 24 2022 06:10:28 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
