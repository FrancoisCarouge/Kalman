<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Todo List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('todo.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Todo List</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a05f1a2a28da177120bf5b3b2d7d2e2a8">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix</a>  (const Matrix &amp;other)</dt>
<dd><a class="anchor" id="_todo000035"></a>Can this be removed altogether?  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix</a>  (const matrix&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;other)</dt>
<dd><a class="anchor" id="_todo000037"></a>Requires evaluated types of Matrix and OtherMatrix are identical?  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a036724133c861d73b44fc8115aff2a94">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix</a>  (std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; row_list)</dt>
<dd><a class="anchor" id="_todo000038"></a>Verify the list sizes at runtime?  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a585593c99406c287069fd5722e98a4b3">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix</a>  (const Types &amp;...values)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000039"></a>Combine the two constructors in ome? </p>
<p class="interdd"></p>
<p class="interdd">Verify if the types are the same, or assignable, for nicer error? </p>
<p class="interdd"></p>
<p class="enddd">Rewrite with a fold expression over the pack?  </p>
</dd>
<dt>Member <a class="el" href="namespacefcarouge_1_1indexed.xhtml#a5e01dbaa54a254ec31802e232d5839b8">fcarouge::indexed::operator+</a>  (const Matrix &amp;lhs, Scalar rhs)</dt>
<dd><a class="anchor" id="_todo000032"></a>Scalar will become Index with constraints.  </dd>
<dt>Member <a class="el" href="namespacefcarouge.xhtml#ae4d1dbbab6a8bdcaa50062d0cb879777">fcarouge::kalman</a>  (Arguments... arguments) -&gt; kalman&lt; <a class="el" href="namespacefcarouge_1_1internal.xhtml#a0005e5cf17f05f289eaf8a5bc9ffeda5">internal::deduce_filter&lt; Arguments... &gt;</a> &gt;</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000025"></a>Should the parameter be named configurations? </p>
<p class="interdd"></p>
<p class="enddd">Should the configuration examples, supports be documented here?  </p>
</dd>
<dt>Class <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Filter &gt;</a>  </dt>
<dd><p class="startdd"><a class="anchor" id="_todo000023"></a>Make this class usable in constant expressions. </p>
<p class="interdd"></p>
<p class="interdd">Is this filter restricted to Newton's equations of motion? That is only a discretized continuous-time kinematic filter? How about non-Newtonian systems? </p>
<p class="interdd"></p>
<p class="interdd">Symmetrization support might be superfluous. How to confirm it is safe to remove? Optional? </p>
<p class="interdd"></p>
<p class="interdd">Would we want to support smoothers? </p>
<p class="interdd"></p>
<p class="interdd">Prepare support for larger dataset recording for graphing, metrics of large test data to facilitate tuning. </p>
<p class="interdd"></p>
<p class="interdd">Support filter generator from equation? Third party integration? </p>
<p class="interdd"></p>
<p class="interdd">Compare performance of general filter with its equivalent generated? </p>
<p class="interdd"></p>
<p class="interdd">Support ranges operator filter? </p>
<p class="interdd"></p>
<p class="interdd">Support mux pipes <a href="https://github.com/joboccara/pipes">https://github.com/joboccara/pipes</a> operator filter? </p>
<p class="interdd"></p>
<p class="interdd">Reproduce Ardupilot's inertial navigation EKF and comparison benchmarks in SITL (software in the loop simulation). </p>
<p class="interdd"></p>
<p class="interdd">Should we provide the operator[] for the vector characteristics regardless of implementation? And for the matrix ones too? It could simplify client code. </p>
<p class="interdd"></p>
<p class="interdd">Should we provide the operator[] for state directly on the filter? Is the state X always what the user would want? </p>
<p class="interdd"></p>
<p class="interdd">Support, test complex number filters? </p>
<p class="interdd"></p>
<p class="interdd">Use automatic (Eigen::AutoDiffScalar?), symbolic, numerical solvers to define the filter characteristics and simplify solving the dynamic system for non-mathematicians. </p>
<p class="interdd"></p>
<p class="interdd">Should we add back the call operator? How to resolve the update/predict ordering? And parameter ordering? </p>
<p class="interdd"></p>
<p class="interdd">Should we support the noise cross covariance <code>N = E[wvᵀ]</code> for correlated noise sources, with default to null? </p>
<p class="interdd"></p>
<p class="enddd">Can we implement Temporal Parallelization of Bayesian Smoothers, Simo Sarkka, Senior Member, IEEE, Angel F. Garc ıa-Fernandez, <a href="https://arxiv.org/pdf/1905.13002.pdf">https://arxiv.org/pdf/1905.13002.pdf</a> ? GPU implementation? Parallel implementation?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a432c41f9b06ed9b51f84f7a72c06bde3">fcarouge::kalman&lt; Filter &gt;::g</a>  (this auto &amp;&amp;self)</dt>
<dd><a class="anchor" id="_todo000026"></a>Do we still need the non-const flavor? </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a54714ec34eba3646ef3913388c90d2ea">fcarouge::kalman&lt; Filter &gt;::predict</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000028"></a>Consider if returning the state column vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation? </p>
<p class="interdd"></p>
<p class="enddd">Can the parameter pack of <code>PredictionTypes</code> be explicit in the method declaration for user clarity?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a4a85603ea16cb72f7b7fc3bfedaa90bd">fcarouge::kalman&lt; Filter &gt;::update</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000029"></a>Consider if returning the state column vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation? </p>
<p class="interdd"></p>
<p class="enddd">Can the parameter pack of <code>UpdateTypes</code> be explicit in the method declaration for user clarity?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#af5b5c43dcc898eab0391ecc90ff7b328">fcarouge::kalman&lt; Filter &gt;::y</a>  () const -&gt; const innovation &amp;</dt>
<dd><a class="anchor" id="_todo000027"></a>Add measurement post-fit residual by default and example?  </dd>
<dt>Struct <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;</a>  </dt>
<dd><p class="startdd"><a class="anchor" id="_todo000031"></a>Explore and compare performance. </p>
<p class="interdd"></p>
<p class="interdd">Explore optimization of heap allocations? </p>
<p class="interdd"></p>
<p class="interdd">Explore constexpr support? </p>
<p class="interdd"></p>
<p class="interdd">Explore verification of lazy evaluation? </p>
<p class="interdd"></p>
<p class="enddd">Remove unecessary empty paramaters when MSVC supports lambda without them.  </p>
</dd>
<dt>Member <a class="el" href="structfcarouge_1_1matrix.xhtml#af86ce6ac51113a4d4659d9d132cb43f4">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix</a>  ()</dt>
<dd><a class="anchor" id="_todo000033"></a>Report the ICE for generator construction in member declaration. Use constructor's initializer list for now.  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1matrix.xhtml#affe6fae4cb1cfbfb7a46b135e835361f">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator()</a>  (auto row, auto column) const</dt>
<dd><a class="anchor" id="_todo000036"></a>Don't evaluate unless needed. How to do? Some kind of recursive genie recomposer?  </dd>
<dt>{<a class="el" href="linalg__multiplication__rxc_8cpp.xhtml">linalg_multiplication_rxc.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__multiplication__rxc_8cpp_03.xhtml#adfa3a8b5be7eb7ee4bc12ebff7d86a8f">fcarouge::test::anonymous_namespace{linalg_multiplication_rxc.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000040"></a>Should this edge case decay to the underlying type?  </dd>
<dt>Member <a class="el" href="structstd_1_1formatter_3_01_filter_00_01_char_01_4.xhtml#a887dd3f3f177feadd1ca42785885897f">std::formatter&lt; Filter, Char &gt;::format</a>  (const Filter &amp;filter, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000001"></a>P2585 may be useful in simplifying and standardizing the support. </p>
<p class="interdd"><a class="anchor" id="_todo000002"></a>Generalize out internal method concept when MSVC has better if-constexpr-requires support. </p>
<p class="enddd"><a class="anchor" id="_todo000003"></a>Inconsistent usage of internal? </p>
</dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
