<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Todo List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('todo.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Todo List</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Namespace <a class="el" href="namespacefcarouge.xhtml">fcarouge</a>  </dt>
<dd><a class="anchor" id="_todo000032"></a>Remove the dependency on <code>std::initializer_list</code> if possible?  </dd>
<dt>{<a class="el" href="predict__linalg__x1x_8cpp.xhtml">predict_linalg_x1x.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02predict__linalg__x1x_8cpp_03.xhtml#a8052a825ee9cbc95eaac96a14697bee4">fcarouge::benchmark::anonymous_namespace{predict_linalg_x1x.cpp}::Name</a>  ("predict_linalg_${STATE_SIZE}x1x${INPUT_SIZE}") -&gt; Unit(::benchmark::kNanosecond) -&gt;ComputeStatistics("min", [](const auto &amp;results) { return std::ranges::min(results);}) -&gt; ComputeStatistics("max", [](const auto &amp;results) { return std::ranges::max(results);}) -&gt; UseManualTime() -&gt; DisplayAggregatesOnly(true) -&gt; Repetitions(3)</dt>
<dd><a class="anchor" id="_todo000001"></a>Find a way to remove macros or find a different benchmark library that doesn't use macros.  </dd>
<dt>{<a class="el" href="update__linalg__xx0_8cpp.xhtml">update_linalg_xx0.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1benchmark_1_1anonymous__namespace_02update__linalg__xx0_8cpp_03.xhtml#ab1ab8c595b8ad8d298b8fe6492b51c40">fcarouge::benchmark::anonymous_namespace{update_linalg_xx0.cpp}::Name</a>  ("update_linalg_${STATE_SIZE}x${OUTPUT_SIZE}x0") -&gt; Unit(::benchmark::kNanosecond) -&gt;ComputeStatistics("min", [](const auto &amp;results) { return std::ranges::min(results);}) -&gt; ComputeStatistics("max", [](const auto &amp;results) { return std::ranges::max(results);}) -&gt; UseManualTime() -&gt; DisplayAggregatesOnly(true) -&gt; Repetitions(3)</dt>
<dd><a class="anchor" id="_todo000002"></a>Find a way to remove macros or find a different benchmark library that doesn't use macros.  </dd>
<dt>Namespace <a class="el" href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a>  </dt>
<dd><a class="anchor" id="_todo000003"></a>Remove the dependency on <code>std::initializer_list</code> if possible?  </dd>
<dt>Member <a class="el" href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">fcarouge::internal::quotient</a>  </dt>
<dd><a class="anchor" id="_todo000025"></a>How to return the <code>emtpy</code> type if the deducer would fail to help avoid specialization?  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a432c41f9b06ed9b51f84f7a72c06bde3">fcarouge::kalman&lt; Filter &gt;::g</a>  (this auto &amp;&amp;self)</dt>
<dd><a class="anchor" id="_todo000041"></a>Do we still need the non-const flavor? </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a19a22aa0c26048398d2edd106d71d708">fcarouge::kalman&lt; Filter &gt;::kalman</a>  (const kalman &amp;other)=delete</dt>
<dd><a class="anchor" id="_todo000036"></a>Implement and test.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a93e57bf287eff66d4b4f680ce6b22387">fcarouge::kalman&lt; Filter &gt;::operator=</a>  (const kalman &amp;other) -&gt; kalman &amp;=delete</dt>
<dd><a class="anchor" id="_todo000037"></a>Implement and test.  </dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#a4a85603ea16cb72f7b7fc3bfedaa90bd">fcarouge::kalman&lt; Filter &gt;::update</a>  (const auto &amp;...arguments)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000045"></a>Consider if returning the state column vector X would be preferable? Or fluent interface? Would be compatible with an ES-EKF implementation? </p>
<p class="interdd"></p>
<p class="enddd">Can the parameter pack of <code>UpdateTypes</code> be explicit in the method declaration for user clarity?  </p>
</dd>
<dt>Member <a class="el" href="classfcarouge_1_1kalman.xhtml#af5b5c43dcc898eab0391ecc90ff7b328">fcarouge::kalman&lt; Filter &gt;::y</a>  () const -&gt; const innovation &amp;</dt>
<dd><a class="anchor" id="_todo000042"></a>Add measurement post-fit residual by default and example?  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1matrix.xhtml#a4e09c0fca4bfad49789dad31102f07d7">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix</a>  (<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8" title="Compile-time sized Eigen3 column vector.">Type(&amp;elements)</a>[Row])</dt>
<dd><a class="anchor" id="_todo000040"></a>Perhaps this is too naive and can be improved?  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1matrix.xhtml#af86ce6ac51113a4d4659d9d132cb43f4">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix</a>  ()</dt>
<dd><a class="anchor" id="_todo000035"></a>Report the ICE for generator construction in member declaration. Use constructor's initializer list for now.  </dd>
<dt>Member <a class="el" href="structfcarouge_1_1matrix.xhtml#affe6fae4cb1cfbfb7a46b135e835361f">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator()</a>  (auto row, auto column) const</dt>
<dd><a class="anchor" id="_todo000039"></a>Don't evaluate unless needed. How to do? Some kind of recursive genie recomposer?  </dd>
<dt>{<a class="el" href="linalg__addition_8cpp.xhtml">linalg_addition.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__addition_8cpp_03.xhtml#a58f62760145a6a0839b43901056530bb">fcarouge::test::anonymous_namespace{linalg_addition.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000046"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__assign_8cpp.xhtml">linalg_assign.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__assign_8cpp_03.xhtml#a4c98e308d4ac9d24947134de6c580520">fcarouge::test::anonymous_namespace{linalg_assign.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000047"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__1x1_8cpp.xhtml">linalg_constructor_1x1.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__1x1_8cpp_03.xhtml#ac660c243ef8dba578dc714a0c811a1fe">fcarouge::test::anonymous_namespace{linalg_constructor_1x1.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000049"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__1x1__array_8cpp.xhtml">linalg_constructor_1x1_array.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__1x1__array_8cpp_03.xhtml#a6e698ed0a00a63fd8bfc92006e7fb814">fcarouge::test::anonymous_namespace{linalg_constructor_1x1_array.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000048"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__1xn_8cpp.xhtml">linalg_constructor_1xn.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__1xn_8cpp_03.xhtml#a1416a80b9dea1d45ca295039a7cc3e85">fcarouge::test::anonymous_namespace{linalg_constructor_1xn.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000050"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__1xn__array_8cpp.xhtml">linalg_constructor_1xn_array.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__1xn__array_8cpp_03.xhtml#aff890d6511a139b862acdc6bf80f9ca1">fcarouge::test::anonymous_namespace{linalg_constructor_1xn_array.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000051"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__initializer__lists_8cpp.xhtml">linalg_constructor_initializer_lists.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__initializer__lists_8cpp_03.xhtml#ab74cb7ed9098c4f5d7d6a27a709dc13f">fcarouge::test::anonymous_namespace{linalg_constructor_initializer_lists.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000052"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__nx1_8cpp.xhtml">linalg_constructor_nx1.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__nx1_8cpp_03.xhtml#a63468faa6b757c422a21a3a10bbefb24">fcarouge::test::anonymous_namespace{linalg_constructor_nx1.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000053"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__constructor__nx1__array_8cpp.xhtml">linalg_constructor_nx1_array.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__constructor__nx1__array_8cpp_03.xhtml#a38fe0133bbb5f3553913b83f3ab4afdf">fcarouge::test::anonymous_namespace{linalg_constructor_nx1_array.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000055"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__copy_8cpp.xhtml">linalg_copy.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__copy_8cpp_03.xhtml#a0887ab7e5f2d679324ac959b627f5f17">fcarouge::test::anonymous_namespace{linalg_copy.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000054"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__identity_8cpp.xhtml">linalg_identity.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__identity_8cpp_03.xhtml#a96696a636cb3338b86fec91d6c31c303">fcarouge::test::anonymous_namespace{linalg_identity.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000056"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__multiplication__arithmetic_8cpp.xhtml">linalg_multiplication_arithmetic.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__multiplication__arithmetic_8cpp_03.xhtml#ab6163c2a745098b0d1d224d185dbd9ca">fcarouge::test::anonymous_namespace{linalg_multiplication_arithmetic.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000058"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__multiplication__rxc_8cpp.xhtml">linalg_multiplication_rxc.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__multiplication__rxc_8cpp_03.xhtml#adfa3a8b5be7eb7ee4bc12ebff7d86a8f">fcarouge::test::anonymous_namespace{linalg_multiplication_rxc.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000057"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__multiplication__sxc_8cpp.xhtml">linalg_multiplication_sxc.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__multiplication__sxc_8cpp_03.xhtml#aba051f6431b4ca28561b77240e4ec161">fcarouge::test::anonymous_namespace{linalg_multiplication_sxc.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000060"></a>Rewrite this test as a property-based test.  </dd>
<dt>{<a class="el" href="linalg__operator__bracket_8cpp.xhtml">linalg_operator_bracket.cpp</a>} Member <a class="el" href="namespacefcarouge_1_1test_1_1anonymous__namespace_02linalg__operator__bracket_8cpp_03.xhtml#ad8d22e6caa976eab5167898fecb8f55b">fcarouge::test::anonymous_namespace{linalg_operator_bracket.cpp}::test</a>  </dt>
<dd><a class="anchor" id="_todo000059"></a>Rewrite this test as a property-based test.  </dd>
<dt>Member <a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_filter_01_4_00_01_char_01_4.xhtml#a97c2e0d96efa74f63f51f5293727a327">std::formatter&lt; fcarouge::kalman&lt; Filter &gt;, Char &gt;::format</a>  (const <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8" title="Compile-time sized Eigen3 column vector.">fcarouge::kalman&lt; Filter &gt;</a> &amp;filter, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000004"></a>P2585 may be useful in simplifying and standardizing the support. </p>
<p class="interdd"><a class="anchor" id="_todo000006"></a>Generalize out internal method concept when MSVC has better if-constexpr-requires support. </p>
<p class="enddd"><a class="anchor" id="_todo000007"></a>Inconsistent usage of internal? </p>
</dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
