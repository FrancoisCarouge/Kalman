<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/support/indexed/fcarouge/indexed.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('indexed_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">indexed.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="indexed_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.4.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INDEXED_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INDEXED_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;<a class="code" href="utility_8hpp.xhtml">fcarouge/utility.hpp</a>&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;format&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;initializer_list&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml">   55</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1indexed.xhtml">fcarouge::indexed</a> {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">   59</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">underlying_t</a> =</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    std::remove_cvref_t&lt;decltype(std::declval&lt;Matrix&gt;()(0, 0))&gt;;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, std::<span class="keywordtype">size_t</span> RowIndex, std::<span class="keywordtype">size_t</span> ColumnIndex&gt;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">   64</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element</a> =</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    <a class="code hl_typedef" href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">product&lt;std::tuple_element_t&lt;RowIndex, typename Matrix::row_indexes&gt;</a>,</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>            std::tuple_element_t&lt;ColumnIndex, typename Matrix::column_indexes&gt;&gt;;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">   77</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform</a> = []() {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordtype">bool</span> result{<span class="keyword">true</span>};</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, Matrix::rows, 1&gt;</a>([&amp;result](<span class="keyword">auto</span> i) {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, Matrix::columns, 1&gt;</a>([&amp;result, &amp;i](<span class="keyword">auto</span> j) {</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      result &amp;= std::is_same_v&lt;element&lt;Matrix, i, j&gt;, <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>&gt;;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    });</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  });</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}();</div>
</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Index, std::<span class="keywordtype">size_t</span> Begin, std::<span class="keywordtype">size_t</span> End&gt;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">   91</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">in_range</a> = Begin &lt;= Index &amp;&amp; Index &lt;= End;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1column.xhtml">   95</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column</a> = Matrix::columns == 1;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1row.xhtml">   99</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a> = Matrix::rows == 1;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">  103</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">one_dimension</a> = <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column&lt;Matrix&gt;</a> || <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row&lt;Matrix&gt;</a>;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1singleton.xhtml">  107</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1singleton.xhtml">singleton</a> = <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column&lt;Matrix&gt;</a> &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row&lt;Matrix&gt;</a>;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack1, <span class="keyword">typename</span> Pack2&gt;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1indexed_1_1same__size.xhtml">  111</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1same__size.xhtml">same_size</a> = <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;Pack1&gt;</a> == <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;Pack2&gt;</a>;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="foldopen" id="foldopen00114" data-start="{" data-end="};">
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1element__traits.xhtml">  114</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Underlying, <span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1element__traits.xhtml">element_traits</a> {</div>
<div class="foldopen" id="foldopen00115" data-start="{" data-end="}">
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">  115</a></span>  [[nodiscard]] <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> Underlying <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">to_underlying</a>(Type value) {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  }</div>
</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  [[nodiscard]] <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> Type &amp;</div>
<div class="foldopen" id="foldopen00120" data-start="{" data-end="}">
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a090c8176929d5c2e23de337d5d06d7ca">  120</a></span>  <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a090c8176929d5c2e23de337d5d06d7ca">from_underlying</a>(Underlying &amp;value) {</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>};</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="keyword">template</span> &lt;algebraic Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="foldopen" id="foldopen00149" data-start="{" data-end="};">
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml">  149</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> {</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a8b3caabb83f1e4b36f87627af89bd702">  156</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a8b3caabb83f1e4b36f87627af89bd702">underlying</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">underlying_t&lt;Matrix&gt;</a>;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a05f1a2a28da177120bf5b3b2d7d2e2a8">  164</a></span>  <span class="keyword">explicit</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a05f1a2a28da177120bf5b3b2d7d2e2a8">matrix</a>(<span class="keyword">const</span> Matrix &amp;other) : <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other} {}</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">  171</a></span>  Matrix <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a10bf8982f5711ee8ace2dc6348194cf8">  180</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a10bf8982f5711ee8ace2dc6348194cf8">row_indexes</a> = RowIndexes;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aac45899f5688c7cbb2345d74c36cf566">  183</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aac45899f5688c7cbb2345d74c36cf566">column_indexes</a> = ColumnIndexes;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> RowIndex, std::<span class="keywordtype">size_t</span> ColumnIndex&gt;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">  187</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element</a> = <a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element&lt;matrix, RowIndex, ColumnIndex&gt;</a>;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af54a6f995c8a6849a6955472939f2fc2">  195</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">static</span> std::size_t <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af54a6f995c8a6849a6955472939f2fc2">rows</a>{<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;row_indexes&gt;</a>};</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac6c96a982783c79d0ce8c94c9bb4fb7b">  198</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">static</span> std::size_t <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac6c96a982783c79d0ce8c94c9bb4fb7b">columns</a>{<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;column_indexes&gt;</a>};</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">  205</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">matrix</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">  207</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">matrix</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">  209</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">  211</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">matrix</a>(<a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">  213</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">operator=</a>(<a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <span class="keyword">template</span> &lt;algebraic OtherMatrix&gt;</div>
<div class="foldopen" id="foldopen00217" data-start="{" data-end="}">
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">  217</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">matrix</a>(</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;OtherMatrix, RowIndexes, ColumnIndexes&gt;</a> &amp;other)</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>      : <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>} {}</div>
</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="foldopen" id="foldopen00221" data-start="{" data-end="}">
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af645722a1c742b96d711956fc7d30b5a">  221</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af645722a1c742b96d711956fc7d30b5a">matrix</a>(</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>      <span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element&lt;0, 0&gt;</a> (&amp;elements)[<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> * <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a>])</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a> &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">one_dimension&lt;matrix&gt;</a></div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>      : <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>{elements} {}</div>
</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keyword">template</span> &lt;arithmetic Type&gt;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="keyword">requires</span> singleton&lt;matrix&gt;</div>
<div class="foldopen" id="foldopen00228" data-start="{" data-end="}">
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a44bddf3783dd97f849f83e9b975fbffc">  228</a></span>  <span class="keyword">explicit</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a44bddf3783dd97f849f83e9b975fbffc">matrix</a>(<span class="keyword">const</span> Type &amp;value) {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, 0) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  }</div>
</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00234" data-start="{" data-end="}">
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a036724133c861d73b44fc8115aff2a94">  234</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a036724133c861d73b44fc8115aff2a94">matrix</a>(</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>      std::initializer_list&lt;std::initializer_list&lt;Type&gt;&gt; row_list)</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a></div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="keywordflow">for</span> (std::size_t i{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a> : row_list) {</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>      <span class="keywordflow">for</span> (std::size_t j{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;value : <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a>) {</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(i, j) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>        ++j;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>      }</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>      ++i;</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    }</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  }</div>
</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row&lt;matrix&gt;</a> &amp;&amp; (not <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column&lt;matrix&gt;</a>) &amp;&amp;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>             <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1same__size.xhtml">same_size</a>&lt;ColumnIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<div class="foldopen" id="foldopen00253" data-start="{" data-end="}">
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a585593c99406c287069fd5722e98a4b3">  253</a></span>  <span class="keyword">explicit</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a585593c99406c287069fd5722e98a4b3">matrix</a>(<span class="keyword">const</span> Types &amp;...values) {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    std::tuple value_pack{values...};</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;ColumnIndexes&gt;</a>, 1&gt;([<span class="keyword">this</span>,</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>                                              &amp;value_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>      <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>      <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>      <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    });</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  }</div>
</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column&lt;matrix&gt;</a> &amp;&amp;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>             (not <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row&lt;matrix&gt;</a>) &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1same__size.xhtml">same_size</a>&lt;RowIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<div class="foldopen" id="foldopen00266" data-start="{" data-end="}">
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae6c2c2d3895fcd49eb21b2854ea58229">  266</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae6c2c2d3895fcd49eb21b2854ea58229">matrix</a>(<span class="keyword">const</span> Types &amp;...values) {</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    std::tuple value_pack{values...};</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;RowIndexes&gt;</a>, 1&gt;([<span class="keyword">this</span>, &amp;value_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>      <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>      <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    });</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  }</div>
</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe443c568bb91e261cbe83018a65947d">  275</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span>(<span class="keyword">false</span>) <span class="keyword">operator</span> <a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element&lt;0, 0&gt;</a> &amp;()</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1singleton.xhtml">singleton&lt;matrix&gt;</a></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  {</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1element__traits.xhtml">element_traits&lt;underlying, element&lt;0, 0&gt;</a>&gt;::from_underlying(</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>        <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, 0));</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  }</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="foldopen" id="foldopen00282" data-start="{" data-end="}">
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa45b4efc013359081fa287fabf03aecd">  282</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;&amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa45b4efc013359081fa287fabf03aecd">operator[]</a>(<span class="keyword">this</span> <span class="keyword">auto</span> &amp;&amp;self,</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>                                                   std::size_t index)</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a> &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">one_dimension&lt;matrix&gt;</a></div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  }</div>
</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;&amp;</div>
<div class="foldopen" id="foldopen00290" data-start="{" data-end="}">
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a1386e65537f53ebc77017aa0ed8190c5">  290</a></span>  <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a1386e65537f53ebc77017aa0ed8190c5">operator[]</a>(<span class="keyword">this</span> <span class="keyword">auto</span> &amp;&amp;self, std::size_t <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a>, std::size_t <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column</a>)</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a></div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  {</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(<a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a>, <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column</a>);</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>  }</div>
</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="foldopen" id="foldopen00296" data-start="{" data-end="}">
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a7a47084485ea26bc81e356110e4d2be2">  296</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;&amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a7a47084485ea26bc81e356110e4d2be2">operator()</a>(<span class="keyword">this</span> <span class="keyword">auto</span> &amp;&amp;self,</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>                                                   std::size_t index)</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a> &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">one_dimension&lt;matrix&gt;</a></div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  {</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  }</div>
</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;&amp;</div>
<div class="foldopen" id="foldopen00304" data-start="{" data-end="}">
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af566217829c395858d9c6d5f8951307b">  304</a></span>  <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#af566217829c395858d9c6d5f8951307b">operator()</a>(<span class="keyword">this</span> <span class="keyword">auto</span> &amp;&amp;self, std::size_t <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a>, std::size_t <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column</a>)</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">uniform&lt;matrix&gt;</a></div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  {</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(<a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">row</a>, <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column</a>);</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  }</div>
</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Row, std::<span class="keywordtype">size_t</span> Column&gt;</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">in_range&lt;Row, 0, size&lt;RowIndexes&gt;</a>&gt; &amp;&amp;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>             <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">in_range&lt;Column, 0, size&lt;ColumnIndexes&gt;</a>&gt;</div>
<div class="foldopen" id="foldopen00313" data-start="{" data-end="}">
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a49ab5a637798a9152c84be57c765600c">  313</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element&lt;Row, Column&gt;</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a49ab5a637798a9152c84be57c765600c">at</a>() {</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1element__traits.xhtml">element_traits&lt;underlying, element&lt;Row, Column&gt;</a>&gt;::from_underlying(</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>        <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Row}, std::size_t{Column}));</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>  }</div>
</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Index&gt;</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1column.xhtml">column&lt;matrix&gt;</a> &amp;&amp; <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">in_range&lt;Index, 0, size&lt;RowIndexes&gt;</a>&gt;</div>
<div class="foldopen" id="foldopen00320" data-start="{" data-end="}">
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a4441ce6df2b3b6bce5a7f0f3f3bcdd9b">  320</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_typedef" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">element&lt;Index, 0&gt;</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a4441ce6df2b3b6bce5a7f0f3f3bcdd9b">at</a>() {</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1element__traits.xhtml">element_traits&lt;underlying, element&lt;Index, 0&gt;</a>&gt;::from_underlying(</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>        <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Index}));</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  }</div>
</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>};</div>
</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span> </div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... ColumnIndexes&gt;</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a8d7247e277a36773484a43caa8cc3f9f">  330</a></span><span class="keyword">using </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">row_vector</a> =</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>    <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, std::tuple&lt;int&gt;</a>, std::tuple&lt;ColumnIndexes...&gt;&gt;;</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... RowIndexes&gt;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a011e38c672db274168c0803a84ff586f">  335</a></span><span class="keyword">using </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">column_vector</a> =</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>    <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt;Matrix, std::tuple&lt;RowIndexes...&gt;, std::tuple&lt;int&gt;&gt;;</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">bool</span></div>
<div class="foldopen" id="foldopen00343" data-start="{" data-end="}">
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">  343</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">operator==</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>           <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> == rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>;</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>}</div>
</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>          <span class="keyword">typename</span> ColumnIndexes, <span class="keyword">typename</span> Indexes&gt;</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00351" data-start="{" data-end="}">
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">  351</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, Indexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, Indexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;product&lt;Matrix1, Matrix2&gt;</a>&gt;, RowIndexes, ColumnIndexes&gt;{</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>      lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> * rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>}</div>
</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>  <span class="keyword">requires</span> singleton&lt;Matrix&gt;</div>
<div class="foldopen" id="foldopen00360" data-start="{" data-end="}">
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a81ef24a099c5c2a474e69ca88b5f87bb">  360</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(Scalar lhs, <span class="keyword">const</span> Matrix &amp;rhs) {</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>{lhs * rhs.data(0)};</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>}</div>
</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00367" data-start="{" data-end="}">
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#af2491a79b6a321f5f8890f3b1f8f0377">  367</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(Scalar lhs, <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs * rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>}</div>
</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  <span class="keyword">requires</span> singleton&lt;Matrix&gt;</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00375" data-start="{" data-end="}">
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ab078215c160530c84c68ea044e1d0ef5">  375</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0) * rhs};</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>}</div>
</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00382" data-start="{" data-end="}">
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ac0551e9efa1af2b91988881bebf4eaca">  382</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> * rhs};</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>}</div>
</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00389" data-start="{" data-end="}">
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">  389</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">operator+</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix1&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> +</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>                                                              rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>}</div>
</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  <span class="keyword">requires</span> singleton&lt;Matrix&gt;</div>
<div class="foldopen" id="foldopen00398" data-start="{" data-end="}">
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a5e01dbaa54a254ec31802e232d5839b8">  398</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">operator+</a>(<span class="keyword">const</span> Matrix &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>{lhs.data(0) + rhs};</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>}</div>
</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00406" data-start="{" data-end="}">
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">  406</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">operator-</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix1&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> -</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>                                                              rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>}</div>
</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>  <span class="keyword">requires</span> singleton&lt;Matrix&gt;</div>
<div class="foldopen" id="foldopen00415" data-start="{" data-end="}">
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a5df29380c89d1f80914f49aab5bb822e">  415</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">operator-</a>(Scalar lhs, <span class="keyword">const</span> Matrix &amp;rhs) {</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>{lhs - rhs.data(0)};</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>}</div>
</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span> </div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes1,</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>          <span class="keyword">typename</span> RowIndexes2, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00422" data-start="{" data-end="}">
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">  422</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">operator/</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes1, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes2, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;divide&lt;Matrix1, Matrix2&gt;</a>&gt;, RowIndexes1, RowIndexes2&gt;{</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>      lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> / rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>}</div>
</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span> </div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00431" data-start="{" data-end="}">
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#addd8a1c7956caebecaa0fd4e92a3c7f4">  431</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">operator/</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> / rhs};</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>}</div>
</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span> </div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keyword">requires</span> singleton&lt;Matrix&gt;</div>
<div class="foldopen" id="foldopen00438" data-start="{" data-end="}">
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ad89eef981c285367c92f3f05ebe763e1">  438</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">operator/</a>(<span class="keyword">const</span> Matrix &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element&lt;Matrix, 0, 0&gt;</a>{lhs.data(0) / rhs};</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>}</div>
</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>} <span class="comment">// namespace fcarouge::indexed</span></div>
</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span> </div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes,</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>          <span class="keyword">typename</span> Char&gt;</div>
<div class="foldopen" id="foldopen00447" data-start="{" data-end="};">
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml">  447</a></span><span class="keyword">struct </span>std::formatter&lt;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>    <a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a>::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;, Char&gt; {</div>
<div class="foldopen" id="foldopen00449" data-start="{" data-end="}">
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">  449</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">parse</a>(std::basic_format_parse_context&lt;Char&gt; &amp;parse_context) {</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>  }</div>
</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span> </div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00454" data-start="{" data-end="}">
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">  454</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">format</a>(</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>      -&gt; OutputIterator {</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>    <span class="keywordflow">for</span> (std::size_t i{0}; i &lt; fcarouge::size&lt;RowIndexes&gt;; ++i) {</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>      <span class="keywordflow">if</span> (i &gt; 0) {</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>      }</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span> </div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span> </div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>      <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>        <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>          format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>        }</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span> </div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>        format_context.advance_to(</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>            std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(i, j)));</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>      }</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span> </div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>    }</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span> </div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span> </div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>  }</div>
</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span> </div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00485" data-start="{" data-end="}">
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a9a31d41c03e56ba27575cd7360345b84">  485</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a9a31d41c03e56ba27575cd7360345b84">format</a>(</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1row.xhtml">fcarouge::indexed::row</a>&lt;</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>        <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a>&gt;</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>  {</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span> </div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>    <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>      <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>      }</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span> </div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>      format_context.advance_to(</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span>          std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(0, j)));</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>    }</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span> </div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span> </div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>  }</div>
</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span> </div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00509" data-start="{" data-end="}">
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#af9500d390210412601b33802f39e8d3b">  509</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#af9500d390210412601b33802f39e8d3b">format</a>(</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>    <span class="keyword">requires</span> <a class="code hl_concept" href="conceptfcarouge_1_1indexed_1_1singleton.xhtml">fcarouge::indexed::singleton</a>&lt;</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>        <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a>&gt;</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>  {</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>    format_context.advance_to(</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span>        std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(0, 0)));</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span> </div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>  }</div>
</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>};</div>
</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span> </div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> IndexedMatrix,</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>          <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="foldopen" id="foldopen00529" data-start="{" data-end="};">
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml">  529</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1evaluater.xhtml">evaluater</a>&lt;IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt; {</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">  530</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">operator()</a>() const</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>      -&gt; IndexedMatrix&lt;<a class="code hl_typedef" href="namespacefcarouge.xhtml#acd5b06c86fbc7f4790315e50578d4e13">evaluate</a>&lt;Matrix&gt;, RowIndexes, ColumnIndexes&gt;;</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span>};</div>
</div>
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno">  533</span> </div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>template &lt;template &lt;typename, typename, typename&gt; typename IndexedMatrix,</div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span>          typename Matrix, typename RowIndexes, typename ColumnIndexes&gt;</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>  requires requires(IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt; m) {</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>    m.data;</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>  }</div>
<div class="foldopen" id="foldopen00540" data-start="{" data-end="};">
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml">  540</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1transposer.xhtml">transposer</a>&lt;IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt; {</div>
<div class="foldopen" id="foldopen00541" data-start="{" data-end="}">
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">  541</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">operator()</a>(</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>      <span class="keyword">const</span> IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt; &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>    <span class="keywordflow">return</span> IndexedMatrix&lt;evaluate&lt;transpose&lt;Matrix&gt;&gt;, ColumnIndexes,</div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span>                         RowIndexes&gt;{<a class="code hl_function" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">t</a>(value.data)};</div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span>  }</div>
</div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span>};</div>
</div>
<div class="line"><a id="l00547" name="l00547"></a><span class="lineno">  547</span> </div>
<div class="line"><a id="l00550" name="l00550"></a><span class="lineno">  550</span> </div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span><span class="keyword">inline</span> indexed::matrix&lt;<span class="keyword">decltype</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">one&lt;Matrix&gt;</a>), RowIndexes, ColumnIndexes&gt;</div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>    <a class="code hl_variable" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">one</a>&lt;indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;{<a class="code hl_variable" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">one&lt;Matrix&gt;</a>};</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span> </div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span><span class="keyword">inline</span> indexed::matrix&lt;<span class="keyword">decltype</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero&lt;Matrix&gt;</a>), RowIndexes, ColumnIndexes&gt;</div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span>    <a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero</a>&lt;indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;{<a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero&lt;Matrix&gt;</a>};</div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span> </div>
<div class="line"><a id="l00562" name="l00562"></a><span class="lineno">  562</span> </div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno">  563</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span> </div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INDEXED_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1arithmetic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a></div><div class="ttdoc">Arithmetic concept.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00066">utility.hpp:66</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1column_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1column.xhtml">fcarouge::indexed::column</a></div><div class="ttdoc">The given matrix is a single column.</div><div class="ttdef"><b>Definition</b> <a href="#l00095">indexed.hpp:95</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1in__range_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1in__range.xhtml">fcarouge::indexed::in_range</a></div><div class="ttdoc">The index is within the range, inclusive.</div><div class="ttdef"><b>Definition</b> <a href="#l00091">indexed.hpp:91</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1one__dimension_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1one__dimension.xhtml">fcarouge::indexed::one_dimension</a></div><div class="ttdoc">The given matrix is a single dimension, that is a row or a column.</div><div class="ttdef"><b>Definition</b> <a href="#l00103">indexed.hpp:103</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1row_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1row.xhtml">fcarouge::indexed::row</a></div><div class="ttdoc">The matrix is a single row.</div><div class="ttdef"><b>Definition</b> <a href="#l00099">indexed.hpp:99</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1same__size_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1same__size.xhtml">fcarouge::indexed::same_size</a></div><div class="ttdoc">The packs have the same count of types.</div><div class="ttdef"><b>Definition</b> <a href="#l00111">indexed.hpp:111</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1singleton_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1singleton.xhtml">fcarouge::indexed::singleton</a></div><div class="ttdoc">The given row and column indexes form a singleton matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00107">indexed.hpp:107</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1indexed_1_1uniform_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1indexed_1_1uniform.xhtml">fcarouge::indexed::uniform</a></div><div class="ttdoc">Every element types of the matrix are the same.</div><div class="ttdef"><b>Definition</b> <a href="#l00077">indexed.hpp:77</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml">fcarouge::indexed</a></div><div class="ttdef"><b>Definition</b> <a href="#l00055">indexed.hpp:55</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a0a85d05cb03c2d137111049dcff27575"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">fcarouge::indexed::element</a></div><div class="ttdeci">product&lt; std::tuple_element_t&lt; RowIndex, typename Matrix::row_indexes &gt;, std::tuple_element_t&lt; ColumnIndex, typename Matrix::column_indexes &gt; &gt; element</div><div class="ttdoc">The type of the element at the given matrix indexes position.</div><div class="ttdef"><b>Definition</b> <a href="#l00064">indexed.hpp:64</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a3c37385157c36fd9b3ec3727334e043e"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">fcarouge::indexed::operator+</a></div><div class="ttdeci">constexpr auto operator+(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00389">indexed.hpp:389</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a3dedee0afdc6e0f5295c316569484956"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">fcarouge::indexed::underlying_t</a></div><div class="ttdeci">std::remove_cvref_t&lt; decltype(std::declval&lt; Matrix &gt;()(0, 0))&gt; underlying_t</div><div class="ttdoc">The underlying storage type of the matrix's elements.</div><div class="ttdef"><b>Definition</b> <a href="#l00059">indexed.hpp:59</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a3e05e1bd31102e3c7d4cfb83f1461f55"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">fcarouge::indexed::operator-</a></div><div class="ttdeci">constexpr auto operator-(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00406">indexed.hpp:406</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a9e6b0c78471624650df2c8d1c084b78b"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">fcarouge::indexed::operator/</a></div><div class="ttdeci">constexpr auto operator/(const matrix&lt; Matrix1, RowIndexes1, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes2, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00422">indexed.hpp:422</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_aa8199abf2d777c2e4657fe578f730b81"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">fcarouge::indexed::operator*</a></div><div class="ttdeci">constexpr auto operator*(const matrix&lt; Matrix1, RowIndexes, Indexes &gt; &amp;lhs, const matrix&lt; Matrix2, Indexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00351">indexed.hpp:351</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_ad2615f4227ab85ccb64b2be969b3a887"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">fcarouge::indexed::operator==</a></div><div class="ttdeci">constexpr bool operator==(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00343">indexed.hpp:343</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5ad0022b969a210b7261d0158bc1dd7b"><div class="ttname"><a href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">fcarouge::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00223">utility.hpp:223</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5d1b555b919a51d9ef29849f6e86b48a"><div class="ttname"><a href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">fcarouge::t</a></div><div class="ttdeci">auto t(const Type &amp;value)</div><div class="ttdoc">Transpose helper function.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00187">utility.hpp:187</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a8887e952722c60720253e416166a9233"><div class="ttname"><a href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">fcarouge::one</a></div><div class="ttdeci">constexpr Type one</div><div class="ttdoc">The one matrix.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00249">utility.hpp:249</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac4cffefdda8c01a267ce2700c6acb903"><div class="ttname"><a href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00237">utility.hpp:237</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_acd5b06c86fbc7f4790315e50578d4e13"><div class="ttname"><a href="namespacefcarouge.xhtml#acd5b06c86fbc7f4790315e50578d4e13">fcarouge::evaluate</a></div><div class="ttdeci">std::invoke_result_t&lt; evaluater&lt; Type &gt; &gt; evaluate</div><div class="ttdoc">Evaluater helper type.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00163">utility.hpp:163</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae572d5a48afe03765d8e55617ea78689"><div class="ttname"><a href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">fcarouge::product</a></div><div class="ttdeci">internal::product&lt; Lhs, Rhs &gt; product</div><div class="ttdoc">The deduced result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00207">utility.hpp:207</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aef6fb6c8a265d85709b951506123a5f1"><div class="ttname"><a href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">fcarouge::zero</a></div><div class="ttdeci">constexpr Type zero</div><div class="ttdoc">The zero matrix.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00267">utility.hpp:267</a></div></div>
<div class="ttc" id="astructfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4_xhtml_a9d8cc0bf801b4addcb53b6e63a96e4be"><div class="ttname"><a href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">fcarouge::evaluater&lt; IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()() const -&gt; IndexedMatrix&lt; evaluate&lt; Matrix &gt;, RowIndexes, ColumnIndexes &gt;</div></div>
<div class="ttc" id="astructfcarouge_1_1evaluater_xhtml"><div class="ttname"><a href="structfcarouge_1_1evaluater.xhtml">fcarouge::evaluater</a></div><div class="ttdoc">Linear algebra evaluater override expression lazy evaluation specialization point.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00158">utility.hpp:158</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1element__traits_xhtml"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1element__traits.xhtml">fcarouge::indexed::element_traits</a></div><div class="ttdoc">Element traits for conversions.</div><div class="ttdef"><b>Definition</b> <a href="#l00114">indexed.hpp:114</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1element__traits_xhtml_a090c8176929d5c2e23de337d5d06d7ca"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a090c8176929d5c2e23de337d5d06d7ca">fcarouge::indexed::element_traits::from_underlying</a></div><div class="ttdeci">static constexpr Type &amp; from_underlying(Underlying &amp;value)</div><div class="ttdef"><b>Definition</b> <a href="#l00120">indexed.hpp:120</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1element__traits_xhtml_a8d479a35602790f3dff1ac6975b58748"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">fcarouge::indexed::element_traits::to_underlying</a></div><div class="ttdeci">static constexpr Underlying to_underlying(Type value)</div><div class="ttdef"><b>Definition</b> <a href="#l00115">indexed.hpp:115</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a></div><div class="ttdoc">Indexed matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00149">indexed.hpp:149</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a036724133c861d73b44fc8115aff2a94"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a036724133c861d73b44fc8115aff2a94">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; row_list)</div><div class="ttdef"><b>Definition</b> <a href="#l00234">indexed.hpp:234</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a05f1a2a28da177120bf5b3b2d7d2e2a8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a05f1a2a28da177120bf5b3b2d7d2e2a8">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Matrix &amp;other)</div><div class="ttdef"><b>Definition</b> <a href="#l00164">indexed.hpp:164</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a10bf8982f5711ee8ace2dc6348194cf8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a10bf8982f5711ee8ace2dc6348194cf8">fcarouge::indexed::matrix::row_indexes</a></div><div class="ttdeci">RowIndexes row_indexes</div><div class="ttdoc">The tuple with the row components of the indexes.</div><div class="ttdef"><b>Definition</b> <a href="#l00180">indexed.hpp:180</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a1386e65537f53ebc77017aa0ed8190c5"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a1386e65537f53ebc77017aa0ed8190c5">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr auto &amp;&amp; operator[](this auto &amp;&amp;self, std::size_t row, std::size_t column)</div><div class="ttdef"><b>Definition</b> <a href="#l00290">indexed.hpp:290</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a4441ce6df2b3b6bce5a7f0f3f3bcdd9b"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a4441ce6df2b3b6bce5a7f0f3f3bcdd9b">fcarouge::indexed::matrix::at</a></div><div class="ttdeci">constexpr element&lt; Index, 0 &gt; &amp; at()</div><div class="ttdef"><b>Definition</b> <a href="#l00320">indexed.hpp:320</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a44bddf3783dd97f849f83e9b975fbffc"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a44bddf3783dd97f849f83e9b975fbffc">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Type &amp;value)</div><div class="ttdef"><b>Definition</b> <a href="#l00228">indexed.hpp:228</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a49ab5a637798a9152c84be57c765600c"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a49ab5a637798a9152c84be57c765600c">fcarouge::indexed::matrix::at</a></div><div class="ttdeci">constexpr element&lt; Row, Column &gt; &amp; at()</div><div class="ttdef"><b>Definition</b> <a href="#l00313">indexed.hpp:313</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a585593c99406c287069fd5722e98a4b3"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a585593c99406c287069fd5722e98a4b3">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Types &amp;...values)</div><div class="ttdef"><b>Definition</b> <a href="#l00253">indexed.hpp:253</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a7a47084485ea26bc81e356110e4d2be2"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a7a47084485ea26bc81e356110e4d2be2">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr auto &amp;&amp; operator()(this auto &amp;&amp;self, std::size_t index)</div><div class="ttdef"><b>Definition</b> <a href="#l00296">indexed.hpp:296</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a8b3caabb83f1e4b36f87627af89bd702"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a8b3caabb83f1e4b36f87627af89bd702">fcarouge::indexed::matrix::underlying</a></div><div class="ttdeci">underlying_t&lt; Matrix &gt; underlying</div><div class="ttdoc">The type of the element's underlying storage.</div><div class="ttdef"><b>Definition</b> <a href="#l00156">indexed.hpp:156</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a961babc884168f5958d6a41a67e6cd9c"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix()=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aa45b4efc013359081fa287fabf03aecd"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa45b4efc013359081fa287fabf03aecd">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr &amp;constexpr auto &amp;&amp; operator[](this auto &amp;&amp;self, std::size_t index) uniform&lt; matrix &gt; &amp;&amp;one_dimension&lt; matrix &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00282">indexed.hpp:282</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aa5037e1095055c87efa8fe9ec5e5519f"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa5037e1095055c87efa8fe9ec5e5519f">fcarouge::indexed::matrix::element</a></div><div class="ttdeci">element&lt; matrix, RowIndex, ColumnIndex &gt; element</div><div class="ttdoc">The type of the element at the given matrix indexes position.</div><div class="ttdef"><b>Definition</b> <a href="#l00187">indexed.hpp:187</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aa6c56fa45f43cde7a8d49e854602b230"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">fcarouge::indexed::matrix::operator=</a></div><div class="ttdeci">constexpr matrix &amp; operator=(matrix &amp;&amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aab31fcca43d93d2cb30ee7dd657ff2d8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">fcarouge::indexed::matrix::operator=</a></div><div class="ttdeci">constexpr matrix &amp; operator=(const matrix &amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aac45899f5688c7cbb2345d74c36cf566"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aac45899f5688c7cbb2345d74c36cf566">fcarouge::indexed::matrix::column_indexes</a></div><div class="ttdeci">ColumnIndexes column_indexes</div><div class="ttdoc">The tuple with the column components of the indexes.</div><div class="ttdef"><b>Definition</b> <a href="#l00183">indexed.hpp:183</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ac6c96a982783c79d0ce8c94c9bb4fb7b"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac6c96a982783c79d0ce8c94c9bb4fb7b">fcarouge::indexed::matrix::columns</a></div><div class="ttdeci">static constexpr std::size_t columns</div><div class="ttdoc">The count of rows.</div><div class="ttdef"><b>Definition</b> <a href="#l00198">indexed.hpp:198</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ac7b238d94c643c5ee749fae955e43d41"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(matrix &amp;&amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ada3b2d2d61f670a3829f07ac05ceb810"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const matrix&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;other)</div><div class="ttdef"><b>Definition</b> <a href="#l00217">indexed.hpp:217</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_adb2b9757a13fe56845b8341c97d4120b"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const matrix &amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ae6c2c2d3895fcd49eb21b2854ea58229"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae6c2c2d3895fcd49eb21b2854ea58229">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Types &amp;...values)</div><div class="ttdef"><b>Definition</b> <a href="#l00266">indexed.hpp:266</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_af54a6f995c8a6849a6955472939f2fc2"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#af54a6f995c8a6849a6955472939f2fc2">fcarouge::indexed::matrix::rows</a></div><div class="ttdeci">static constexpr std::size_t rows</div><div class="ttdoc">The count of rows.</div><div class="ttdef"><b>Definition</b> <a href="#l00195">indexed.hpp:195</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_af566217829c395858d9c6d5f8951307b"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#af566217829c395858d9c6d5f8951307b">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr auto &amp;&amp; operator()(this auto &amp;&amp;self, std::size_t row, std::size_t column)</div><div class="ttdef"><b>Definition</b> <a href="#l00304">indexed.hpp:304</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_af645722a1c742b96d711956fc7d30b5a"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#af645722a1c742b96d711956fc7d30b5a">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const element&lt; 0, 0 &gt;(&amp;elements)[size&lt; RowIndexes &gt; *size&lt; ColumnIndexes &gt;])</div><div class="ttdef"><b>Definition</b> <a href="#l00221">indexed.hpp:221</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_afe3f85237b8320e3ee8bf0de633f2209"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">fcarouge::indexed::matrix::data</a></div><div class="ttdeci">Matrix data</div><div class="ttdef"><b>Definition</b> <a href="#l00171">indexed.hpp:171</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4_xhtml_a6a30615c98ddf9e6c7b9fb292fe94b10"><div class="ttname"><a href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">fcarouge::transposer&lt; IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()(const IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00541">indexed.hpp:541</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposer_xhtml"><div class="ttname"><a href="structfcarouge_1_1transposer.xhtml">fcarouge::transposer</a></div><div class="ttdoc">Linear algebra transposer specialization point.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00166">utility.hpp:166</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_a22ccf9a43345e00fa844932355833178"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::parse</a></div><div class="ttdeci">constexpr auto parse(std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</div><div class="ttdef"><b>Definition</b> <a href="#l00449">indexed.hpp:449</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_a9a31d41c03e56ba27575cd7360345b84"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a9a31d41c03e56ba27575cd7360345b84">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</div><div class="ttdef"><b>Definition</b> <a href="#l00485">indexed.hpp:485</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_af9500d390210412601b33802f39e8d3b"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#af9500d390210412601b33802f39e8d3b">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</div><div class="ttdef"><b>Definition</b> <a href="#l00509">indexed.hpp:509</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_afe0524a0509e8ae2a48c06d3e944c3ae"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</div><div class="ttdef"><b>Definition</b> <a href="#l00454">indexed.hpp:454</a></div></div>
<div class="ttc" id="autility_8hpp_xhtml"><div class="ttname"><a href="utility_8hpp.xhtml">utility.hpp</a></div><div class="ttdoc">The collection of utilities supporting the library.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5815af820a9cc9481f1d0990a0d60286.xhtml">support</a></li><li class="navelem"><a class="el" href="dir_1621ce20bb0f106b02cf49e2771a1732.xhtml">indexed</a></li><li class="navelem"><a class="el" href="dir_e336bd576f52f793a6c73d300cd26dff.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="indexed_8hpp.xhtml">indexed.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
