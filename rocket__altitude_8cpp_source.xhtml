<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: sample/rocket_altitude.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('rocket__altitude_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">rocket_altitude.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="rocket__altitude_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="kalman__eigen_8hpp.xhtml">fcarouge/kalman_eigen.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02rocket__altitude_8cpp_03.xhtml">    8</a></span><span class="keyword">namespace</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02rocket__altitude_8cpp_03.xhtml#a63759677e8cdcc8efbbc101504f93f97">   44</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02rocket__altitude_8cpp_03.xhtml#a63759677e8cdcc8efbbc101504f93f97">rocket_altitude</a>{ [] {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="comment">// A 2x1x1 filter, constant acceleration dynamic model, no control, step time.</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keyword">using</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">eigen::kalman&lt;double, 2, 1, 1, std::tuple&lt;&gt;</a>,</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>                               std::tuple&lt;std::chrono::milliseconds&gt;&gt;;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> k;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="comment">// Initialization</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="comment">// We don&#39;t know the rocket location; we will set initial position and</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="comment">// velocity to 0.</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>(0, 0);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="comment">// Since our initial state vector is a guess, we will set a very high estimate</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="comment">// uncertainty. The high estimate uncertainty results in high Kalman gain,</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="comment">// giving a high weight to the measurement.</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">kalman::estimate_uncertainty</a>{ { 500, 0 }, { 0, 500 } });</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="comment">// Prediction</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="comment">// We will assume a discrete noise model - the noise is different at each time</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="comment">// period, but it is constant between time periods. In our previous example,</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="comment">// we used the system&#39;s random variance in acceleration σ^2 as a multiplier of</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="comment">// the process noise matrix. But here, we have an accelerometer that measures</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="comment">// the system random acceleration. The accelerometer error v is much lower</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="comment">// than system&#39;s random acceleration, therefore we use ϵ^2 as a multiplier of</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="comment">// the process noise matrix. This makes our estimation uncertainty much lower!</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">q</a>([](<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">kalman::state</a> &amp;x, <span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time) {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(x);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">kalman::process_uncertainty</a>{</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      { 0.1 * 0.1 * dt * dt * dt * dt / 4, 0.1 * 0.1 * dt * dt * dt / 2 },</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      { 0.1 * 0.1 * dt * dt * dt / 2, 0.1 * 0.1 * dt * dt }</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    };</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  });</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="comment">// The state transition matrix F would be:</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">f</a>([](<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">kalman::state</a> &amp;x, <span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time,</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>         <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">kalman::input</a> &amp;u) {</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(x);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(u);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">kalman::state_transition</a>{ { 1, dt }, { 0, 1 } };</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  });</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="comment">// The control matrix G would be:</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a72b44840d4c942a9b7674cd9dd89761b">g</a>([](<span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time) {</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">kalman::input_control</a>{ 0.0313, dt };</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  });</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="comment">// We also don&#39;t know what the rocket acceleration is, but we can assume that</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="comment">// it&#39;s greater than zero. Let&#39;s assume: u0 = g</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keyword">const</span> <span class="keywordtype">double</span> gravity{ -9.8 }; <span class="comment">// [m.s^-2]</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keyword">const</span> std::chrono::milliseconds delta_time{ 250 };</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">predict</a>(delta_time, -gravity);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  assert(0.3 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &lt; 0.3 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>         2.45 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &lt; 2.45 + 0.1);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  assert(531.25 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 531.25 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>         125 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &lt; 125 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>         125 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &lt; 125 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>         500 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &lt; 500 + 0.1);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="comment">// Measure and Update</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="comment">// The dimension of zn is 1x1 and the dimension of xn is 2x1, so the dimension</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="comment">// of the observation matrix H will be 1x2.</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">h</a>(1, 0);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="comment">// For the sake of the example simplicity, we will assume a constant</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="comment">// measurement uncertainty: R1 = R2...Rn-1 = Rn = R.</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">r</a>(400.);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">update</a>(-32.4);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  assert(-18.35 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &lt; -18.35 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>         -1.94 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &lt; -1.94 + 0.1);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  assert(228.2 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 228.2 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>         53.7 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &lt; 53.7 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>         53.7 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &lt; 53.7 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>         483.2 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &lt; 483.2 + 0.1);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">predict</a>(delta_time, 39.72 + gravity);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  assert(-17.9 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &lt; -17.9 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>         5.54 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &lt; 5.54 + 0.1);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  assert(285.2 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 285.2 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>         174.5 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &lt; 174.5 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>         174.5 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &lt; 174.5 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>         483.2 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &lt; 483.2 + 0.1);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="comment">// And so on, run a step of the filter, updating and predicting, every</span></div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="comment">// measurements period: Δt = 250ms. The period is constant but passed as</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="comment">// variable for the example. The lambda helper shows how to simplify the</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="comment">// filter step call.</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">const</span> <span class="keyword">auto</span> step{ [&amp;k](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...args) {</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    k.template operator()&lt;<span class="keywordtype">double</span>&gt;(args...);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  } };</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  step(delta_time, 40.02 + gravity, -11.1);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  assert(-12.3 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &lt; -12.3 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>         14.8 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &lt; 14.8 + 0.1);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  assert(244.9 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 244.9 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>         211.6 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &lt; 211.6 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>         211.6 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &lt; 211.6 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>         438.8 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &lt; 438.8 + 0.1);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  step(delta_time, 39.97 + gravity, 18.);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  step(delta_time, 39.81 + gravity, 22.9);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  step(delta_time, 39.75 + gravity, 19.5);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  step(delta_time, 39.6 + gravity, 28.5);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  step(delta_time, 39.77 + gravity, 46.5);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  step(delta_time, 39.83 + gravity, 68.9);</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  step(delta_time, 39.73 + gravity, 48.2);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  step(delta_time, 39.87 + gravity, 56.1);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  step(delta_time, 39.81 + gravity, 90.5);</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  step(delta_time, 39.92 + gravity, 104.9);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  step(delta_time, 39.78 + gravity, 140.9);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  step(delta_time, 39.98 + gravity, 148.);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  step(delta_time, 39.76 + gravity, 187.6);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  step(delta_time, 39.86 + gravity, 209.2);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  step(delta_time, 39.61 + gravity, 244.6);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  step(delta_time, 39.86 + gravity, 276.4);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  step(delta_time, 39.74 + gravity, 323.5);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  step(delta_time, 39.87 + gravity, 357.3);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  step(delta_time, 39.63 + gravity, 357.4);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  step(delta_time, 39.67 + gravity, 398.3);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  step(delta_time, 39.96 + gravity, 446.7);</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  step(delta_time, 39.8 + gravity, 465.1);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  step(delta_time, 39.89 + gravity, 529.4);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  step(delta_time, 39.85 + gravity, 570.4);</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  step(delta_time, 39.9 + gravity, 636.8);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  step(delta_time, 39.81 + gravity, 693.3);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  step(delta_time, 39.81 + gravity, 707.3);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">update</a>(748.5);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="comment">// The Kalman gain for altitude converged to 0.12, which means that the</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="comment">// estimation weight is much higher than the measurement weight.</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  assert(49.3 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 49.3 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>         <span class="stringliteral">&quot;At this point, the altitude uncertainty px = 49.3, which means that &quot;</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>         <span class="stringliteral">&quot;the standard deviation of the prediction is square root of 49.3: &quot;</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>         <span class="stringliteral">&quot;7.02m (remember that the standard deviation of the measurement is &quot;</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>         <span class="stringliteral">&quot;20m).&quot;</span>);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">predict</a>(delta_time, 39.68 + gravity);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="comment">// At the beginning, the estimated altitude is influenced by measurements and</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="comment">// it is not aligned well with the true rocket altitude, since the</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="comment">// measurements are very noisy. But as the Kalman gain converges, the noisy</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="comment">// measurement has less influence and the estimated altitude is well aligned</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="comment">// with the true altitude. In this example we don&#39;t have any maneuvers that</span></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="comment">// cause acceleration changes, but if we had, the control input</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  <span class="comment">// (accelerometer) would update the state extrapolation equation.</span></div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  assert(831.5 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(0) &lt; 831.5 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>         222.94 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>()(1) &lt; 222.94 + 0.1);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  assert(54.3 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 0) &lt; 54.3 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>         10.4 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(0, 1) &lt; 10.4 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>         10.4 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 0) &lt; 10.4 + 0.1 &amp;&amp;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>         2.6 - 0.1 &lt; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &amp;&amp; k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>()(1, 1) &lt; 2.6 + 0.1);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>}() };</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>} <span class="comment">// namespace fcarouge::sample</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00183">kalman.hpp:184</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a00c6d53aab568dd3cc4571152db95259"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00484">kalman.hpp:484</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a154cbaed3f255ec32b08031b2de47feb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00339">kalman.hpp:339</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a321eca5e446f93eac94a25478967a27e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01159">kalman.hpp:1159</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a34031f643cc88ad51facb3777de765aa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00587">kalman.hpp:587</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a546e3b8fcd1880d3dd9a2b57c939d442"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00208">kalman.hpp:208</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6713091dfcd048c2193f67d1e2c5cb53"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01180">kalman.hpp:1180</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a72b44840d4c942a9b7674cd9dd89761b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a72b44840d4c942a9b7674cd9dd89761b">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control requires(Input &gt; 0)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00897">kalman.hpp:897</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a92874ec3ecb10ab906df5bdf434b7899"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00218">kalman.hpp:218</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa5702b0eb84c2624d32cd92c00d79c4f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00791">kalman.hpp:791</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aadce185c0e8bf0097fa9e92769266a8d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00424">kalman.hpp:424</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abeecd5f98be0e4fb04fcbd1fc6ecfe88"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00246">kalman.hpp:246</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af374ab30a5a1a7eee7e5aaffa939c3bd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00685">kalman.hpp:685</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af3c5d0d70a3c0426a0802fdd85e7eeef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00226">kalman.hpp:226</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af8d6f479798f305c207fdc67c07a2b5a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00223">kalman.hpp:223</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afae9e103ff365a53281f27028ff4a0ea"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00234">kalman.hpp:234</a></div></div>
<div class="ttc" id="akalman__eigen_8hpp_xhtml"><div class="ttname"><a href="kalman__eigen_8hpp.xhtml">kalman_eigen.hpp</a></div><div class="ttdoc">Kalman operation for Eigen 3 types.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02rocket__altitude_8cpp_03_xhtml_a63759677e8cdcc8efbbc101504f93f97"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02rocket__altitude_8cpp_03.xhtml#a63759677e8cdcc8efbbc101504f93f97">fcarouge::sample::anonymous_namespace{rocket_altitude.cpp}::rocket_altitude</a></div><div class="ttdeci">auto rocket_altitude</div><div class="ttdef"><b>Definition:</b> <a href="rocket__altitude_8cpp_source.xhtml#l00044">rocket_altitude.cpp:44</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div><div class="ttdoc">Examples, tutorials, demonstrators of the library.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c29eeb5af533606caea8a09e66794740.xhtml">sample</a></li><li class="navelem"><a class="el" href="rocket__altitude_8cpp.xhtml">rocket_altitude.cpp</a></li>
    <li class="footer">Generated on Fri Aug 12 2022 02:05:03 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
