<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: sample/ardupilot_soaring.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('ardupilot__soaring_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ardupilot_soaring.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="ardupilot__soaring_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="kalman__eigen_8hpp.xhtml">fcarouge/kalman_eigen.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02ardupilot__soaring_8cpp_03.xhtml">    8</a></span><span class="keyword">namespace</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02ardupilot__soaring_8cpp_03.xhtml#a7dc03328a16eccbebf58a471b5a3de1b">   32</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02ardupilot__soaring_8cpp_03.xhtml#a7dc03328a16eccbebf58a471b5a3de1b">ardupilot_soaring</a>{ [] {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="comment">// 4x1 extended filter with additional parameter for prediction: driftX [m],</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="comment">// driftY [m]. Constant time step.</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keyword">using</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">eigen::kalman&lt;float, 4, 1, 0, std::tuple&lt;float, float&gt;</a>,</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>                               std::tuple&lt;float, float&gt;&gt;;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> k;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="comment">// Initialization</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> trigger_strength{ 1 / 4.06 };</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> thermal_radius{ 80 };</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> thermal_position_x{ 0 };</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> thermal_position_y{ 0 };</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  k.x(trigger_strength, thermal_radius, thermal_position_x, thermal_position_y);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> strength_covariance{ 0.0049 };</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> radius_covariance{ 400 };</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> position_covariance{ 400 }; <span class="comment">// For both positions x and y.</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  k.p(kalman::estimate_uncertainty{ { strength_covariance, 0, 0, 0 },</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>                                    { 0, radius_covariance, 0, 0 },</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>                                    { 0, 0, position_covariance, 0 },</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>                                    { 0, 0, 0, position_covariance } });</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="comment">// No process dynamics: F = ∂f/∂X = I4 Default.</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  k.transition([](<span class="keyword">const</span> kalman::state &amp;x, <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;drift_x,</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>                  <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;drift_y) -&gt; kalman::state {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keyword">const</span> kalman::state drifts{ 0, 0, -drift_x, -drift_y };</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    <span class="keywordflow">return</span> x + drifts;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  });</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> strength_noise{ std::pow(0.001f, 2.f) };</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> distance_noise{ std::pow(0.03f, 2.f) };</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  k.q(kalman::process_uncertainty{ { strength_noise, 0, 0, 0 },</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                                   { 0, distance_noise, 0, 0 },</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>                                   { 0, 0, distance_noise, 0 },</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>                                   { 0, 0, 0, distance_noise } });</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keyword">const</span> <span class="keywordtype">float</span> measure_noise{ std::pow(0.45f, 2.f) };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  k.r(measure_noise);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="comment">// Observation Z: [w] vertical air velocity w at the aircraft’s</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="comment">// position w.r.t. the thermal center [m.s^-1].</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  k.observation([](<span class="keyword">const</span> kalman::state &amp;x, <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;position_x,</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>                   <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;position_y) -&gt; kalman::output {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    <span class="keyword">const</span> <span class="keyword">auto</span> exp{ std::exp(</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        -(std::pow(x(2) - position_x, 2.f) + std::pow(x(3) - position_y, 2.f)) /</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>        std::pow(x(1), 2.f)) };</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordflow">return</span> kalman::output{ x(0) * exp };</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  });</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="comment">// See the ArduSoar paper for the equation for H = ∂h/∂X:</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  k.h([](<span class="keyword">const</span> kalman::state &amp;x, <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;position_x,</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>         <span class="keyword">const</span> <span class="keywordtype">float</span> &amp;position_y) -&gt; kalman::output_model {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keyword">const</span> <span class="keyword">auto</span> exp{ std::exp(</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>        -(std::pow(x(2) - position_x, 2.f) + std::pow(x(3) - position_y, 2.f)) /</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        std::pow(x(1), 2.f)) };</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keyword">const</span> kalman::output_model h{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      exp,</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>      2 * x(0) *</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>          ((std::pow(x(2) - position_x, 2.f) +</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>            std::pow(x(3) - position_y, 2.f)) /</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>           std::pow(x(1), 3.f)) *</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>          exp,</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>      -2 * (x(0) * (x(2) - position_x) / std::pow(x(1), 2.f)) * exp,</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      -2 * (x(0) * (x(3) - position_y) / std::pow(x(1), 2.f)) * exp</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    };</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keywordflow">return</span> h;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  });</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="comment">// Measure and Update</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordtype">float</span> drift_x{ 0 };</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keywordtype">float</span> drift_y{ 0 };</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  k.predict(drift_x, drift_y);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keywordtype">float</span> variometer{ 0 };</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keywordtype">float</span> position_x{ 0 };</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keywordtype">float</span> position_y{ 0 };</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  k.update(variometer, position_x, position_y);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="comment">// Or so on.</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  k(drift_x, drift_y, position_x, position_y, variometer);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>}() };</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>} <span class="comment">// namespace fcarouge::sample</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00144">kalman.hpp:145</a></div></div>
<div class="ttc" id="akalman__eigen_8hpp_xhtml"><div class="ttname"><a href="kalman__eigen_8hpp.xhtml">kalman_eigen.hpp</a></div><div class="ttdoc">Kalman operation for Eigen 3 types.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02ardupilot__soaring_8cpp_03_xhtml_a7dc03328a16eccbebf58a471b5a3de1b"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02ardupilot__soaring_8cpp_03.xhtml#a7dc03328a16eccbebf58a471b5a3de1b">fcarouge::sample::anonymous_namespace{ardupilot_soaring.cpp}::ardupilot_soaring</a></div><div class="ttdeci">auto ardupilot_soaring</div><div class="ttdef"><b>Definition:</b> <a href="ardupilot__soaring_8cpp_source.xhtml#l00032">ardupilot_soaring.cpp:32</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div><div class="ttdoc">Examples, tutorials, demonstrators of the library.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c29eeb5af533606caea8a09e66794740.xhtml">sample</a></li><li class="navelem"><a class="el" href="ardupilot__soaring_8cpp.xhtml">ardupilot_soaring.cpp</a></li>
    <li class="footer">Generated on Sun Jul 10 2022 00:44:48 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
