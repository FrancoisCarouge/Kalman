<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: kf_8x4x0_deep_sort_bounding_box.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kf_8x4x0_deep_sort_bounding_box_8cpp-example.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kf_8x4x0_deep_sort_bounding_box.cpp</div></div>
</div><!--header-->
<div class="contents">
<p >Estimating the position of bounding boxes in image space.</p>
<p >Estimating the position of bounding boxes in image space.</p><dl class="section copyright"><dt>Copyright</dt><dd>This example is transcribed from Nwojke's Deep SORT filter.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a href="https://github.com/nwojke/deep_sort">https://github.com/nwojke/deep_sort</a></dd></dl>
<p>In this example, we would like to estimate the bounding box center position <code>x</code>, <code>y</code>, aspect ratio <code>a</code>, height <code>h</code>, and their respective velocities in image space. The filter models constant velocity dynamics. The prediction and observation models are linear.</p>
<dl class="section note"><dt>Note</dt><dd>For information, the original sample appears to saturate the velocity precision early on.</dd></dl>
<div class="fragment"><div class="line"><span class="preprocessor">#include &quot;<a class="code" href="eigen_2kalman_8hpp.xhtml">fcarouge/eigen/kalman.hpp</a>&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1eigen_1_1sample.xhtml">fcarouge::eigen::sample</a> {</div>
<div class="line"><span class="keyword">namespace </span>{</div>
<div class="line"> </div>
<div class="line">[[maybe_unused]] <span class="keyword">auto</span> <a id="a0" name="a0"></a><a class="code hl_variable" href="namespacefcarouge_1_1eigen_1_1sample_1_1anonymous__namespace_02kf__8x4x0__deep__sort__bounding__box_8cpp_03.xhtml#ab1fd2e8a0bb15ca4aee2bbbc81ff3b1d">kf_8x4x0_deep_sort_bounding_box</a>{[] {</div>
<div class="line">  <span class="comment">// A 8x4x0 filter, constant velocity, linear.</span></div>
<div class="line">  <span class="keyword">using </span><a id="a1" name="a1"></a><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a6200288e83ea7493c432fcf77aca131d">kalman</a> = kalman&lt;vector&lt;float, 8&gt;, vector&lt;float, 4&gt;&gt;;</div>
<div class="line"> </div>
<div class="line">  <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a6200288e83ea7493c432fcf77aca131d">kalman</a> filter;</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// A hundred bounding box output measurements `(x, y, a, h)` from Deep SORT&#39;s</span></div>
<div class="line">  <span class="comment">// MOT16 sample, tracker #201.</span></div>
<div class="line">  <span class="keyword">const</span> <a id="a2" name="a2"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">kalman::output</a> measured[]{{603.5, 251.5, 0.187335092348285, 379},</div>
<div class="line">                                  {599, 241, 0.24390243902439, 328},</div>
<div class="line">                                  {599, 239.5, 0.257234726688103, 311},</div>
<div class="line">                                  {602.5, 244, 0.240131578947368, 304},</div>
<div class="line">                                  {598, 248.5, 0.272425249169435, 301},</div>
<div class="line">                                  {596.5, 240.5, 0.283276450511945, 293},</div>
<div class="line">                                  {601, 227, 0.301587301587302, 252},</div>
<div class="line">                                  {603.5, 235.5, 0.282868525896414, 251},</div>
<div class="line">                                  {602, 242.5, 0.292490118577075, 253},</div>
<div class="line">                                  {602.5, 253, 0.218562874251497, 334},</div>
<div class="line">                                  {593, 254, 0.273291925465838, 322},</div>
<div class="line">                                  {603, 264, 0.22360248447205, 322},</div>
<div class="line">                                  {600.5, 278.5, 0.198966408268734, 387},</div>
<div class="line">                                  {593, 280, 0.237113402061856, 388},</div>
<div class="line">                                  {588.5, 269, 0.267195767195767, 378},</div>
<div class="line">                                  {579, 260, 0.311111111111111, 360},</div>
<div class="line">                                  {565.5, 268.5, 0.339130434782609, 345},</div>
<div class="line">                                  {558.5, 255.5, 0.366568914956012, 341},</div>
<div class="line">                                  {544, 268, 0.364705882352941, 340},</div>
<div class="line">                                  {533, 258.5, 0.356083086053412, 337},</div>
<div class="line">                                  {519, 258, 0.353293413173653, 334},</div>
<div class="line">                                  {511.5, 252.5, 0.333333333333333, 333},</div>
<div class="line">                                  {515.5, 252.5, 0.31306990881459, 329},</div>
<div class="line">                                  {523.5, 251, 0.298192771084337, 332},</div>
<div class="line">                                  {540, 252.5, 0.318318318318318, 333},</div>
<div class="line">                                  {574, 262, 0.344827586206897, 348},</div>
<div class="line">                                  {590.5, 265, 0.278735632183908, 348},</div>
<div class="line">                                  {613, 268, 0.164556962025316, 316},</div>
<div class="line">                                  {617, 260.5, 0.161172161172161, 273},</div>
<div class="line">                                  {615.5, 261.5, 0.15210355987055, 309},</div>
<div class="line">                                  {605.5, 259, 0.226351351351351, 296},</div>
<div class="line">                                  {595.5, 258.5, 0.289036544850498, 301},</div>
<div class="line">                                  {588, 257.5, 0.350515463917526, 291},</div>
<div class="line">                                  {579.5, 254, 0.343537414965986, 294},</div>
<div class="line">                                  {569.5, 258.5, 0.353535353535354, 297},</div>
<div class="line">                                  {565.5, 257, 0.37248322147651, 298},</div>
<div class="line">                                  {555, 250, 0.388157894736842, 304},</div>
<div class="line">                                  {546.5, 249, 0.336666666666667, 300},</div>
<div class="line">                                  {535, 251, 0.30718954248366, 306},</div>
<div class="line">                                  {530, 246, 0.308724832214765, 298},</div>
<div class="line">                                  {521, 252, 0.278145695364238, 302},</div>
<div class="line">                                  {521.5, 254.5, 0.331010452961672, 287},</div>
<div class="line">                                  {521, 258.5, 0.32280701754386, 285},</div>
<div class="line">                                  {519.5, 255, 0.316326530612245, 294},</div>
<div class="line">                                  {518.5, 255, 0.304794520547945, 292},</div>
<div class="line">                                  {511, 253, 0.310810810810811, 296},</div>
<div class="line">                                  {506, 255, 0.319727891156463, 294},</div>
<div class="line">                                  {499, 256, 0.352112676056338, 284},</div>
<div class="line">                                  {492.5, 256.5, 0.349152542372881, 295},</div>
<div class="line">                                  {489.5, 257, 0.362068965517241, 290},</div>
<div class="line">                                  {481, 251.5, 0.357894736842105, 285},</div>
<div class="line">                                  {474, 249, 0.324137931034483, 290},</div>
<div class="line">                                  {466, 250, 0.306122448979592, 294},</div>
<div class="line">                                  {461.5, 248, 0.304794520547945, 292},</div>
<div class="line">                                  {450.5, 248.5, 0.323843416370107, 281},</div>
<div class="line">                                  {442, 260.5, 0.32280701754386, 285},</div>
<div class="line">                                  {437, 255.5, 0.329824561403509, 285},</div>
<div class="line">                                  {427, 251.5, 0.329896907216495, 291},</div>
<div class="line">                                  {419, 251, 0.330985915492958, 284},</div>
<div class="line">                                  {411, 251, 0.328671328671329, 286},</div>
<div class="line">                                  {411, 251.5, 0.325259515570934, 289},</div>
<div class="line">                                  {410, 249, 0.324137931034483, 290},</div>
<div class="line">                                  {407, 247.5, 0.346020761245675, 289},</div>
<div class="line">                                  {398.5, 248.5, 0.356890459363958, 283},</div>
<div class="line">                                  {393, 249, 0.347222222222222, 288},</div>
<div class="line">                                  {390.5, 246.5, 0.331058020477816, 293},</div>
<div class="line">                                  {387, 246, 0.308724832214765, 298},</div>
<div class="line">                                  {379.5, 244.5, 0.303754266211604, 293},</div>
<div class="line">                                  {370, 255.5, 0.258899676375404, 309},</div>
<div class="line">                                  {372, 252.5, 0.307167235494881, 293},</div>
<div class="line">                                  {368, 254.5, 0.311418685121107, 289},</div>
<div class="line">                                  {365.5, 251, 0.322916666666667, 288},</div>
<div class="line">                                  {360.5, 250.5, 0.301694915254237, 295},</div>
<div class="line">                                  {353, 251.5, 0.316151202749141, 291},</div>
<div class="line">                                  {349.5, 248.5, 0.32404181184669, 287},</div>
<div class="line">                                  {343.5, 246, 0.327464788732394, 284},</div>
<div class="line">                                  {334.5, 251.5, 0.335689045936396, 283},</div>
<div class="line">                                  {328.5, 249.5, 0.342960288808664, 277},</div>
<div class="line">                                  {321.5, 256.5, 0.328621908127208, 283},</div>
<div class="line">                                  {321.5, 259.5, 0.317073170731707, 287},</div>
<div class="line">                                  {319.5, 252, 0.313380281690141, 284},</div>
<div class="line">                                  {317.5, 247.5, 0.314487632508834, 283},</div>
<div class="line">                                  {314.5, 248, 0.313380281690141, 284},</div>
<div class="line">                                  {318.5, 255, 0.311188811188811, 286},</div>
<div class="line">                                  {324.5, 252, 0.317857142857143, 280},</div>
<div class="line">                                  {328.5, 249, 0.311188811188811, 286},</div>
<div class="line">                                  {330, 248, 0.318840579710145, 276},</div>
<div class="line">                                  {334.5, 245, 0.320143884892086, 278},</div>
<div class="line">                                  {342.5, 248, 0.324817518248175, 274},</div>
<div class="line">                                  {348, 247.5, 0.312727272727273, 275},</div>
<div class="line">                                  {349.5, 245.5, 0.326007326007326, 273},</div>
<div class="line">                                  {350, 250, 0.321167883211679, 274},</div>
<div class="line">                                  {350.5, 252.5, 0.323636363636364, 275},</div>
<div class="line">                                  {356.5, 249, 0.31294964028777, 278},</div>
<div class="line">                                  {356.5, 245, 0.320143884892086, 278},</div>
<div class="line">                                  {357, 245, 0.314285714285714, 280},</div>
<div class="line">                                  {361, 246, 0.318840579710145, 276},</div>
<div class="line">                                  {364, 251.5, 0.308771929824561, 285},</div>
<div class="line">                                  {368, 252.5, 0.303886925795053, 283},</div>
<div class="line">                                  {369, 250.5, 0.29757785467128, 289}};</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Initialization</span></div>
<div class="line">  <span class="comment">// The filter is initialized at runtime, on bounding box detection, with the</span></div>
<div class="line">  <span class="comment">// first observed output. Bounding box position and velocity estimated state:</span></div>
<div class="line">  <span class="comment">// [px, py, pa, ph, vx, vy, va, vh].</span></div>
<div class="line">  <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">kalman::output</a> initial_box{605.0, 248.0, 0.20481927710843373, 332.0};</div>
<div class="line">  filter.x(initial_box(0), initial_box(1), initial_box(2), initial_box(3), 0, 0,</div>
<div class="line">           0, 0);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Experimental position and velocity uncertainty standard deviation weights.</span></div>
<div class="line">  <span class="keyword">const</span> <span class="keywordtype">float</span> position_weight{1. / 20.};</div>
<div class="line">  <span class="keyword">const</span> <span class="keywordtype">float</span> velocity_weight{1. / 160.};</div>
<div class="line"> </div>
<div class="line">  filter.p(<a id="a3" name="a3"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">kalman::estimate_uncertainty</a>{</div>
<div class="line">      vector&lt;float, 8&gt;{2 * position_weight * initial_box(3),</div>
<div class="line">                       2 * position_weight * initial_box(3), 1e-2,</div>
<div class="line">                       2 * position_weight * initial_box(3),</div>
<div class="line">                       10 * velocity_weight * initial_box(3),</div>
<div class="line">                       10 * velocity_weight * initial_box(3), 1e-5,</div>
<div class="line">                       10 * velocity_weight * initial_box(3)}</div>
<div class="line">          .array()</div>
<div class="line">          .square()</div>
<div class="line">          .matrix()</div>
<div class="line">          .asDiagonal()});</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Constant velocity, linear state transition model. From one image frame to</span></div>
<div class="line">  <span class="comment">// the other.</span></div>
<div class="line">  <span class="keyword">const</span> <span class="keywordtype">float</span> delta_time{1};</div>
<div class="line">  filter.f(<a id="a4" name="a4"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">kalman::state_transition</a>{{1, 0, 0, 0, delta_time, 0, 0, 0},</div>
<div class="line">                                    {0, 1, 0, 0, 0, delta_time, 0, 0},</div>
<div class="line">                                    {0, 0, 1, 0, 0, 0, delta_time, 0},</div>
<div class="line">                                    {0, 0, 0, 1, 0, 0, 0, delta_time},</div>
<div class="line">                                    {0, 0, 0, 0, 1, 0, 0, 0},</div>
<div class="line">                                    {0, 0, 0, 0, 0, 1, 0, 0},</div>
<div class="line">                                    {0, 0, 0, 0, 0, 0, 1, 0},</div>
<div class="line">                                    {0, 0, 0, 0, 0, 0, 0, 1}});</div>
<div class="line"> </div>
<div class="line">  filter.q([position_weight, velocity_weight](</div>
<div class="line">               <span class="keyword">const</span> <a id="a5" name="a5"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">kalman::state</a> &amp;x) -&gt; <a id="a6" name="a6"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">kalman::process_uncertainty</a> {</div>
<div class="line">    <span class="keywordflow">return</span> vector&lt;float, 8&gt;{position_weight * x(3),</div>
<div class="line">                            position_weight * x(3),</div>
<div class="line">                            1e-2,</div>
<div class="line">                            position_weight * x(3),</div>
<div class="line">                            velocity_weight * x(3),</div>
<div class="line">                            velocity_weight * x(3),</div>
<div class="line">                            1e-5,</div>
<div class="line">                            velocity_weight * x(3)}</div>
<div class="line">        .array()</div>
<div class="line">        .square()</div>
<div class="line">        .matrix()</div>
<div class="line">        .asDiagonal();</div>
<div class="line">  });</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Now we can predict the next state based on the initialization values.</span></div>
<div class="line">  filter.predict();</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Measure and Update</span></div>
<div class="line">  <span class="comment">// Direct linear observation transition model.</span></div>
<div class="line">  filter.h(<a id="a7" name="a7"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">kalman::output_model</a>{{1, 0, 0, 0, 0, 0, 0, 0},</div>
<div class="line">                                {0, 1, 0, 0, 0, 0, 0, 0},</div>
<div class="line">                                {0, 0, 1, 0, 0, 0, 0, 0},</div>
<div class="line">                                {0, 0, 0, 1, 0, 0, 0, 0}});</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Observation, measurement noise covariance.</span></div>
<div class="line">  filter.r(</div>
<div class="line">      [position_weight](<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">kalman::state</a> &amp;x,</div>
<div class="line">                        <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">kalman::output</a> &amp;z) -&gt; <a id="a8" name="a8"></a><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">kalman::output_uncertainty</a> {</div>
<div class="line">        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(z);</div>
<div class="line">        <span class="keywordflow">return</span> vector&lt;float, 4&gt;{position_weight * x(3), position_weight * x(3),</div>
<div class="line">                                1e-1, position_weight * x(3)}</div>
<div class="line">            .array()</div>
<div class="line">            .square()</div>
<div class="line">            .matrix()</div>
<div class="line">            .asDiagonal();</div>
<div class="line">      });</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// And so on, run a step of the filter, updating and predicting, every frame.</span></div>
<div class="line">  <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;output : measured) {</div>
<div class="line">    filter.update(output);</div>
<div class="line">    filter.predict();</div>
<div class="line">  }</div>
<div class="line"> </div>
<div class="line">  assert(std::abs(1 - filter.x()[0] / 370.932041394761f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[1] / 251.173174229878f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[2] / 0.314757138075364f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[3] / 287.859996019444f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[4] / 1.95865368159518f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[5] / 0.229282868701086f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         <span class="comment">// The precision of the velocity appears to saturate early on in the</span></div>
<div class="line">         <span class="comment">// original example. The parameter could be scaled or larger types used</span></div>
<div class="line">         <span class="comment">// to improve comparison accuracy.</span></div>
<div class="line">         std::abs(1 - filter.x()[6] / 2.46138628550094E-06f) &lt; 0.5f &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[7] / 0.81402529074969f) &lt; 0.001f &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The estimated states expected to meet Nwojke&#39;s Deep SORT filter&#39;s &quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;MOT16 sample tracker #201 dataset at 0.1% accuracy.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  <span class="keywordflow">return</span> 0;</div>
<div class="line">}()};</div>
<div class="line"> </div>
<div class="line">} <span class="comment">// namespace</span></div>
<div class="line">} <span class="comment">// namespace fcarouge::eigen::sample</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a220002b41b1231400e8b0011de61b4e0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00222">kalman.hpp:222</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a340c6843cf9a87ace05832d1446589f7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00235">kalman.hpp:235</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a546f2e777f16d4802da6d2c18cd5cd2f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00225">kalman.hpp:225</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a78e08dba6680ac9b8733d70bd8a7a4a1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00219">kalman.hpp:219</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa1c8d1fa8c597eca32684c1c43a373d5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00230">kalman.hpp:230</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aee2bd9463c53248388d67f0182c23d8e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00204">kalman.hpp:204</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aff08f3b6c981112f9f9f348b02dba322"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00209">kalman.hpp:209</a></div></div>
<div class="ttc" id="aeigen_2kalman_8hpp_xhtml"><div class="ttname"><a href="eigen_2kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">Kalman operation for Eigen 3 types.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_1_1sample_1_1anonymous__namespace_02kf__8x4x0__deep__sort__bounding__box_8cpp_03_xhtml_ab1fd2e8a0bb15ca4aee2bbbc81ff3b1d"><div class="ttname"><a href="namespacefcarouge_1_1eigen_1_1sample_1_1anonymous__namespace_02kf__8x4x0__deep__sort__bounding__box_8cpp_03.xhtml#ab1fd2e8a0bb15ca4aee2bbbc81ff3b1d">fcarouge::eigen::sample::anonymous_namespace{kf_8x4x0_deep_sort_bounding_box.cpp}::kf_8x4x0_deep_sort_bounding_box</a></div><div class="ttdeci">auto kf_8x4x0_deep_sort_bounding_box</div><div class="ttdef"><b>Definition:</b> <a href="kf__8x4x0__deep__sort__bounding__box_8cpp_source.xhtml#l00024">kf_8x4x0_deep_sort_bounding_box.cpp:24</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1eigen_1_1sample.xhtml">fcarouge::eigen::sample</a></div><div class="ttdef"><b>Definition:</b> <a href="ekf__4x1x0__soaring_8cpp_source.xhtml#l00006">ekf_4x1x0_soaring.cpp:6</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a6200288e83ea7493c432fcf77aca131d"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a6200288e83ea7493c432fcf77aca131d">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; State, Output, Input, transpose, divide, UpdateTypes, PredictionTypes &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00079">kalman.hpp:80</a></div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Fri Oct 21 2022 02:45:34 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
