<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/internal/eigen.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('eigen_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">eigen.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="eigen_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INTERNAL_EIGEN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INTERNAL_EIGEN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;<a class="code" href="kalman_8hpp.xhtml">fcarouge/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;Eigen/Eigen&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen.xhtml">   56</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1eigen_1_1internal.xhtml">fcarouge::eigen::internal</a></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>{</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">concept </span>arithmetic = std::integral&lt;Type&gt; || std::floating_point&lt;Type&gt;;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#aee16b54624e2726129560ae810e805ec">transpose</a> {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keyword">using</span> type = std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="keyword">using</span> result_type =</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        <span class="keyword">typename</span> Eigen::Matrix&lt;<span class="keyword">typename</span> type::Scalar, type::ColsAtCompileTime,</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>                               type::RowsAtCompileTime&gt;;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordflow">return</span> result_type{ value.<a class="code hl_struct" href="structfcarouge_1_1eigen_1_1internal_1_1transpose.xhtml">transpose</a>() };</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  operator()(<span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>};</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#af67bfce173c998d182c8d40f8dccf65c">symmetrize</a> {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keyword">using</span> result_type = std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <span class="keywordflow">return</span> result_type{ (value + value.transpose()) / 2 };</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  operator()(<span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>};</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#af4a0f022ca9724e0e5e4a24732781365">divide</a> {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Numerator, <span class="keyword">typename</span> Denominator&gt;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  operator()(<span class="keyword">const</span> Numerator &amp;numerator, <span class="keyword">const</span> Denominator &amp;denominator) <span class="keyword">const</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>      -&gt; <span class="keyword">typename</span> Eigen::Matrix&lt;typename std::decay_t&lt;Numerator&gt;::Scalar,</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                                std::decay_t&lt;Numerator&gt;::RowsAtCompileTime,</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>                                std::decay_t&lt;Denominator&gt;::RowsAtCompileTime&gt;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordflow">return</span> denominator.transpose()</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>        .fullPivHouseholderQr()</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>        .solve(numerator.transpose())</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>        .transpose();</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  }</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Numerator&gt;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  operator()(<span class="keyword">const</span> Numerator &amp;numerator,</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>             <span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;denominator) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      <span class="keyword">typename</span> Eigen::Vector&lt;typename std::decay_t&lt;Numerator&gt;::Scalar,</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>                             std::decay_t&lt;Numerator&gt;::RowsAtCompileTime&gt;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  {</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    <span class="keywordflow">return</span> Eigen::Matrix&lt;typename std::decay_t&lt;Numerator&gt;::Scalar, 1, 1&gt;{</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      denominator</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    }</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        .transpose()</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        .fullPivHouseholderQr()</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        .solve(numerator.transpose())</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>        .transpose();</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  }</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Denominator&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  operator()(<span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;numerator,</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>             <span class="keyword">const</span> Denominator &amp;denominator) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      <span class="keyword">typename</span> Eigen::RowVector&lt;typename std::decay_t&lt;Denominator&gt;::Scalar,</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>                                std::decay_t&lt;Denominator&gt;::RowsAtCompileTime&gt;</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    <span class="keywordflow">return</span> denominator.transpose()</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>        .fullPivHouseholderQr()</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>        .solve(Eigen::Matrix&lt;<span class="keyword">typename</span> std::decay_t&lt;<span class="keyword">decltype</span>(numerator)&gt;::Scalar,</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>                             1, 1&gt;{ numerator })</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>        .<a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#aee16b54624e2726129560ae810e805ec">transpose</a>();</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  }</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  operator()(<span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;numerator,</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>             <span class="keyword">const</span> arithmetic <span class="keyword">auto</span> &amp;denominator)<span class="keyword"> const</span></div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    <span class="keywordflow">return</span> numerator / denominator;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  }</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>};</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span><span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a> {</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()()<span class="keyword"> const</span></div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>    <span class="keywordflow">return</span> Type::Identity();</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  }</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keyword">template</span> &lt;arithmetic Type&gt;</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()() <span class="keyword">const</span> <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  {</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    <span class="keywordflow">return</span> Type{ 1 };</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  }</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>};</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = double, std::size_t State = 1, std::size_t Output = 1,</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>          std::size_t Input = 1,</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>          <span class="keyword">typename</span> UpdateTypes = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">fcarouge::internal::empty_pack_t</a>,</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>          <span class="keyword">typename</span> PredictionTypes = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">fcarouge::internal::empty_pack_t</a>&gt;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1eigen_1_1internal.xhtml#a7cf7faca778eb747dab6c1d5c044290b">  257</a></span><span class="keyword">using</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    std::conditional_t&lt;State == 1, Type, Eigen::Vector&lt;Type, State&gt;&gt;,</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    std::conditional_t&lt;Output == 1, Type, Eigen::Vector&lt;Type, Output&gt;&gt;,</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    std::conditional_t&lt;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        Input == 0, void,</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        std::conditional_t&lt;Input == 1, Type, Eigen::Vector&lt;Type, Input&gt;&gt;&gt;,</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#aee16b54624e2726129560ae810e805ec">transpose</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#af67bfce173c998d182c8d40f8dccf65c">symmetrize</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#af4a0f022ca9724e0e5e4a24732781365">divide</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a>, UpdateTypes,</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    PredictionTypes&gt;;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>} <span class="comment">// namespace fcarouge::eigen::internal</span></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INTERNAL_EIGEN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00162">kalman.hpp:163</a></div></div>
<div class="ttc" id="akalman_8hpp_xhtml"><div class="ttname"><a href="kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The main Kalman filter class.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_1_1internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1eigen_1_1internal.xhtml">fcarouge::eigen::internal</a></div><div class="ttdef"><b>Definition:</b> <a href="eigen_8hpp_source.xhtml#l00056">eigen.hpp:57</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_ab99c4b80cb5488c202a697e056134bae"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">fcarouge::eigen::identity_matrix</a></div><div class="ttdeci">internal::identity_matrix identity_matrix</div><div class="ttdoc">Function object for providing an Eigen identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00062">kalman_eigen.hpp:62</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_aee16b54624e2726129560ae810e805ec"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#aee16b54624e2726129560ae810e805ec">fcarouge::eigen::transpose</a></div><div class="ttdeci">internal::transpose transpose</div><div class="ttdoc">Function object for performing Eigen matrix transposition.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00053">kalman_eigen.hpp:53</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_af4a0f022ca9724e0e5e4a24732781365"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#af4a0f022ca9724e0e5e4a24732781365">fcarouge::eigen::divide</a></div><div class="ttdeci">internal::divide divide</div><div class="ttdoc">Function object for performing Eigen matrix division.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00059">kalman_eigen.hpp:59</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_af67bfce173c998d182c8d40f8dccf65c"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#af67bfce173c998d182c8d40f8dccf65c">fcarouge::eigen::symmetrize</a></div><div class="ttdeci">internal::symmetrize symmetrize</div><div class="ttdoc">Function object for performing Eigen matrix symmetrization.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00056">kalman_eigen.hpp:56</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a0d6c05cd68e6807d952e8c7344d5df5a"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">fcarouge::internal::empty_pack_t</a></div><div class="ttdeci">pack&lt;&gt; empty_pack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00051">kalman.hpp:51</a></div></div>
<div class="ttc" id="astructfcarouge_1_1eigen_1_1internal_1_1transpose_xhtml"><div class="ttname"><a href="structfcarouge_1_1eigen_1_1internal_1_1transpose.xhtml">fcarouge::eigen::internal::transpose</a></div><div class="ttdef"><b>Definition:</b> <a href="eigen_8hpp_source.xhtml#l00067">eigen.hpp:67</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_378fe1080454d2b2e5da42d8158af554.xhtml">internal</a></li><li class="navelem"><a class="el" href="eigen_8hpp.xhtml">eigen.hpp</a></li>
    <li class="footer">Generated on Sat Aug 6 2022 02:50:20 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
