<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/internal/kalman_equation.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman__equation_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman_equation.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman__equation_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INTERNAL_KALMAN_EQUATION_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INTERNAL_KALMAN_EQUATION_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>{</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">   51</a></span><a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">extrapolate_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;ff, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;g,</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>                  <span class="keyword">const</span> <span class="keyword">auto</span> &amp;u)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keyword">using</span> state = std::decay_t&lt;<span class="keyword">decltype</span>(x)&gt;;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keywordflow">return</span> state{ ff(x, f) + g * u };</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a84f3bb8884aff1a719fd640f177c5d3e">   60</a></span><a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">extrapolate_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;ff, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f)</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">using</span> state = std::decay_t&lt;<span class="keyword">decltype</span>(x)&gt;;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="keywordflow">return</span> state{ ff(x, f) };</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>}</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose&gt;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a62ef859bb167f2c4de9f8185d4160024">   69</a></span><a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a62ef859bb167f2c4de9f8185d4160024">extrapolate_covariance</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q)</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>{</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keyword">using</span> estimate_uncertainty = std::decay_t&lt;<span class="keyword">decltype</span>(p)&gt;;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  Transpose transpose;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keywordflow">return</span> estimate_uncertainty{ f * p * transpose(f) + q };</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>}</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize&gt;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a4f4a7743a0ad00c4dc0b0959f13621a0">   79</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4f4a7743a0ad00c4dc0b0959f13621a0">predict</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;ff, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f,</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>                              <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q)</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  x = <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">extrapolate_state</a>(x, ff, f);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  Symmetrize symmetrize;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  p = symmetrize(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize&gt;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#ade5d6ef827f085423ad5b6844b9736b9">   90</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4f4a7743a0ad00c4dc0b0959f13621a0">predict</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;ff, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f,</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>                              <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;g, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;u)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>{</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  x = <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">extrapolate_state</a>(x, ff, f, g, u);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  Symmetrize symmetrize;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  p = symmetrize(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>}</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a965c4371ebbf7ad154ea4b386dca97ff">  100</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a965c4371ebbf7ad154ea4b386dca97ff">update_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;k,</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>                                                 <span class="keyword">const</span> <span class="keyword">auto</span> &amp;y)</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>{</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keyword">using</span> state = std::decay_t&lt;<span class="keyword">decltype</span>(x)&gt;;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordflow">return</span> state{ x + k * y };</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>}</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Identity&gt;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a3d37fc08aea949d6fb899340236691ec">  110</a></span><a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a3d37fc08aea949d6fb899340236691ec">update_covariance</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;k, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r)</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>{</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">using</span> estimate_uncertainty = std::decay_t&lt;<span class="keyword">decltype</span>(p)&gt;;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  Transpose transpose;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  Identity <a class="code hl_struct" href="structfcarouge_1_1internal_1_1identity.xhtml">identity</a>;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">const</span> <span class="keyword">auto</span> i{ <a class="code hl_struct" href="structfcarouge_1_1internal_1_1identity.xhtml">identity</a>.template operator()&lt;estimate_uncertainty&gt;() };</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keywordflow">return</span> estimate_uncertainty{ (i - k * h) * p * transpose(i - k * h) +</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>                               k * r * transpose(k) };</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>}</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Div<span class="keywordtype">id</span>e&gt;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#aca714003236e38aa420bea7a2b22b47c">  123</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#aca714003236e38aa420bea7a2b22b47c">weight_gain</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>                                                <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r)</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>{</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keyword">using</span> observation = std::decay_t&lt;<span class="keyword">decltype</span>(h)&gt;;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keyword">using</span> gain = std::invoke_result_t&lt;Transpose, observation&gt;;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">using</span> innovation_uncertainty = std::decay_t&lt;<span class="keyword">decltype</span>(r)&gt;;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  Transpose transpose;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  Divide divides;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keyword">const</span> innovation_uncertainty s{ h * p * transpose(h) + r };</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keywordflow">return</span> gain{ divides(p * transpose(h), s) };</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>}</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a0085a2ee006e0e1b36a30bf952d648c7">  138</a></span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0085a2ee006e0e1b36a30bf952d648c7">innovate</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;z,</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>                                             <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h)</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>{</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keyword">using</span> innovation = std::decay_t&lt;<span class="keyword">decltype</span>(z)&gt;;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordflow">return</span> innovation{ z - h * x };</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>}</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>          <span class="keyword">typename</span> Identity&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">  149</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">update</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r,</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>                             <span class="keyword">const</span> <span class="keyword">auto</span> &amp;z)</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>{</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keyword">const</span> <span class="keyword">auto</span> k{ weight_gain&lt;Transpose, Divide&gt;(p, h, r) };</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">const</span> <span class="keyword">auto</span> y{ <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a0085a2ee006e0e1b36a30bf952d648c7">innovate</a>(x, z, h) };</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  x = <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a965c4371ebbf7ad154ea4b386dca97ff">update_state</a>(x, k, y);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  Symmetrize symmetrize;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  p = symmetrize(update_covariance&lt;Transpose, Identity&gt;(p, k, h, r));</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>}</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>} <span class="comment">// namespace fcarouge::internal</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INTERNAL_KALMAN_EQUATION_HPP</span></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a0085a2ee006e0e1b36a30bf952d648c7"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a0085a2ee006e0e1b36a30bf952d648c7">fcarouge::internal::innovate</a></div><div class="ttdeci">constexpr auto innovate(const auto &amp;x, const auto &amp;z, const auto &amp;h)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00138">kalman_equation.hpp:138</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a0d4a117f1e5338b506841bd69d20f538"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a0d4a117f1e5338b506841bd69d20f538">fcarouge::internal::extrapolate_state</a></div><div class="ttdeci">constexpr auto extrapolate_state(const auto &amp;x, const auto &amp;ff, const auto &amp;f, const auto &amp;g, const auto &amp;u)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00051">kalman_equation.hpp:51</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a3d37fc08aea949d6fb899340236691ec"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a3d37fc08aea949d6fb899340236691ec">fcarouge::internal::update_covariance</a></div><div class="ttdeci">constexpr auto update_covariance(const auto &amp;p, const auto &amp;k, const auto &amp;h, const auto &amp;r)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00110">kalman_equation.hpp:110</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4f4a7743a0ad00c4dc0b0959f13621a0"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4f4a7743a0ad00c4dc0b0959f13621a0">fcarouge::internal::predict</a></div><div class="ttdeci">constexpr void predict(auto &amp;x, auto &amp;p, const auto &amp;ff, const auto &amp;f, const auto &amp;q)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00079">kalman_equation.hpp:79</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a62ef859bb167f2c4de9f8185d4160024"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a62ef859bb167f2c4de9f8185d4160024">fcarouge::internal::extrapolate_covariance</a></div><div class="ttdeci">constexpr auto extrapolate_covariance(const auto &amp;p, const auto &amp;f, const auto &amp;q)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00069">kalman_equation.hpp:69</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a965c4371ebbf7ad154ea4b386dca97ff"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a965c4371ebbf7ad154ea4b386dca97ff">fcarouge::internal::update_state</a></div><div class="ttdeci">constexpr auto update_state(const auto &amp;x, const auto &amp;k, const auto &amp;y)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00100">kalman_equation.hpp:100</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_aca714003236e38aa420bea7a2b22b47c"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#aca714003236e38aa420bea7a2b22b47c">fcarouge::internal::weight_gain</a></div><div class="ttdeci">constexpr auto weight_gain(const auto &amp;p, const auto &amp;h, const auto &amp;r)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00123">kalman_equation.hpp:123</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_af0a346261d79d359d8f7f7f662741872"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">fcarouge::internal::update</a></div><div class="ttdeci">constexpr void update(auto &amp;x, auto &amp;p, const auto &amp;h, const auto &amp;r, const auto &amp;z)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00149">kalman_equation.hpp:149</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1identity_xhtml"><div class="ttname"><a href="structfcarouge_1_1internal_1_1identity.xhtml">fcarouge::internal::identity</a></div><div class="ttdoc">Function object for providing an identy matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__operator_8hpp_source.xhtml#l00051">kalman_operator.hpp:51</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_378fe1080454d2b2e5da42d8158af554.xhtml">internal</a></li><li class="navelem"><a class="el" href="kalman__equation_8hpp.xhtml">kalman_equation.hpp</a></li>
    <li class="footer">Generated on Thu May 12 2022 05:00:19 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
  </ul>
</div>
</body>
</html>
