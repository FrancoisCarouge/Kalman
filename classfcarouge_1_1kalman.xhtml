<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman
   &#160;<span id="projectnumber">0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classfcarouge_1_1kalman.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="classfcarouge_1_1kalman-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Kalman filter.  
 <a href="classfcarouge_1_1kalman.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Types</div></td></tr>
<tr class="memitem:a560e82d7dd78f4a533805465d23be560"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">implementation::state</a></td></tr>
<tr class="memdesc:a560e82d7dd78f4a533805465d23be560"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state estimate vector X.  <a href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">More...</a><br /></td></tr>
<tr class="separator:a560e82d7dd78f4a533805465d23be560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94f4d4a61922d1a55facf3a93abd1224"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">implementation::output</a></td></tr>
<tr class="memdesc:a94f4d4a61922d1a55facf3a93abd1224"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation vector Z.  <a href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">More...</a><br /></td></tr>
<tr class="separator:a94f4d4a61922d1a55facf3a93abd1224"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599d23847b220984e2cfac8c21d053b8"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">implementation::input</a></td></tr>
<tr class="memdesc:a599d23847b220984e2cfac8c21d053b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control vector U.  <a href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">More...</a><br /></td></tr>
<tr class="separator:a599d23847b220984e2cfac8c21d053b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4673a5e2e4615374f56a1882a2d3238e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#aeeab0bf87147ab5eb761b65329fa7306">implementation::estimate_uncertainty</a></td></tr>
<tr class="memdesc:a4673a5e2e4615374f56a1882a2d3238e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the estimated correlated variance matrix P.  <a href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">More...</a><br /></td></tr>
<tr class="separator:a4673a5e2e4615374f56a1882a2d3238e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68a85f23dece8df5494f284ae152205b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0696ec2114175e75b0329823b1c62c99">implementation::process_uncertainty</a></td></tr>
<tr class="memdesc:a68a85f23dece8df5494f284ae152205b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the process noise correlated variance matrix Q.  <a href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">More...</a><br /></td></tr>
<tr class="separator:a68a85f23dece8df5494f284ae152205b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2004ab338554e8bac196ba1790d645ef"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">output_uncertainty</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0a25ddfd9d10e98bfcf2b1107626a74e">implementation::output_uncertainty</a></td></tr>
<tr class="memdesc:a2004ab338554e8bac196ba1790d645ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation noise correlated variance matrix R.  <a href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">More...</a><br /></td></tr>
<tr class="separator:a2004ab338554e8bac196ba1790d645ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa3d55a6a7017bbf6f64318ed3be4e63"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">state_transition</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad9dad30b5500893230d878bf632d2f4a">implementation::state_transition</a></td></tr>
<tr class="memdesc:afa3d55a6a7017bbf6f64318ed3be4e63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state transition matrix F.  <a href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">More...</a><br /></td></tr>
<tr class="separator:afa3d55a6a7017bbf6f64318ed3be4e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0d98ef4447df3321f0791bd055ae871"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">output_model</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a40d8e17f21248972b00420a38c17d15d">implementation::output_model</a></td></tr>
<tr class="memdesc:ad0d98ef4447df3321f0791bd055ae871"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation transition matrix H.  <a href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">More...</a><br /></td></tr>
<tr class="separator:ad0d98ef4447df3321f0791bd055ae871"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c460ecef7aff22c337032154776d53"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">input_control</a> = typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9cf655d639b927c411afa2539025293e">implementation::input_control</a></td></tr>
<tr class="memdesc:a55c460ecef7aff22c337032154776d53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control transition matrix G.  <a href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">More...</a><br /></td></tr>
<tr class="separator:a55c460ecef7aff22c337032154776d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Functions</div></td></tr>
<tr class="memitem:a0867c09230f177320f6e72662c26c312"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0867c09230f177320f6e72662c26c312">kalman</a> ()=default</td></tr>
<tr class="memdesc:a0867c09230f177320f6e72662c26c312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a Kalman filter without configuration.  <a href="classfcarouge_1_1kalman.xhtml#a0867c09230f177320f6e72662c26c312">More...</a><br /></td></tr>
<tr class="separator:a0867c09230f177320f6e72662c26c312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a28af20f228e08007fada65b067f72"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a90a28af20f228e08007fada65b067f72">kalman</a> (const <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other)=default</td></tr>
<tr class="memdesc:a90a28af20f228e08007fada65b067f72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructs a filter.  <a href="classfcarouge_1_1kalman.xhtml#a90a28af20f228e08007fada65b067f72">More...</a><br /></td></tr>
<tr class="separator:a90a28af20f228e08007fada65b067f72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6bdf6b6dcd2e30e8ec68e24f02c887"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6e6bdf6b6dcd2e30e8ec68e24f02c887">kalman</a> (<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) noexcept=default</td></tr>
<tr class="memdesc:a6e6bdf6b6dcd2e30e8ec68e24f02c887"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a filter.  <a href="classfcarouge_1_1kalman.xhtml#a6e6bdf6b6dcd2e30e8ec68e24f02c887">More...</a><br /></td></tr>
<tr class="separator:a6e6bdf6b6dcd2e30e8ec68e24f02c887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae963a46d5d12a91e6805a4fe127e42ea"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae963a46d5d12a91e6805a4fe127e42ea">operator=</a> (const <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other)=default</td></tr>
<tr class="memdesc:ae963a46d5d12a91e6805a4fe127e42ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator.  <a href="classfcarouge_1_1kalman.xhtml#ae963a46d5d12a91e6805a4fe127e42ea">More...</a><br /></td></tr>
<tr class="separator:ae963a46d5d12a91e6805a4fe127e42ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaa05e99744fabcc9c1c18ea66d66eaa"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#abaa05e99744fabcc9c1c18ea66d66eaa">operator=</a> (<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) noexcept=default</td></tr>
<tr class="memdesc:abaa05e99744fabcc9c1c18ea66d66eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assignment operator.  <a href="classfcarouge_1_1kalman.xhtml#abaa05e99744fabcc9c1c18ea66d66eaa">More...</a><br /></td></tr>
<tr class="separator:abaa05e99744fabcc9c1c18ea66d66eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd3a868a3eada637707c1da922e6169a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#afd3a868a3eada637707c1da922e6169a">~kalman</a> ()=default</td></tr>
<tr class="memdesc:afd3a868a3eada637707c1da922e6169a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructs the kalman filter.  <a href="classfcarouge_1_1kalman.xhtml#afd3a868a3eada637707c1da922e6169a">More...</a><br /></td></tr>
<tr class="separator:afd3a868a3eada637707c1da922e6169a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Filtering Member Functions</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Sets the control transition matrix G function.</p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>
</div></td></tr>
<tr class="memitem:a90f339410582512a018e885335f4477b"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a90f339410582512a018e885335f4477b">update</a> (const auto &amp;...output_z)</td></tr>
<tr class="memdesc:a90f339410582512a018e885335f4477b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the estimates with the outcome of a measurement.  <a href="classfcarouge_1_1kalman.xhtml#a90f339410582512a018e885335f4477b">More...</a><br /></td></tr>
<tr class="separator:a90f339410582512a018e885335f4477b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab982b714d1b27d0357f92d0dd6476e36"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab982b714d1b27d0357f92d0dd6476e36">predict</a> (const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</td></tr>
<tr class="memdesc:ab982b714d1b27d0357f92d0dd6476e36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Produces estimates of the state variables and uncertainties.  <a href="classfcarouge_1_1kalman.xhtml#ab982b714d1b27d0357f92d0dd6476e36">More...</a><br /></td></tr>
<tr class="separator:ab982b714d1b27d0357f92d0dd6476e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Private Member Types</div></td></tr>
<tr class="memitem:a9366f2fbd617686ad435a7f112526485"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">implementation</a> = <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments... &gt;</td></tr>
<tr class="memdesc:a9366f2fbd617686ad435a7f112526485"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation details of the filter.  <a href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">More...</a><br /></td></tr>
<tr class="separator:a9366f2fbd617686ad435a7f112526485"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Private Member Variables</div></td></tr>
<tr class="memitem:af71657097b5c1ad4fbeba22e45af8b6a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">implementation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a></td></tr>
<tr class="memdesc:af71657097b5c1ad4fbeba22e45af8b6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encapsulates the implementation details of the filter.  <a href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">More...</a><br /></td></tr>
<tr class="separator:af71657097b5c1ad4fbeba22e45af8b6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader">Public Characteristics Member Functions</h2></td></tr>
<tr class="memitem:a3a8c6ed3bfcdeb48f1ed926e397e8070"><td class="memItemLeft" align="right" valign="top">constexpr void constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a>(const auto &amp;value) requires std void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:a3a8c6ed3bfcdeb48f1ed926e397e8070"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the process noise covariance matrix Q function.  <a href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">More...</a><br /></td></tr>
<tr class="separator:a3a8c6ed3bfcdeb48f1ed926e397e8070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28e02a92c241e3ec7c312c68bb0cd9ab"><td class="memItemLeft" align="right" valign="top">constexpr void constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a>(const auto &amp;value) requires std void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">f</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:a28e02a92c241e3ec7c312c68bb0cd9ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the observation noise covariance matrix R function.  <a href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">More...</a><br /></td></tr>
<tr class="separator:a28e02a92c241e3ec7c312c68bb0cd9ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accf9dac2b6b51745a2f9419448518992"><td class="memItemLeft" align="right" valign="top">constexpr void constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">f</a>(const auto &amp;value) requires std void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">h</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:accf9dac2b6b51745a2f9419448518992"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state transition matrix F function.  <a href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">More...</a><br /></td></tr>
<tr class="separator:accf9dac2b6b51745a2f9419448518992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a562e32889c094eed307d74068aaf5cb4"><td class="memItemLeft" align="right" valign="top">constexpr void constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">h</a>(const auto &amp;value) requires std void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">g</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:a562e32889c094eed307d74068aaf5cb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the observation transition matrix H function.  <a href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">More...</a><br /></td></tr>
<tr class="separator:a562e32889c094eed307d74068aaf5cb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0844f4cf2a686c3de8b294ea014aeded"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">x</a> () const</td></tr>
<tr class="memdesc:a0844f4cf2a686c3de8b294ea014aeded"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the state estimate vector X.  <a href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">More...</a><br /></td></tr>
<tr class="separator:a0844f4cf2a686c3de8b294ea014aeded"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf08bbef3125b4aa01b28faef28f13cd"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#aaf08bbef3125b4aa01b28faef28f13cd">x</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:aaf08bbef3125b4aa01b28faef28f13cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state estimate vector X.  <a href="classfcarouge_1_1kalman.xhtml#aaf08bbef3125b4aa01b28faef28f13cd">More...</a><br /></td></tr>
<tr class="separator:aaf08bbef3125b4aa01b28faef28f13cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f968760d0df4189d498d08c37d3b421"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7f968760d0df4189d498d08c37d3b421">z</a> () const</td></tr>
<tr class="memdesc:a7f968760d0df4189d498d08c37d3b421"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the observation vector Z.  <a href="classfcarouge_1_1kalman.xhtml#a7f968760d0df4189d498d08c37d3b421">More...</a><br /></td></tr>
<tr class="separator:a7f968760d0df4189d498d08c37d3b421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02e530252a39ccc9fa8067b574dd6da3"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a02e530252a39ccc9fa8067b574dd6da3">u</a> () const</td></tr>
<tr class="memdesc:a02e530252a39ccc9fa8067b574dd6da3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the control vector U.  <a href="classfcarouge_1_1kalman.xhtml#a02e530252a39ccc9fa8067b574dd6da3">More...</a><br /></td></tr>
<tr class="separator:a02e530252a39ccc9fa8067b574dd6da3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84462b9a06f423bc4ad5f68b4b9eeeaf"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">p</a> () const</td></tr>
<tr class="memdesc:a84462b9a06f423bc4ad5f68b4b9eeeaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the estimated covariance matrix P.  <a href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">More...</a><br /></td></tr>
<tr class="separator:a84462b9a06f423bc4ad5f68b4b9eeeaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3459d511191e15195d30840a45e61b91"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3459d511191e15195d30840a45e61b91">p</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:a3459d511191e15195d30840a45e61b91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the estimated covariance matrix P.  <a href="classfcarouge_1_1kalman.xhtml#a3459d511191e15195d30840a45e61b91">More...</a><br /></td></tr>
<tr class="separator:a3459d511191e15195d30840a45e61b91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf8eec2b4dd3ba52b53c89e52fe687cd"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a> () const</td></tr>
<tr class="memdesc:aaf8eec2b4dd3ba52b53c89e52fe687cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the process noise covariance matrix Q.  <a href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">More...</a><br /></td></tr>
<tr class="separator:aaf8eec2b4dd3ba52b53c89e52fe687cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb048ddaf25e01759269e60e0ffbbc2"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1fb048ddaf25e01759269e60e0ffbbc2">q</a> (const auto &amp;value, const auto &amp;...values)</td></tr>
<tr class="memdesc:a1fb048ddaf25e01759269e60e0ffbbc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the process noise covariance matrix Q.  <a href="classfcarouge_1_1kalman.xhtml#a1fb048ddaf25e01759269e60e0ffbbc2">More...</a><br /></td></tr>
<tr class="separator:a1fb048ddaf25e01759269e60e0ffbbc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename State, typename Output = State, typename Input = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt;<br />
class fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</h3>

<p>Kalman filter. </p>
<p>Bayesian filter that uses Gaussians.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">State</td><td>The type template parameter of the state vector x. </td></tr>
    <tr><td class="paramname">Output</td><td>The type template parameter of the measurement vector z. </td></tr>
    <tr><td class="paramname">Input</td><td>The type template parameter of the control u. </td></tr>
    <tr><td class="paramname">Transpose</td><td>The template template parameter of the transpose functor. </td></tr>
    <tr><td class="paramname">Divide</td><td>The template template parameter of the division functor. </td></tr>
    <tr><td class="paramname">Identity</td><td>The template template parameter of the identity functor. </td></tr>
    <tr><td class="paramname">PredictionArguments</td><td>The variadic type template parameter for additional prediction function parameters. Time, or a delta thereof, is often a prediction parameter. The parameters are propagated to the function objects used to compute the process noise Q, the state transition F, and the control transition G matrices.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>This class could be usable in constant expressions if <code>std::function</code> could too. The polymorphic function wrapper was used in place of function pointers to enable default initialization from this class, captured member variables. </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="rocket_altitude_8cpp-example.xhtml#_a2">rocket_altitude.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00077">77</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a4673a5e2e4615374f56a1882a2d3238e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4673a5e2e4615374f56a1882a2d3238e">&#9670;&nbsp;</a></span>estimate_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#aeeab0bf87147ab5eb761b65329fa7306">implementation::estimate_uncertainty</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the estimated correlated variance matrix P. </p>
<p>Also known as Σ. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="rocket_altitude_8cpp-example.xhtml#a3">rocket_altitude.cpp</a>, and <a class="el" href="vehicule_location_8cpp-example.xhtml#a2">vehicule_location.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a9366f2fbd617686ad435a7f112526485"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9366f2fbd617686ad435a7f112526485">&#9670;&nbsp;</a></span>implementation</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">implementation</a> =  <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">internal::kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments...&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implementation details of the filter. </p>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00084">84</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a599d23847b220984e2cfac8c21d053b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a599d23847b220984e2cfac8c21d053b8">&#9670;&nbsp;</a></span>input</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">implementation::input</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control vector U. </p>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00103">103</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a55c460ecef7aff22c337032154776d53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55c460ecef7aff22c337032154776d53">&#9670;&nbsp;</a></span>input_control</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">input_control</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9cf655d639b927c411afa2539025293e">implementation::input_control</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control transition matrix G. </p>
<p>Also known as B. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="rocket_altitude_8cpp-example.xhtml#a6">rocket_altitude.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00129">129</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a94f4d4a61922d1a55facf3a93abd1224"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94f4d4a61922d1a55facf3a93abd1224">&#9670;&nbsp;</a></span>output</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">implementation::output</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation vector Z. </p>
<p>Also known as Y. </p>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00100">100</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ad0d98ef4447df3321f0791bd055ae871"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0d98ef4447df3321f0791bd055ae871">&#9670;&nbsp;</a></span>output_model</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">output_model</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a40d8e17f21248972b00420a38c17d15d">implementation::output_model</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation transition matrix H. </p>
<p>Also known as C. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="vehicule_location_8cpp-example.xhtml#a5">vehicule_location.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00124">124</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a2004ab338554e8bac196ba1790d645ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2004ab338554e8bac196ba1790d645ef">&#9670;&nbsp;</a></span>output_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">output_uncertainty</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0a25ddfd9d10e98bfcf2b1107626a74e">implementation::output_uncertainty</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation noise correlated variance matrix R. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="vehicule_location_8cpp-example.xhtml#a6">vehicule_location.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00114">114</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a68a85f23dece8df5494f284ae152205b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68a85f23dece8df5494f284ae152205b">&#9670;&nbsp;</a></span>process_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0696ec2114175e75b0329823b1c62c99">implementation::process_uncertainty</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the process noise correlated variance matrix Q. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="rocket_altitude_8cpp-example.xhtml#a4">rocket_altitude.cpp</a>, and <a class="el" href="vehicule_location_8cpp-example.xhtml#a3">vehicule_location.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00111">111</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a560e82d7dd78f4a533805465d23be560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a560e82d7dd78f4a533805465d23be560">&#9670;&nbsp;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">implementation::state</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state estimate vector X. </p>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="afa3d55a6a7017bbf6f64318ed3be4e63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa3d55a6a7017bbf6f64318ed3be4e63">&#9670;&nbsp;</a></span>state_transition</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">state_transition</a> =  typename <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad9dad30b5500893230d878bf632d2f4a">implementation::state_transition</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state transition matrix F. </p>
<p>Also known as Φ or A. </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="rocket_altitude_8cpp-example.xhtml#a5">rocket_altitude.cpp</a>, and <a class="el" href="vehicule_location_8cpp-example.xhtml#a4">vehicule_location.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00119">119</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0867c09230f177320f6e72662c26c312"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0867c09230f177320f6e72662c26c312">&#9670;&nbsp;</a></span>kalman() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a Kalman filter without configuration. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="a90a28af20f228e08007fada65b067f72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90a28af20f228e08007fada65b067f72">&#9670;&nbsp;</a></span>kalman() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy constructs a filter. </p>
<p>Constructs the filter with the copy of the contents of the <code>other</code> filter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Another filter to be used as source to initialize the elements of the filter with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="a6e6bdf6b6dcd2e30e8ec68e24f02c887"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e6bdf6b6dcd2e30e8ec68e24f02c887">&#9670;&nbsp;</a></span>kalman() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move constructs a filter. </p>
<p>Move constructor. Constructs the filter with the contents of the <code>other</code> filter using move semantics (i.e. the data in <code>other</code> filter is moved from the other into this filter).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Another filter to be used as source to initialize the elements of the filter with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="afd3a868a3eada637707c1da922e6169a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd3a868a3eada637707c1da922e6169a">&#9670;&nbsp;</a></span>~kalman()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::~<a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructs the kalman filter. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae963a46d5d12a91e6805a4fe127e42ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae963a46d5d12a91e6805a4fe127e42ea">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&amp; <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy assignment operator. </p>
<p>Destroys or copy-assigns the contents with a copy of the contents of the other filter.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Another filter to be used as source to initialize the elements of the filter with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The reference value of this implicit object filter parameter, i.e. <code>*this</code>.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="abaa05e99744fabcc9c1c18ea66d66eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaa05e99744fabcc9c1c18ea66d66eaa">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&amp; <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Move assignment operator. </p>
<p>Replaces the contents of the filter with those of the <code>other</code> filter using move semantics (i.e. the data in <code>other</code> filter is moved from the other into this filter). The other filter is in a valid but unspecified state afterwards.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>Another filter to be used as source to initialize the elements of the filter with.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The reference value of this implicit object filter parameter, i.e. <code>*this</code>.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="a84462b9a06f423bc4ad5f68b4b9eeeaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84462b9a06f423bc4ad5f68b4b9eeeaf">&#9670;&nbsp;</a></span>p() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments... &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the estimated covariance matrix P. </p>
<dl class="section return"><dt>Returns</dt><dd>The estimated correlated variance matrix P.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00500">500</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a>;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;}</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af71657097b5c1ad4fbeba22e45af8b6a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00457">kalman.hpp:457</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a96369239684b9408a98d0b6cf4d7ee6d"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">fcarouge::internal::kalman::p</a></div><div class="ttdeci">estimate_uncertainty p</div><div class="ttdoc">The estimate uncertainty, covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00117">kalman.hpp:117</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00500">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p()</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00500">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a84462b9a06f423bc4ad5f68b4b9eeeaf_cgraph.svg" width="144" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a84462b9a06f423bc4ad5f68b4b9eeeaf_icgraph.svg" width="144" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3459d511191e15195d30840a45e61b91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3459d511191e15195d30840a45e61b91">&#9670;&nbsp;</a></span>p() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the estimated covariance matrix P. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00513">513</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;{</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a96369239684b9408a98d0b6cf4d7ee6d">p</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a>{ value, values... };</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;}</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4673a5e2e4615374f56a1882a2d3238e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00108">kalman.hpp:108</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00500">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::p()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a3459d511191e15195d30840a45e61b91_cgraph.svg" width="326" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab982b714d1b27d0357f92d0dd6476e36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab982b714d1b27d0357f92d0dd6476e36">&#9670;&nbsp;</a></span>predict()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::predict </td>
          <td>(</td>
          <td class="paramtype">const PredictionArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>input_u</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Produces estimates of the state variables and uncertainties. </p>
<p>Implements the total probability theorem?</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arguments</td><td>Optional prediction parameters passed through for computations of prediction matrices. </td></tr>
    <tr><td class="paramname">input_u</td><td>Optional control parameters. Types must be compatible with the <code>Input</code> types. The parameter pack types are always deduced per the greedy matching rule.</td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd><p class="startdd">Consider whether this method needs to exist or if the operator() is sufficient for all clients. </p>
<p class="enddd">Consider if returning the state vector X would be preferrable? And if it would be compatible with an ES-EKF implementation? Or if a fluent interface would be preferrable? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00684">684</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;{</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab86860dc9f2992f0fb3c6b71e980c187">predict</a>(arguments..., input_u...);</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;}</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab86860dc9f2992f0fb3c6b71e980c187"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab86860dc9f2992f0fb3c6b71e980c187">fcarouge::internal::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00193">kalman.hpp:193</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaf8eec2b4dd3ba52b53c89e52fe687cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf8eec2b4dd3ba52b53c89e52fe687cd">&#9670;&nbsp;</a></span>q() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments... &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the process noise covariance matrix Q. </p>
<dl class="section return"><dt>Returns</dt><dd>The process noise correlated variance matrix Q.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00528">528</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;{</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a>;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;}</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_afd1da894df4e15d533ff3557665976cf"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">fcarouge::internal::kalman::q</a></div><div class="ttdeci">process_uncertainty q</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00125">kalman.hpp:125</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00528">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q()</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00528">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_aaf8eec2b4dd3ba52b53c89e52fe687cd_cgraph.svg" width="144" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_aaf8eec2b4dd3ba52b53c89e52fe687cd_icgraph.svg" width="144" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1fb048ddaf25e01759269e60e0ffbbc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fb048ddaf25e01759269e60e0ffbbc2">&#9670;&nbsp;</a></span>q() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the process noise covariance matrix Q. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00541">541</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;{</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#afd1da894df4e15d533ff3557665976cf">q</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a>{ value, values... };</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;}</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a68a85f23dece8df5494f284ae152205b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00111">kalman.hpp:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00528">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::q()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a1fb048ddaf25e01759269e60e0ffbbc2_cgraph.svg" width="326" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a02e530252a39ccc9fa8067b574dd6da3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02e530252a39ccc9fa8067b574dd6da3">&#9670;&nbsp;</a></span>u()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::u </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the control vector U. </p>
<dl class="section return"><dt>Returns</dt><dd>The control vector U.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<a id="a90f339410582512a018e885335f4477b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90f339410582512a018e885335f4477b">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::update </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>output_z</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the estimates with the outcome of a measurement. </p>
<p>Implements the Bayes' theorem? Combine one measurement and the prior estimate.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">output_z</td><td>Observation parameters. Types must be compatible with the <code>output</code> type.</td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd><p class="startdd">Consider whether this method needs to exist or if the operator() is sufficient for all clients. </p>
<p class="enddd">Consider if returning the state vector X would be preferrable? And if it would be compatible with an ES-EKF implementation? Or if a fluent interface would be preferrable? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00671">671</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;{</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a549f84cd3dc8cbb3fdefd52aef3c35cc">update</a>(output_z...);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;}</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a549f84cd3dc8cbb3fdefd52aef3c35cc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a549f84cd3dc8cbb3fdefd52aef3c35cc">fcarouge::internal::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...output_z)</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00185">kalman.hpp:185</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0844f4cf2a686c3de8b294ea014aeded"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0844f4cf2a686c3de8b294ea014aeded">&#9670;&nbsp;</a></span>x() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments... &gt;::<a class="el" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the state estimate vector X. </p>
<dl class="section return"><dt>Returns</dt><dd>The state estimate vector X.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00472">472</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;{</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a>;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;}</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a3c2fb73364094e21919a0f165a1ba926"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">fcarouge::internal::kalman::x</a></div><div class="ttdeci">state x</div><div class="ttdoc">The state estimate vector x.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00112">kalman.hpp:112</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00472">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x()</a>.</p>

<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00472">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a0844f4cf2a686c3de8b294ea014aeded_cgraph.svg" width="143" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_a0844f4cf2a686c3de8b294ea014aeded_icgraph.svg" width="143" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaf08bbef3125b4aa01b28faef28f13cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf08bbef3125b4aa01b28faef28f13cd">&#9670;&nbsp;</a></span>x() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the state estimate vector X. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>Consider if a fluent interface would be preferrable? In addition to constructors? Same question for all characteristics set methods. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00485">485</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;{</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a3c2fb73364094e21919a0f165a1ba926">x</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a>{ value, values... };</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;}</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a560e82d7dd78f4a533805465d23be560"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00095">kalman.hpp:95</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00472">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::x()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classfcarouge_1_1kalman_aaf08bbef3125b4aa01b28faef28f13cd_cgraph.svg" width="323" height="62"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7f968760d0df4189d498d08c37d3b421"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f968760d0df4189d498d08c37d3b421">&#9670;&nbsp;</a></span>z()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::z </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the observation vector Z. </p>
<dl class="section return"><dt>Returns</dt><dd>The observation vector Z.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a28e02a92c241e3ec7c312c68bb0cd9ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28e02a92c241e3ec7c312c68bb0cd9ab">&#9670;&nbsp;</a></span>f</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::f</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the observation noise covariance matrix R function. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Returns the state transition matrix F.</p>
<dl class="section return"><dt>Returns</dt><dd>The state transition matrix F.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Sets the state transition matrix F.</p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00317">317</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="af71657097b5c1ad4fbeba22e45af8b6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af71657097b5c1ad4fbeba22e45af8b6a">&#9670;&nbsp;</a></span>filter</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output  = State, typename Input  = State, template&lt; typename &gt; typename Transpose = internal::transpose, template&lt; typename &gt; typename Symmetrize = internal::symmetrize, template&lt; typename, typename &gt; typename Divide = internal::divide, template&lt; typename &gt; typename Identity = internal::identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">implementation</a> <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::filter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Encapsulates the implementation details of the filter. </p>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00457">457</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a562e32889c094eed307d74068aaf5cb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a562e32889c094eed307d74068aaf5cb4">&#9670;&nbsp;</a></span>g</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::g</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the observation transition matrix H function. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Returns the control transition matrix G.</p>
<dl class="section return"><dt>Returns</dt><dd>The control transition matrix G.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Sets the control transition matrix G.</p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00365">365</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="accf9dac2b6b51745a2f9419448518992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accf9dac2b6b51745a2f9419448518992">&#9670;&nbsp;</a></span>h</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::h</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the state transition matrix F function. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Returns the observation transition matrix H.</p>
<dl class="section return"><dt>Returns</dt><dd>The observation transition matrix H.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Sets the observation transition matrix H.</p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00341">341</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a3a8c6ed3bfcdeb48f1ed926e397e8070"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a8c6ed3bfcdeb48f1ed926e397e8070">&#9670;&nbsp;</a></span>r</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;::r</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the process noise covariance matrix Q function. </p>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Returns the observation noise covariance matrix R.</p>
<p>The variance there is in each measurement.</p>
<dl class="section return"><dt>Returns</dt><dd>The observation noise correlated variance matrix R.</dd></dl>
<dl class="section user"><dt>Complexity</dt><dd>Constant.</dd></dl>
<p>Sets the observation noise covariance matrix R.</p>
<dl class="section user"><dt>Complexity</dt><dd>Constant. </dd></dl>

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00293">293</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/fcarouge/<a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a></li>
    <li class="footer">Generated on Fri May 6 2022 04:13:20 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
