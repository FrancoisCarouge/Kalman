<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/internal/utility.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('utility_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">utility.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="utility_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a> {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">concept </span>arithmetic = std::integral&lt;Type&gt; || std::floating_point&lt;Type&gt;;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">struct </span>empty {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> empty(<span class="keyword">auto</span> &amp;&amp;...any) <span class="keyword">noexcept</span> {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="comment">// Constructs from anything for all initializations compatibility.</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(any), ...);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>};</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> {};</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">   59</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">empty_pack</a> = pack&lt;&gt;;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>repack {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">using </span>type = Type;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>};</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">typename</span> From, <span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="keyword">struct </span>repack&lt;From&lt;Types...&gt;&gt; {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keyword">using </span>type = <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> size{<span class="keyword">sizeof</span>...(Types)};</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>};</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">   71</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> From&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">repack_t</a> = <span class="keyword">typename</span> repack&lt;From&gt;::type;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">   73</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> From&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">repack_s</a>{repack&lt;From&gt;::size};</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="keyword">template</span> &lt;auto Begin, auto End, auto Increment, <span class="keyword">typename</span> Function&gt;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">   76</a></span><span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (Begin &lt; End) {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    function(std::integral_constant&lt;<span class="keyword">decltype</span>(Begin), Begin&gt;());</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    for_constexpr&lt;Begin + Increment, End, Increment&gt;(function);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>}</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a3d7b84ab74ee71bcbb7b325f43c56b77">   84</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a3d7b84ab74ee71bcbb7b325f43c56b77">identity_v</a>{</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a34c026775cd123752a3d2876ba5ae7d2">   89</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a34c026775cd123752a3d2876ba5ae7d2">identity_v&lt;Arithmetic&gt;</a>{1};</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">requires</span> <span class="keyword">requires</span>(Matrix value) { value.Identity(); }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a26f3c00157550eff4aadf4c465238923">   93</a></span><span class="keyword">inline</span> <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a26f3c00157550eff4aadf4c465238923">identity_v&lt;Matrix&gt;</a>{Matrix::Identity()};</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a75b681b290b4c991f15e939cda798bb3">   96</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a75b681b290b4c991f15e939cda798bb3">zero_v</a>{</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>};</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a211fcef052146cd878e1ad70d12cf27d">  101</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a211fcef052146cd878e1ad70d12cf27d">zero_v&lt;Arithmetic&gt;</a>{0};</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keyword">requires</span> <span class="keyword">requires</span>(Matrix value) { value.Zero(); }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#ace0a378b2a42f9e8c113c89bfb3b816c">  105</a></span><span class="keyword">inline</span> <span class="keyword">const</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#ace0a378b2a42f9e8c113c89bfb3b816c">zero_v&lt;Matrix&gt;</a>{Matrix::Zero()};</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">struct </span>transpose final {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  operator()(<span class="keyword">const</span> Arithmetic &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  }</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(Matrix value) { value.transpose(); }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Matrix &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keywordflow">return</span> value.transpose();</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  }</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>};</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="keyword">struct </span>deducer final {</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="comment">// Built-in&#39;s types deductions.</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="keyword">template</span> &lt;arithmetic Lhs, arithmetic Rhs&gt;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      -&gt; <span class="keyword">decltype</span>(lhs / rhs);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="comment">// Eigen&#39;s types deductions.</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(Lhs lhs, Rhs rhs) {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>      <span class="keyword">typename</span> Lhs::PlainMatrix;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>      <span class="keyword">typename</span> Lhs::PlainMatrix;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    }</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>      <span class="keyword">typename</span> <span class="keyword">decltype</span>(lhs * rhs.transpose())::PlainMatrix;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, arithmetic Rhs&gt;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(Lhs lhs) { <span class="keyword">typename</span> Lhs::PlainMatrix; }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>      <span class="keyword">typename</span> Lhs::PlainMatrix;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keyword">template</span> &lt;arithmetic Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(Rhs rhs) { <span class="keyword">typename</span> Rhs::PlainMatrix; }</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      <span class="keyword">typename</span> <span class="keyword">decltype</span>(rhs.transpose())::PlainMatrix;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>};</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#aa6ea711fa95c137443798ecd78f0b841">  161</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#aa6ea711fa95c137443798ecd78f0b841">matrix</a> = std::decay_t&lt;std::invoke_result_t&lt;deducer, Lhs, Rhs&gt;&gt;;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>} <span class="comment">// namespace fcarouge::internal</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a211fcef052146cd878e1ad70d12cf27d"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a211fcef052146cd878e1ad70d12cf27d">fcarouge::internal::zero_v&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic zero_v&lt; Arithmetic &gt;</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00101">utility.hpp:101</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a26f3c00157550eff4aadf4c465238923"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a26f3c00157550eff4aadf4c465238923">fcarouge::internal::identity_v&lt; Matrix &gt;</a></div><div class="ttdeci">const auto identity_v&lt; Matrix &gt;</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00093">utility.hpp:93</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a34c026775cd123752a3d2876ba5ae7d2"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a34c026775cd123752a3d2876ba5ae7d2">fcarouge::internal::identity_v&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic identity_v&lt; Arithmetic &gt;</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00089">utility.hpp:89</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a3d7b84ab74ee71bcbb7b325f43c56b77"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a3d7b84ab74ee71bcbb7b325f43c56b77">fcarouge::internal::identity_v</a></div><div class="ttdeci">constexpr Type identity_v</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00084">utility.hpp:84</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4c0bbc15a41d76dd2b4b23d8566fba57"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00076">utility.hpp:76</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a567d18fbfbf6f8d1543bca57ba706f22"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">fcarouge::internal::repack_t</a></div><div class="ttdeci">typename repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00071">utility.hpp:71</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a61c7050558e5ccfe40b4c5d1c5c058b9"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">fcarouge::internal::repack_s</a></div><div class="ttdeci">constexpr auto repack_s</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00073">utility.hpp:73</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a75b681b290b4c991f15e939cda798bb3"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a75b681b290b4c991f15e939cda798bb3">fcarouge::internal::zero_v</a></div><div class="ttdeci">constexpr Type zero_v</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00096">utility.hpp:96</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a990c3b3d2e7c4889c7f666cc8e82c503"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">fcarouge::internal::empty_pack</a></div><div class="ttdeci">pack&lt;&gt; empty_pack</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00059">utility.hpp:59</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_aa6ea711fa95c137443798ecd78f0b841"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#aa6ea711fa95c137443798ecd78f0b841">fcarouge::internal::matrix</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; deducer, Lhs, Rhs &gt; &gt; matrix</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00161">utility.hpp:161</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ace0a378b2a42f9e8c113c89bfb3b816c"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ace0a378b2a42f9e8c113c89bfb3b816c">fcarouge::internal::zero_v&lt; Matrix &gt;</a></div><div class="ttdeci">const auto zero_v&lt; Matrix &gt;</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00105">utility.hpp:105</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa5a28afb4550bbcbd55d875351de6e27"><div class="ttname"><a href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a></div><div class="ttdeci">internal::pack&lt; Types... &gt; pack</div><div class="ttdoc">Convenience tuple-like pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00061">kalman.hpp:61</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_378fe1080454d2b2e5da42d8158af554.xhtml">internal</a></li><li class="navelem"><a class="el" href="utility_8hpp.xhtml">utility.hpp</a></li>
    <li class="footer">Generated on Mon Nov 14 2022 00:30:01 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
