<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/include/fcarouge/kalman_internal/utility.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.1</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('utility_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">utility.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="utility_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.5.1</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1kalman__internal.xhtml">fcarouge::kalman_internal</a> {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="keyword">concept </span>kalman_filter = <span class="keyword">requires</span>(Type value) {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keyword">typename</span> Type::state;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">typename</span> Type::output;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>};</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">concept </span>arithmetic = std::integral&lt;Type&gt; || std::floating_point&lt;Type&gt;;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">concept </span>algebraic = <span class="keyword">requires</span>(Type value) { value(0, 0); };</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keyword">concept </span>has_input_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.u; };</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="keyword">concept </span>has_input_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.u(); };</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">concept </span>has_input = has_input_member&lt;Filter&gt; || has_input_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword">concept </span>has_process_uncertainty_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.q; };</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span><span class="keyword">concept </span>has_process_uncertainty_method =</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.q(); };</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword">concept </span>has_process_uncertainty = has_process_uncertainty_member&lt;Filter&gt; ||</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>                                  has_process_uncertainty_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="keyword">concept </span>has_output_uncertainty_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.r; };</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword">concept </span>has_output_uncertainty_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.r(); };</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword">concept </span>has_output_uncertainty = has_output_uncertainty_member&lt;Filter&gt; ||</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>                                 has_output_uncertainty_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="keyword">concept </span>has_input_control_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.g; };</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keyword">concept </span>has_input_control_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.g(); };</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">concept </span>has_input_control =</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    has_input_control_member&lt;Filter&gt; || has_input_control_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="keyword">concept </span>has_state_transition_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.f; };</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">concept </span>has_state_transition_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.f(); };</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="keyword">concept </span>has_state_transition =</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    has_state_transition_member&lt;Filter&gt; || has_state_transition_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="keyword">concept </span>has_output_model_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.h; };</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="keyword">concept </span>has_output_model_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.h(); };</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="keyword">concept </span>has_output_model =</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    has_output_model_member&lt;Filter&gt; || has_output_model_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keyword">concept </span>has_prediction_types =</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="keyword">requires</span>() { <span class="keyword">typename</span> Filter::prediction_types; };</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="keyword">concept </span>has_update_types = <span class="keyword">requires</span>() { <span class="keyword">typename</span> Filter::update_types; };</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="comment">// There is only one known way to do conditional member types: partial</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="comment">// specialization of class templates.</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_input {};</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span><span class="keyword">template</span> &lt;has_input Filter&gt; <span class="keyword">struct </span>conditional_input&lt;Filter&gt; {</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">using </span>input = Filter::input;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>};</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_input_control {};</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="keyword">template</span> &lt;has_input_control Filter&gt; <span class="keyword">struct </span>conditional_input_control&lt;Filter&gt; {</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6fdb5b3b4fc087c9c7913bc64708ec66">input_control</a> = Filter::input_control;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>};</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_output_model {};</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="keyword">template</span> &lt;has_output_model Filter&gt; <span class="keyword">struct </span>conditional_output_model&lt;Filter&gt; {</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a5cde5a9f3fe3a8d4f14ea136c15227dd">output_model</a> = Filter::output_model;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>};</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_process_uncertainty {};</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">template</span> &lt;has_process_uncerta<span class="keywordtype">int</span>y Filter&gt;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="keyword">struct </span>conditional_process_uncertainty&lt;Filter&gt; {</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ac6a9cf33472fe67bd423c384ef492c25">process_uncertainty</a> = Filter::process_uncertainty;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>};</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_output_uncertainty {};</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span><span class="keyword">template</span> &lt;has_output_uncerta<span class="keywordtype">int</span>y Filter&gt;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">struct </span>conditional_output_uncertainty&lt;Filter&gt; {</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ae0d4cb88e21450951fd7dc06f745f71b">output_uncertainty</a> = Filter::output_uncertainty;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>};</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_prediction_types {};</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">template</span> &lt;has_prediction_types Filter&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keyword">struct </span>conditional_prediction_types&lt;Filter&gt; {</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="keyword">using </span>prediction_types = Filter::prediction_types;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>};</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_state_transition {};</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span><span class="keyword">template</span> &lt;has_state_transition Filter&gt;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span><span class="keyword">struct </span>conditional_state_transition&lt;Filter&gt; {</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ac1a1ab117704e8837bb031d8c597826c">state_transition</a> = Filter::state_transition;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>};</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_update_types {};</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span><span class="keyword">template</span> &lt;has_update_types Filter&gt; <span class="keyword">struct </span>conditional_update_types&lt;Filter&gt; {</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keyword">using </span>update_types = Filter::update_types;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>};</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="comment">// The only way to have a conditional member type is to inherit from a template</span></div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span><span class="comment">// specialization on the member type.</span></div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="keyword">struct </span>conditional_member_types : <span class="keyword">public</span> conditional_input_control&lt;Filter&gt;,</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>                                  conditional_input&lt;Filter&gt;,</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>                                  conditional_output_model&lt;Filter&gt;,</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>                                  conditional_output_uncertainty&lt;Filter&gt;,</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>                                  conditional_prediction_types&lt;Filter&gt;,</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>                                  conditional_process_uncertainty&lt;Filter&gt;,</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>                                  conditional_state_transition&lt;Filter&gt;,</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>                                  conditional_update_types&lt;Filter&gt; {};</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>repacker {</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keyword">using </span>type = Type;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>};</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">typename</span> Pack, <span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span><span class="keyword">struct </span>repacker&lt;Pack&lt;Types...&gt;&gt; {</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  <span class="keyword">using </span>type = std::tuple&lt;Types...&gt;;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> std::size_t <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a6124372e90d64265057a98b5fa4efde1">size</a>{<span class="keyword">sizeof</span>...(Types)};</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>};</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span> Value, <span class="keyword">auto</span>... Values&gt; <span class="keyword">struct </span>first_value {</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> value{Value};</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>};</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>not_implemented {</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <span class="keyword">template</span> &lt;auto Size&gt;</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> not_implemented(</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>      [[maybe_unused]] <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;message)[Size]) {</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    <span class="comment">// The argument message is printed in the compiler error output.</span></div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  }</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> type_dependent_false{<span class="keyword">sizeof</span>(Type) != <span class="keyword">sizeof</span>(Type)};</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> missing{type_dependent_false};</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keyword">static_assert</span>(missing, <span class="stringliteral">&quot;This type is not implemented. See compiler message.&quot;</span>);</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>};</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a07fc27e05c31227e1a2cbb18f40437ee">  252</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a07fc27e05c31227e1a2cbb18f40437ee">empty_tuple</a> = std::tuple&lt;&gt;;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">  254</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">repack</a> = repacker&lt;Pack&gt;::type;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">  257</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">first</a> = std::tuple_element_t&lt;0, std::tuple&lt;Types...&gt;&gt;;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span><span class="keyword">template</span> &lt;std::size_t Begin, std::size_t End, std::size_t Increment,</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>          <span class="keyword">typename</span> Function&gt;</div>
<div class="foldopen" id="foldopen00261" data-start="{" data-end="}">
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">  261</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (Begin &lt; End) {</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#aae3a67a49bba50976bb2b701fcc42a1e">function</a>(std::integral_constant&lt;std::size_t, Begin&gt;());</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">kalman_internal::for_constexpr&lt;Begin + Increment, End, Increment&gt;</a>(</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>        std::forward&lt;Function&gt;(function));</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  }</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>}</div>
</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a6124372e90d64265057a98b5fa4efde1">  269</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a6124372e90d64265057a98b5fa4efde1">size</a>{repacker&lt;Pack&gt;::size};</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span>... Values&gt;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">  272</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">first_v</a>{first_value&lt;Values...&gt;::value};</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt; <span class="keyword">struct </span>tupler {</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = std::make_index_sequence&lt;Size&gt;&gt; <span class="keyword">struct </span>helper;</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  <span class="keyword">template</span> &lt;std::size_t... Indexes&gt;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  <span class="keyword">struct </span>helper&lt;std::index_sequence&lt;Indexes...&gt;&gt; {</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span>&gt; <span class="keyword">using </span>wrap = Type;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <span class="keyword">using </span>type = std::tuple&lt;wrap&lt;Indexes&gt;...&gt;;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  };</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keyword">using </span>type = <span class="keyword">typename</span> helper&lt;&gt;::type;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>};</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt;</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">  288</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">tuple_n_type</a> = <span class="keyword">typename</span> tupler&lt;Type, Size&gt;::type;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span> </div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>} <span class="comment">// namespace fcarouge::kalman_internal</span></div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1kalman__filter.xhtml">  300</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1kalman__filter.xhtml">kalman_filter</a> = kalman_internal::kalman_filter&lt;Type&gt;;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1arithmetic.xhtml">  306</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a> = kalman_internal::arithmetic&lt;Type&gt;;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1algebraic.xhtml">  312</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1algebraic.xhtml">algebraic</a> = kalman_internal::algebraic&lt;Type&gt;;</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__input.xhtml">  319</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__input.xhtml">has_input</a> = kalman_internal::has_input&lt;Filter&gt;;</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__process__uncertainty.xhtml">  326</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__process__uncertainty.xhtml">has_process_uncertainty</a> =</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>    kalman_internal::has_process_uncertainty&lt;Filter&gt;;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__output__uncertainty.xhtml">  334</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__output__uncertainty.xhtml">has_output_uncertainty</a> =</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>    kalman_internal::has_output_uncertainty&lt;Filter&gt;;</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__prediction__types.xhtml">  343</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__prediction__types.xhtml">has_prediction_types</a> = kalman_internal::has_prediction_types&lt;Filter&gt;;</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span> </div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__input__control.xhtml">  350</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__input__control.xhtml">has_input_control</a> = kalman_internal::has_input_control&lt;Filter&gt;;</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__state__transition.xhtml">  357</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__state__transition.xhtml">has_state_transition</a> = kalman_internal::has_state_transition&lt;Filter&gt;;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__update__types.xhtml">  364</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__update__types.xhtml">has_update_types</a> = kalman_internal::has_update_types&lt;Filter&gt;;</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno"><a class="line" href="conceptfcarouge_1_1has__output__model.xhtml">  371</a></span><span class="keyword">concept </span><a class="code hl_concept" href="conceptfcarouge_1_1has__output__model.xhtml">has_output_model</a> = kalman_internal::has_output_model&lt;Filter&gt;;</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span> </div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span> </div>
<div class="foldopen" id="foldopen00388" data-start="{" data-end="};">
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divides.xhtml">  388</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1divides.xhtml">divides</a> {</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">  390</a></span>  <a class="code hl_function" href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs / rhs);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>};</div>
</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">  395</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">quotient</a> =</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>    std::invoke_result_t&lt;divides&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span> </div>
<div class="foldopen" id="foldopen00400" data-start="{" data-end="};">
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluates.xhtml">  400</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1evaluates.xhtml">evaluates</a> {</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">  401</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">operator()</a>() const -&gt; Type;</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>};</div>
</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span> </div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">  405</a></span>template &lt;typename Type&gt; using <a class="code hl_typedef" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">evaluate</a> = std::invoke_result_t&lt;<a class="code hl_struct" href="structfcarouge_1_1evaluates.xhtml">evaluates</a>&lt;Type&gt;&gt;;</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="foldopen" id="foldopen00408" data-start="{" data-end="};">
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes.xhtml">  408</a></span>template &lt;typename Type&gt; struct <a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes</a> {</div>
<div class="foldopen" id="foldopen00409" data-start="{" data-end="}">
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">  409</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">operator()</a>(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>  }</div>
</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>};</div>
</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  <span class="keyword">requires</span> <span class="keyword">requires</span>(Type value) { value.transpose(); }</div>
<div class="foldopen" id="foldopen00416" data-start="{" data-end="};">
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml">  416</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes</a>&lt;Type&gt; {</div>
<div class="foldopen" id="foldopen00417" data-start="{" data-end="}">
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">  417</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">operator()</a>(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>    <span class="keywordflow">return</span> value.transpose();</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  }</div>
</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>};</div>
</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span> </div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">  424</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">transpose</a> = std::invoke_result_t&lt;transposes&lt;Type&gt;, <span class="keyword">const</span> Type &amp;&gt;;</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span> </div>
<div class="foldopen" id="foldopen00429" data-start="{" data-end="}">
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">  429</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">t</a>(<span class="keyword">const</span> Type &amp;value) {</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1transposes.xhtml">transposes&lt;Type&gt;</a>{}(value);</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>}</div>
</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span> </div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a65f3b3f6c8585f8fa1a66b73611a0f80">  436</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a65f3b3f6c8585f8fa1a66b73611a0f80">empty_tuple</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a07fc27e05c31227e1a2cbb18f40437ee">kalman_internal::empty_tuple</a>;</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span> </div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ae6cd29f601f05a5f692380821fa33488">  441</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#ae6cd29f601f05a5f692380821fa33488">first</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">kalman_internal::first</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span> </div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt;</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a507f2bec715f9eb51f61172ca3fbc997">  445</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a507f2bec715f9eb51f61172ca3fbc997">tuple_n_type</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">kalman_internal::tuple_n_type&lt;Type, Size&gt;</a>;</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span> </div>
<div class="foldopen" id="foldopen00448" data-start="{" data-end="};">
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno"><a class="line" href="structfcarouge_1_1multiplies.xhtml">  448</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1multiplies.xhtml">multiplies</a> {</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno"><a class="line" href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">  450</a></span>  <a class="code hl_function" href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs * rhs);</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>};</div>
</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span> </div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">  455</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">product</a> =</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>    std::invoke_result_t&lt;multiplies&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="foldopen" id="foldopen00459" data-start="{" data-end="};">
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno"><a class="line" href="structfcarouge_1_1minus.xhtml">  459</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1minus.xhtml">minus</a> {</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno"><a class="line" href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">  461</a></span>  <a class="code hl_function" href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">operator()</a>(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs - rhs);</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>};</div>
</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">  466</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">difference</a> =</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>    std::invoke_result_t&lt;minus&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span> </div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">  471</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">ᴀʙᵀ</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">evaluate&lt;product&lt;Lhs, evaluate&lt;transpose&lt;Rhs&gt;</a>&gt;&gt;&gt;;</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span> </div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span> </div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span> </div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span><span class="keyword">template</span> &lt;std::size_t Begin, std::size_t End, std::size_t Increment,</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>          <span class="keyword">typename</span> Function&gt;</div>
<div class="foldopen" id="foldopen00483" data-start="{" data-end="}">
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">  483</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>  <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">kalman_internal::for_constexpr&lt;Begin, End, Increment&gt;</a>(</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>      std::forward&lt;Function&gt;(function));</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>}</div>
</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span> </div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span> </div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span> </div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt;</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">  497</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> std::size_t <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>{<a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a6124372e90d64265057a98b5fa4efde1">kalman_internal::size&lt;Pack&gt;</a>};</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span> </div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span>... Values&gt;</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">  501</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">first_v</a>{<a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">kalman_internal::first_v</a>&lt;Values...&gt;};</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span> </div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00509" data-start="{" data-end="};">
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">  509</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">one</a>{kalman_internal::not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>    <span class="stringliteral">&quot;Implement the linear algebra one-diagonal matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span> </div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">  513</a></span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">one&lt;Arithmetic&gt;</a>{1};</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span> </div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Identity(); }</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">  517</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">one&lt;Type&gt;</a>{Type::Identity()};</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span> </div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::identity(); }</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">one&lt;Type&gt;</a>{Type::identity()};</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span> </div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00527" data-start="{" data-end="};">
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">  527</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero</a>{kalman_internal::not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>    <span class="stringliteral">&quot;Implement the linear algebra zero matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span> </div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">  532</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">zero&lt;Arithmetic&gt;</a>{0};</div>
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno">  533</span> </div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno">  534</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Zero(); }</div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">  536</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">zero&lt;Type&gt;</a>{Type::Zero()};</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span> </div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::zero(); }</div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">zero&lt;Type&gt;</a>{Type::zero()};</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span> </div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span> </div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span> </div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1algebraic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1algebraic.xhtml">fcarouge::algebraic</a></div><div class="ttdoc">Algebraic concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00312">utility.hpp:312</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1arithmetic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a></div><div class="ttdoc">Arithmetic concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00306">utility.hpp:306</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__input__control_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__input__control.xhtml">fcarouge::has_input_control</a></div><div class="ttdoc">Filter input control support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00350">utility.hpp:350</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__input_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__input.xhtml">fcarouge::has_input</a></div><div class="ttdoc">Filter input support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00319">utility.hpp:319</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__output__model_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__output__model.xhtml">fcarouge::has_output_model</a></div><div class="ttdoc">Filter output model support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00371">utility.hpp:371</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__output__uncertainty_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__output__uncertainty.xhtml">fcarouge::has_output_uncertainty</a></div><div class="ttdoc">Filter output uncertainty support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00334">utility.hpp:334</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__prediction__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__prediction__types.xhtml">fcarouge::has_prediction_types</a></div><div class="ttdoc">Filter prediction pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00343">utility.hpp:343</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__process__uncertainty_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__process__uncertainty.xhtml">fcarouge::has_process_uncertainty</a></div><div class="ttdoc">Filter process uncertainty support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00326">utility.hpp:326</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__state__transition_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__state__transition.xhtml">fcarouge::has_state_transition</a></div><div class="ttdoc">Filter state transition support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00357">utility.hpp:357</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__update__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__update__types.xhtml">fcarouge::has_update_types</a></div><div class="ttdoc">Filter update pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00364">utility.hpp:364</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1kalman__filter_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1kalman__filter.xhtml">fcarouge::kalman_filter</a></div><div class="ttdoc">Kalman filter concept.</div><div class="ttdef"><b>Definition</b> <a href="#l00300">utility.hpp:300</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml">fcarouge::kalman_internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a07fc27e05c31227e1a2cbb18f40437ee"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a07fc27e05c31227e1a2cbb18f40437ee">fcarouge::kalman_internal::empty_tuple</a></div><div class="ttdeci">std::tuple&lt;&gt; empty_tuple</div><div class="ttdef"><b>Definition</b> <a href="#l00252">utility.hpp:252</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a5514c5591cc1a7635a3179439d68be98"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">fcarouge::kalman_internal::filter</a></div><div class="ttdeci">constexpr filter_deducer&lt; Filter &gt; filter</div><div class="ttdef"><b>Definition</b> <a href="factory_8hpp_source.xhtml#l00355">factory.hpp:355</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a5cde5a9f3fe3a8d4f14ea136c15227dd"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a5cde5a9f3fe3a8d4f14ea136c15227dd">fcarouge::kalman_internal::output_model</a></div><div class="ttdeci">output_model(Element) -&gt; output_model&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6050c2c2ac7054eaffa8e5c58dab7bd4"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">fcarouge::kalman_internal::tuple_n_type</a></div><div class="ttdeci">typename tupler&lt; Type, Size &gt;::type tuple_n_type</div><div class="ttdef"><b>Definition</b> <a href="#l00288">utility.hpp:288</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6124372e90d64265057a98b5fa4efde1"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6124372e90d64265057a98b5fa4efde1">fcarouge::kalman_internal::size</a></div><div class="ttdeci">constexpr auto size</div><div class="ttdef"><b>Definition</b> <a href="#l00269">utility.hpp:269</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a66f34e6d5c7f8322c4d5f63051e20139"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">fcarouge::kalman_internal::first</a></div><div class="ttdeci">std::tuple_element_t&lt; 0, std::tuple&lt; Types... &gt; &gt; first</div><div class="ttdef"><b>Definition</b> <a href="#l00257">utility.hpp:257</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6baba1af637abe5f76f3b5184d0ff3c6"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">fcarouge::kalman_internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition</b> <a href="#l00261">utility.hpp:261</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6fdb5b3b4fc087c9c7913bc64708ec66"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6fdb5b3b4fc087c9c7913bc64708ec66">fcarouge::kalman_internal::input_control</a></div><div class="ttdeci">input_control(Element) -&gt; input_control&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aa1a9ffab51e79feaa4cc54fbad7bff1e"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">fcarouge::kalman_internal::repack</a></div><div class="ttdeci">repacker&lt; Pack &gt;::type repack</div><div class="ttdef"><b>Definition</b> <a href="#l00254">utility.hpp:254</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aad9be752b238d15bfc4ea67b30660cc7"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">fcarouge::kalman_internal::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdef"><b>Definition</b> <a href="#l00272">utility.hpp:272</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aae3a67a49bba50976bb2b701fcc42a1e"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aae3a67a49bba50976bb2b701fcc42a1e">fcarouge::kalman_internal::function</a></div><div class="ttdeci">function(Callable) -&gt; function&lt; function_traits_t&lt; Callable &gt; &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ac1a1ab117704e8837bb031d8c597826c"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ac1a1ab117704e8837bb031d8c597826c">fcarouge::kalman_internal::state_transition</a></div><div class="ttdeci">state_transition(Element) -&gt; state_transition&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ac6a9cf33472fe67bd423c384ef492c25"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ac6a9cf33472fe67bd423c384ef492c25">fcarouge::kalman_internal::process_uncertainty</a></div><div class="ttdeci">process_uncertainty(Element) -&gt; process_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ae0d4cb88e21450951fd7dc06f745f71b"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ae0d4cb88e21450951fd7dc06f745f71b">fcarouge::kalman_internal::output_uncertainty</a></div><div class="ttdeci">output_uncertainty(Element) -&gt; output_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a06ed7a99de8c150ba47d98be11bf795d"><div class="ttname"><a href="namespacefcarouge.xhtml#a06ed7a99de8c150ba47d98be11bf795d">fcarouge::transpose</a></div><div class="ttdeci">std::invoke_result_t&lt; transposes&lt; Type &gt;, const Type &amp; &gt; transpose</div><div class="ttdoc">Transposer helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00424">utility.hpp:424</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a1e0d4e00e05e1ca7701aa8dfc9681d77"><div class="ttname"><a href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">fcarouge::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdoc">Unpack the first value of the non-type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00501">utility.hpp:501</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a26e349ac2062d99cb0962705f1f93657"><div class="ttname"><a href="namespacefcarouge.xhtml#a26e349ac2062d99cb0962705f1f93657">fcarouge::product</a></div><div class="ttdeci">std::invoke_result_t&lt; multiplies&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; product</div><div class="ttdoc">Helper type to deduce the result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="#l00455">utility.hpp:455</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a507f2bec715f9eb51f61172ca3fbc997"><div class="ttname"><a href="namespacefcarouge.xhtml#a507f2bec715f9eb51f61172ca3fbc997">fcarouge::tuple_n_type</a></div><div class="ttdeci">kalman_internal::tuple_n_type&lt; Type, Size &gt; tuple_n_type</div><div class="ttdoc">An alias for making a tuple of the same type.</div><div class="ttdef"><b>Definition</b> <a href="#l00445">utility.hpp:445</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5567c841761bdb7aac049796d4c43580"><div class="ttname"><a href="namespacefcarouge.xhtml#a5567c841761bdb7aac049796d4c43580">fcarouge::zero&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic zero&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton zero matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00532">utility.hpp:532</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5ad0022b969a210b7261d0158bc1dd7b"><div class="ttname"><a href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">fcarouge::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="#l00483">utility.hpp:483</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5d1b555b919a51d9ef29849f6e86b48a"><div class="ttname"><a href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">fcarouge::t</a></div><div class="ttdeci">auto t(const Type &amp;value)</div><div class="ttdoc">Transpose helper function.</div><div class="ttdef"><b>Definition</b> <a href="#l00429">utility.hpp:429</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a65f3b3f6c8585f8fa1a66b73611a0f80"><div class="ttname"><a href="namespacefcarouge.xhtml#a65f3b3f6c8585f8fa1a66b73611a0f80">fcarouge::empty_tuple</a></div><div class="ttdeci">kalman_internal::empty_tuple empty_tuple</div><div class="ttdoc">Type of the empty tuple.</div><div class="ttdef"><b>Definition</b> <a href="#l00436">utility.hpp:436</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a773f87f2fdf94a96f0c048f85a1e5106"><div class="ttname"><a href="namespacefcarouge.xhtml#a773f87f2fdf94a96f0c048f85a1e5106">fcarouge::one&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic one&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton one matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00513">utility.hpp:513</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a8887e952722c60720253e416166a9233"><div class="ttname"><a href="namespacefcarouge.xhtml#a8887e952722c60720253e416166a9233">fcarouge::one</a></div><div class="ttdeci">constexpr Type one</div><div class="ttdoc">The one matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00509">utility.hpp:509</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a8dbf59cfc0dc0e18d5cee189c7f35d41"><div class="ttname"><a href="namespacefcarouge.xhtml#a8dbf59cfc0dc0e18d5cee189c7f35d41">fcarouge::difference</a></div><div class="ttdeci">std::invoke_result_t&lt; minus&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; difference</div><div class="ttdoc">Helper type to deduce the result type of the minus, subtraction.</div><div class="ttdef"><b>Definition</b> <a href="#l00466">utility.hpp:466</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a972eb30c6ed1a0e253d8539e87e15908"><div class="ttname"><a href="namespacefcarouge.xhtml#a972eb30c6ed1a0e253d8539e87e15908">fcarouge::evaluate</a></div><div class="ttdeci">std::invoke_result_t&lt; evaluates&lt; Type &gt; &gt; evaluate</div><div class="ttdoc">Evaluater helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00405">utility.hpp:405</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa0e360c3c4b209b1ab2141f8376c3bae"><div class="ttname"><a href="namespacefcarouge.xhtml#aa0e360c3c4b209b1ab2141f8376c3bae">fcarouge::quotient</a></div><div class="ttdeci">std::invoke_result_t&lt; divides&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; quotient</div><div class="ttdoc">Divider helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00395">utility.hpp:395</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac0283af94a195958399959586dcc8a50"><div class="ttname"><a href="namespacefcarouge.xhtml#ac0283af94a195958399959586dcc8a50">fcarouge::zero&lt; Type &gt;</a></div><div class="ttdeci">auto zero&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00536">utility.hpp:536</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac4cffefdda8c01a267ce2700c6acb903"><div class="ttname"><a href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="#l00497">utility.hpp:497</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae6cd29f601f05a5f692380821fa33488"><div class="ttname"><a href="namespacefcarouge.xhtml#ae6cd29f601f05a5f692380821fa33488">fcarouge::first</a></div><div class="ttdeci">kalman_internal::first&lt; Types... &gt; first</div><div class="ttdoc">Unpack the first type of the type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00441">utility.hpp:441</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aec3bfab0842e1f83b5f1493062848140"><div class="ttname"><a href="namespacefcarouge.xhtml#aec3bfab0842e1f83b5f1493062848140">fcarouge::ᴀʙᵀ</a></div><div class="ttdeci">evaluate&lt; product&lt; Lhs, evaluate&lt; transpose&lt; Rhs &gt; &gt; &gt; &gt; ᴀʙᵀ</div><div class="ttdoc">The evaluated type of the ABᵀ expression.</div><div class="ttdef"><b>Definition</b> <a href="#l00471">utility.hpp:471</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aef6fb6c8a265d85709b951506123a5f1"><div class="ttname"><a href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">fcarouge::zero</a></div><div class="ttdeci">constexpr Type zero</div><div class="ttdoc">The zero matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00527">utility.hpp:527</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_af1e24dabeb646745f490f0aa51f690b5"><div class="ttname"><a href="namespacefcarouge.xhtml#af1e24dabeb646745f490f0aa51f690b5">fcarouge::one&lt; Type &gt;</a></div><div class="ttdeci">auto one&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00517">utility.hpp:517</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divides_xhtml"><div class="ttname"><a href="structfcarouge_1_1divides.xhtml">fcarouge::divides</a></div><div class="ttdoc">Linear algebra divides expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00388">utility.hpp:388</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divides_xhtml_a15b30f424893c658711a0bfb508cd5a3"><div class="ttname"><a href="structfcarouge_1_1divides.xhtml#a15b30f424893c658711a0bfb508cd5a3">fcarouge::divides::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs/rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1evaluates_xhtml"><div class="ttname"><a href="structfcarouge_1_1evaluates.xhtml">fcarouge::evaluates</a></div><div class="ttdoc">Linear algebra evaluates override expression lazy evaluation specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00400">utility.hpp:400</a></div></div>
<div class="ttc" id="astructfcarouge_1_1evaluates_xhtml_a3fa7cfc44179cb3518a7c619ae4fbf1f"><div class="ttname"><a href="structfcarouge_1_1evaluates.xhtml#a3fa7cfc44179cb3518a7c619ae4fbf1f">fcarouge::evaluates::operator()</a></div><div class="ttdeci">constexpr auto operator()() const -&gt; Type</div></div>
<div class="ttc" id="astructfcarouge_1_1minus_xhtml"><div class="ttname"><a href="structfcarouge_1_1minus.xhtml">fcarouge::minus</a></div><div class="ttdoc">Type minus, subtraction expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00459">utility.hpp:459</a></div></div>
<div class="ttc" id="astructfcarouge_1_1minus_xhtml_a2ff71dc60b5f253f3099d77feda46d3c"><div class="ttname"><a href="structfcarouge_1_1minus.xhtml#a2ff71dc60b5f253f3099d77feda46d3c">fcarouge::minus::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs - rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1multiplies_xhtml"><div class="ttname"><a href="structfcarouge_1_1multiplies.xhtml">fcarouge::multiplies</a></div><div class="ttdoc">Type multiplies expression type specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00448">utility.hpp:448</a></div></div>
<div class="ttc" id="astructfcarouge_1_1multiplies_xhtml_aeb27bdc97d599628f4d0ea63b589544f"><div class="ttname"><a href="structfcarouge_1_1multiplies.xhtml#aeb27bdc97d599628f4d0ea63b589544f">fcarouge::multiplies::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Lhs &amp;lhs, const Rhs &amp;rhs) const -&gt; decltype(lhs *rhs)</div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_3_01_type_01_4_xhtml_aadadc9485a0edbf93585d2f5562a6e06"><div class="ttname"><a href="structfcarouge_1_1transposes_3_01_type_01_4.xhtml#aadadc9485a0edbf93585d2f5562a6e06">fcarouge::transposes&lt; Type &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Type &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00417">utility.hpp:417</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_xhtml"><div class="ttname"><a href="structfcarouge_1_1transposes.xhtml">fcarouge::transposes</a></div><div class="ttdoc">Linear algebra transposes specialization point.</div><div class="ttdef"><b>Definition</b> <a href="#l00408">utility.hpp:408</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposes_xhtml_aadadc9485a0edbf93585d2f5562a6e06"><div class="ttname"><a href="structfcarouge_1_1transposes.xhtml#aadadc9485a0edbf93585d2f5562a6e06">fcarouge::transposes::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Type &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00409">utility.hpp:409</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_5c3532884164bb88b0a2e2abaff977cb.xhtml">kalman_internal</a></li><li class="navelem"><a class="el" href="utility_8hpp.xhtml">utility.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
