<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/include/fcarouge/kalman_internal/utility.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.3</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('utility_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">utility.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="utility_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.5.3</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1kalman__internal.xhtml">fcarouge::kalman_internal</a> {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">concept </span>kalman_filter = <span class="keyword">requires</span>(Type value) {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">typename</span> Type::state;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keyword">typename</span> Type::output;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>};</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">concept </span>arithmetic = std::integral&lt;Type&gt; || std::floating_point&lt;Type&gt;;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="keyword">concept </span>algebraic = <span class="keyword">requires</span>(Type value) { value(0, 0); };</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="keyword">concept </span>has_input_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.u; };</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keyword">concept </span>has_input_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.u(); };</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword">concept </span>has_input = has_input_member&lt;Filter&gt; || has_input_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">concept </span>has_process_uncertainty_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.q; };</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">concept </span>has_process_uncertainty_method =</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.q(); };</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">concept </span>has_process_uncertainty = has_process_uncertainty_member&lt;Filter&gt; ||</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>                                  has_process_uncertainty_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="keyword">concept </span>has_output_uncertainty_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.r; };</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">concept </span>has_output_uncertainty_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.r(); };</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="keyword">concept </span>has_output_uncertainty = has_output_uncertainty_member&lt;Filter&gt; ||</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>                                 has_output_uncertainty_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keyword">concept </span>has_prediction_types =</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="keyword">requires</span>() { <span class="keyword">typename</span> Filter::prediction_types; };</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="keyword">concept </span>has_input_control_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.g; };</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="keyword">concept </span>has_input_control_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.g(); };</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="keyword">concept </span>has_input_control =</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    has_input_control_member&lt;Filter&gt; || has_input_control_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="keyword">concept </span>has_state_transition_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.f; };</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="keyword">concept </span>has_state_transition_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.f(); };</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword">concept </span>has_state_transition =</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    has_state_transition_member&lt;Filter&gt; || has_state_transition_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">concept </span>has_update_types = <span class="keyword">requires</span>() { <span class="keyword">typename</span> Filter::update_types; };</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="keyword">concept </span>has_output_model_member = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.h; };</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword">concept </span>has_output_model_method = <span class="keyword">requires</span>(Filter <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>) { <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">filter</a>.h(); };</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span><span class="keyword">concept </span>has_output_model =</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    has_output_model_member&lt;Filter&gt; || has_output_model_method&lt;Filter&gt;;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span>divides {</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  operator()(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs / rhs);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>};</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a0f6af3a28e58f1b5e727aa85543951a0">  213</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a0f6af3a28e58f1b5e727aa85543951a0">quotient</a> =</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    std::invoke_result_t&lt;divides&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>evaluates {</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()() <span class="keyword">const</span> -&gt; Type;</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>};</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a1fa2c30dc7bf1f7626c078eaed358625">  223</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a1fa2c30dc7bf1f7626c078eaed358625">evaluate</a> = std::invoke_result_t&lt;evaluates&lt;Type&gt;&gt;;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>transposes {</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  }</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>};</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="keyword">requires</span> <span class="keyword">requires</span>(Type value) { value.transpose(); }</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keyword">struct </span>transposes&lt;Type&gt; {</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Type &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordflow">return</span> value.transpose();</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  }</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>};</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a0c947c78364703fa3847944dd073a837">  242</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a0c947c78364703fa3847944dd073a837">transpose</a> = std::invoke_result_t&lt;transposes&lt;Type&gt;, <span class="keyword">const</span> Type &amp;&gt;;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="foldopen" id="foldopen00247" data-start="{" data-end="}">
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#acb17489172dd8b3802d97fdd17f9d91b">  247</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">auto</span> <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#acb17489172dd8b3802d97fdd17f9d91b">t</a>(<span class="keyword">const</span> Type &amp;value) {</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keywordflow">return</span> transposes&lt;Type&gt;{}(value);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>}</div>
</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">  255</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">first</a> = std::tuple_element_t&lt;0, std::tuple&lt;Types...&gt;&gt;;</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt; <span class="keyword">struct </span>tupler {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = std::make_index_sequence&lt;Size&gt;&gt; <span class="keyword">struct </span>helper;</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <span class="keyword">template</span> &lt;std::size_t... Indexes&gt;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <span class="keyword">struct </span>helper&lt;std::index_sequence&lt;Indexes...&gt;&gt; {</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span>&gt; <span class="keyword">using </span>wrap = Type;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="keyword">using </span>type = std::tuple&lt;wrap&lt;Indexes&gt;...&gt;;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  };</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <span class="keyword">using </span>type = <span class="keyword">typename</span> helper&lt;&gt;::type;</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>};</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, std::<span class="keywordtype">size_t</span> Size&gt;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">  272</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">tuple_n_type</a> = <span class="keyword">typename</span> tupler&lt;Type, Size&gt;::type;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span>multiplies {</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  operator()(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs * rhs);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>};</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a4991c6dc9486cc2d13f83ba121053169">  282</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a4991c6dc9486cc2d13f83ba121053169">product</a> =</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    std::invoke_result_t&lt;multiplies&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt; <span class="keyword">struct </span>minus {</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  operator()(<span class="keyword">const</span> Lhs &amp;lhs, <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt; <span class="keyword">decltype</span>(lhs - rhs);</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>};</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#aaf401bd223c24f1406587dd5fd2dc2cf">  293</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#aaf401bd223c24f1406587dd5fd2dc2cf">difference</a> =</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    std::invoke_result_t&lt;minus&lt;Lhs, Rhs&gt;, <span class="keyword">const</span> Lhs &amp;, <span class="keyword">const</span> Rhs &amp;&gt;;</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Rhs&gt;</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a734eaffd024f86157a790692f947357d">  298</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a734eaffd024f86157a790692f947357d">ᴀʙᵀ</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#a1fa2c30dc7bf1f7626c078eaed358625">evaluate&lt;product&lt;Lhs, evaluate&lt;transpose&lt;Rhs&gt;</a>&gt;&gt;&gt;;</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span><span class="comment">// There is only one known way to do conditional member types: partial</span></div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span><span class="comment">// specialization of class templates.</span></div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_input {};</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span><span class="keyword">template</span> &lt;has_input Filter&gt; <span class="keyword">struct </span>conditional_input&lt;Filter&gt; {</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  <span class="keyword">using </span>input = Filter::input;</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>};</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_input_control {};</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span><span class="keyword">template</span> &lt;has_input_control Filter&gt; <span class="keyword">struct </span>conditional_input_control&lt;Filter&gt; {</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6fdb5b3b4fc087c9c7913bc64708ec66">input_control</a> = Filter::input_control;</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>};</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_output_model {};</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="keyword">template</span> &lt;has_output_model Filter&gt; <span class="keyword">struct </span>conditional_output_model&lt;Filter&gt; {</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a5cde5a9f3fe3a8d4f14ea136c15227dd">output_model</a> = Filter::output_model;</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>};</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_process_uncertainty {};</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="keyword">template</span> &lt;has_process_uncerta<span class="keywordtype">int</span>y Filter&gt;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span><span class="keyword">struct </span>conditional_process_uncertainty&lt;Filter&gt; {</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ac6a9cf33472fe67bd423c384ef492c25">process_uncertainty</a> = Filter::process_uncertainty;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>};</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_output_uncertainty {};</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span> </div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span><span class="keyword">template</span> &lt;has_output_uncerta<span class="keywordtype">int</span>y Filter&gt;</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span><span class="keyword">struct </span>conditional_output_uncertainty&lt;Filter&gt; {</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ae0d4cb88e21450951fd7dc06f745f71b">output_uncertainty</a> = Filter::output_uncertainty;</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>};</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_prediction_types {};</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span><span class="keyword">template</span> &lt;has_prediction_types Filter&gt;</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span><span class="keyword">struct </span>conditional_prediction_types&lt;Filter&gt; {</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>  <span class="keyword">using </span>prediction_types = Filter::prediction_types;</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>};</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_state_transition {};</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span> </div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span><span class="keyword">template</span> &lt;has_state_transition Filter&gt;</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span><span class="keyword">struct </span>conditional_state_transition&lt;Filter&gt; {</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>  <span class="keyword">using </span><a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#ac1a1ab117704e8837bb031d8c597826c">state_transition</a> = Filter::state_transition;</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>};</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">struct </span>conditional_update_types {};</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span> </div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span><span class="keyword">template</span> &lt;has_update_types Filter&gt; <span class="keyword">struct </span>conditional_update_types&lt;Filter&gt; {</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  <span class="keyword">using </span>update_types = Filter::update_types;</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>};</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span> </div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span><span class="comment">// The only way to have a conditional member type is to inherit from a template</span></div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span><span class="comment">// specialization on the member type.</span></div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span><span class="keyword">struct </span>conditional_member_types : <span class="keyword">public</span> conditional_input_control&lt;Filter&gt;,</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>                                  conditional_input&lt;Filter&gt;,</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>                                  conditional_output_model&lt;Filter&gt;,</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>                                  conditional_output_uncertainty&lt;Filter&gt;,</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>                                  conditional_prediction_types&lt;Filter&gt;,</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>                                  conditional_process_uncertainty&lt;Filter&gt;,</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>                                  conditional_state_transition&lt;Filter&gt;,</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>                                  conditional_update_types&lt;Filter&gt; {};</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span> </div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="keyword">template</span> &lt;std::size_t Begin, std::size_t End, std::size_t Increment,</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>          <span class="keyword">typename</span> Function&gt;</div>
<div class="foldopen" id="foldopen00395" data-start="{" data-end="}">
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">  395</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (Begin &lt; End) {</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#aae3a67a49bba50976bb2b701fcc42a1e">function</a>(std::integral_constant&lt;std::size_t, Begin&gt;());</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">for_constexpr&lt;Begin + Increment, End, Increment&gt;</a>(</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>        std::forward&lt;Function&gt;(function));</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  }</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>}</div>
</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span> </div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>repacker {</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>  <span class="keyword">using </span>type = Type;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>};</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">typename</span> Pack, <span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span><span class="keyword">struct </span>repacker&lt;Pack&lt;Types...&gt;&gt; {</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>  <span class="keyword">using </span>type = std::tuple&lt;Types...&gt;;</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span> </div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> std::size_t <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">size</a>{<span class="keyword">sizeof</span>...(Types)};</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>};</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span> </div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">  419</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">repack</a> = repacker&lt;Pack&gt;::type;</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span> </div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Pack&gt;</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">  425</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> std::size_t <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">size</a>{repacker&lt;Pack&gt;::size};</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span> </div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span> Value, <span class="keyword">auto</span>... Values&gt; <span class="keyword">struct </span>first_value {</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> value{Value};</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>};</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span> </div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span>... Values&gt;</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">  433</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">first_v</a>{first_value&lt;Values...&gt;::value};</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span> </div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>not_implemented {</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>  <span class="keyword">template</span> &lt;auto Size&gt;</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> not_implemented(</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>      [[maybe_unused]] <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;message)[Size]) {</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>    <span class="comment">// The argument message is printed in the compiler error output.</span></div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>  }</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span> </div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> type_dependent_false{<span class="keyword">sizeof</span>(Type) != <span class="keyword">sizeof</span>(Type)};</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> missing{type_dependent_false};</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span> </div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>  <span class="keyword">static_assert</span>(missing, <span class="stringliteral">&quot;This type is not implemented. See compiler message.&quot;</span>);</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>};</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span> </div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00454" data-start="{" data-end="};">
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a23cbb93293154cb6105cfd41f2b12981">  454</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a23cbb93293154cb6105cfd41f2b12981">one</a>{not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>    <span class="stringliteral">&quot;Implement the linear algebra one-diagonal matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span> </div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a14ae57622afd6d94821c036808416946">  458</a></span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a14ae57622afd6d94821c036808416946">one&lt;Arithmetic&gt;</a>{1};</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Identity(); }</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#ae07f10e473ecf773b1a30ae5abebd4d2">  462</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#ae07f10e473ecf773b1a30ae5abebd4d2">one&lt;Type&gt;</a>{Type::Identity()};</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::identity(); }</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#ae07f10e473ecf773b1a30ae5abebd4d2">one&lt;Type&gt;</a>{Type::identity()};</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span> </div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type = <span class="keywordtype">double</span>&gt;</div>
<div class="foldopen" id="foldopen00472" data-start="{" data-end="};">
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a4fac2d4e13a574cdc956a2d940374e62">  472</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a4fac2d4e13a574cdc956a2d940374e62">zero</a>{kalman_internal::not_implemented&lt;Type&gt;{</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>    <span class="stringliteral">&quot;Implement the linear algebra zero matrix for this type.&quot;</span>}};</div>
</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span> </div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span><span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a179ed9419a40e13a92eaa0f3d980d088">  477</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> Arithmetic <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a179ed9419a40e13a92eaa0f3d980d088">zero&lt;Arithmetic&gt;</a>{0};</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span> </div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::Zero(); }</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1kalman__internal.xhtml#a2b0970be43a070dde9d1b773c58cb58a">  481</a></span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a2b0970be43a070dde9d1b773c58cb58a">zero&lt;Type&gt;</a>{Type::Zero()};</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span> </div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>  <span class="keyword">requires</span> <span class="keyword">requires</span> { Type::zero(); }</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span><span class="keyword">inline</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a2b0970be43a070dde9d1b773c58cb58a">zero&lt;Type&gt;</a>{Type::zero()};</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span> </div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span> </div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>} <span class="comment">// namespace fcarouge::kalman_internal</span></div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span> </div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_INTERNAL_UTILITY_HPP</span></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml">fcarouge::kalman_internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a0c947c78364703fa3847944dd073a837"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a0c947c78364703fa3847944dd073a837">fcarouge::kalman_internal::transpose</a></div><div class="ttdeci">std::invoke_result_t&lt; transposes&lt; Type &gt;, const Type &amp; &gt; transpose</div><div class="ttdoc">Transposer helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00242">utility.hpp:242</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a0f6af3a28e58f1b5e727aa85543951a0"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a0f6af3a28e58f1b5e727aa85543951a0">fcarouge::kalman_internal::quotient</a></div><div class="ttdeci">std::invoke_result_t&lt; divides&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; quotient</div><div class="ttdoc">Divider helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00213">utility.hpp:213</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a14ae57622afd6d94821c036808416946"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a14ae57622afd6d94821c036808416946">fcarouge::kalman_internal::one&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic one&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton one matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00458">utility.hpp:458</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a179ed9419a40e13a92eaa0f3d980d088"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a179ed9419a40e13a92eaa0f3d980d088">fcarouge::kalman_internal::zero&lt; Arithmetic &gt;</a></div><div class="ttdeci">constexpr Arithmetic zero&lt; Arithmetic &gt;</div><div class="ttdoc">The singleton zero matrix specialization.</div><div class="ttdef"><b>Definition</b> <a href="#l00477">utility.hpp:477</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a185d15024c6842a0f6faad97ce898221"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">fcarouge::kalman_internal::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="#l00425">utility.hpp:425</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a1fa2c30dc7bf1f7626c078eaed358625"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a1fa2c30dc7bf1f7626c078eaed358625">fcarouge::kalman_internal::evaluate</a></div><div class="ttdeci">std::invoke_result_t&lt; evaluates&lt; Type &gt; &gt; evaluate</div><div class="ttdoc">Evaluater helper type.</div><div class="ttdef"><b>Definition</b> <a href="#l00223">utility.hpp:223</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a23cbb93293154cb6105cfd41f2b12981"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a23cbb93293154cb6105cfd41f2b12981">fcarouge::kalman_internal::one</a></div><div class="ttdeci">constexpr Type one</div><div class="ttdoc">The one matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00454">utility.hpp:454</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a2b0970be43a070dde9d1b773c58cb58a"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a2b0970be43a070dde9d1b773c58cb58a">fcarouge::kalman_internal::zero&lt; Type &gt;</a></div><div class="ttdeci">auto zero&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00481">utility.hpp:481</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a4991c6dc9486cc2d13f83ba121053169"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a4991c6dc9486cc2d13f83ba121053169">fcarouge::kalman_internal::product</a></div><div class="ttdeci">std::invoke_result_t&lt; multiplies&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; product</div><div class="ttdoc">Helper type to deduce the result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="#l00282">utility.hpp:282</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a4fac2d4e13a574cdc956a2d940374e62"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a4fac2d4e13a574cdc956a2d940374e62">fcarouge::kalman_internal::zero</a></div><div class="ttdeci">constexpr Type zero</div><div class="ttdoc">The zero matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00472">utility.hpp:472</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a5514c5591cc1a7635a3179439d68be98"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a5514c5591cc1a7635a3179439d68be98">fcarouge::kalman_internal::filter</a></div><div class="ttdeci">constexpr filter_deducer&lt; Filter &gt; filter</div><div class="ttdef"><b>Definition</b> <a href="factory_8hpp_source.xhtml#l00356">factory.hpp:356</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a5cde5a9f3fe3a8d4f14ea136c15227dd"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a5cde5a9f3fe3a8d4f14ea136c15227dd">fcarouge::kalman_internal::output_model</a></div><div class="ttdeci">output_model(Element) -&gt; output_model&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6050c2c2ac7054eaffa8e5c58dab7bd4"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6050c2c2ac7054eaffa8e5c58dab7bd4">fcarouge::kalman_internal::tuple_n_type</a></div><div class="ttdeci">typename tupler&lt; Type, Size &gt;::type tuple_n_type</div><div class="ttdoc">An alias for making a tuple of the same type.</div><div class="ttdef"><b>Definition</b> <a href="#l00272">utility.hpp:272</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a66f34e6d5c7f8322c4d5f63051e20139"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a66f34e6d5c7f8322c4d5f63051e20139">fcarouge::kalman_internal::first</a></div><div class="ttdeci">std::tuple_element_t&lt; 0, std::tuple&lt; Types... &gt; &gt; first</div><div class="ttdoc">Unpack the first type of the type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00255">utility.hpp:255</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6baba1af637abe5f76f3b5184d0ff3c6"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">fcarouge::kalman_internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="#l00395">utility.hpp:395</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6fdb5b3b4fc087c9c7913bc64708ec66"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6fdb5b3b4fc087c9c7913bc64708ec66">fcarouge::kalman_internal::input_control</a></div><div class="ttdeci">input_control(Element) -&gt; input_control&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a734eaffd024f86157a790692f947357d"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a734eaffd024f86157a790692f947357d">fcarouge::kalman_internal::ᴀʙᵀ</a></div><div class="ttdeci">evaluate&lt; product&lt; Lhs, evaluate&lt; transpose&lt; Rhs &gt; &gt; &gt; &gt; ᴀʙᵀ</div><div class="ttdoc">The evaluated type of the ABᵀ expression.</div><div class="ttdef"><b>Definition</b> <a href="#l00298">utility.hpp:298</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aa1a9ffab51e79feaa4cc54fbad7bff1e"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aa1a9ffab51e79feaa4cc54fbad7bff1e">fcarouge::kalman_internal::repack</a></div><div class="ttdeci">repacker&lt; Pack &gt;::type repack</div><div class="ttdef"><b>Definition</b> <a href="#l00419">utility.hpp:419</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aad9be752b238d15bfc4ea67b30660cc7"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aad9be752b238d15bfc4ea67b30660cc7">fcarouge::kalman_internal::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdoc">Unpack the first value of the non-type template parameter pack.</div><div class="ttdef"><b>Definition</b> <a href="#l00433">utility.hpp:433</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aae3a67a49bba50976bb2b701fcc42a1e"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aae3a67a49bba50976bb2b701fcc42a1e">fcarouge::kalman_internal::function</a></div><div class="ttdeci">function(Callable) -&gt; function&lt; function_traits_t&lt; Callable &gt; &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_aaf401bd223c24f1406587dd5fd2dc2cf"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#aaf401bd223c24f1406587dd5fd2dc2cf">fcarouge::kalman_internal::difference</a></div><div class="ttdeci">std::invoke_result_t&lt; minus&lt; Lhs, Rhs &gt;, const Lhs &amp;, const Rhs &amp; &gt; difference</div><div class="ttdoc">Helper type to deduce the result type of the minus, subtraction.</div><div class="ttdef"><b>Definition</b> <a href="#l00293">utility.hpp:293</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ac1a1ab117704e8837bb031d8c597826c"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ac1a1ab117704e8837bb031d8c597826c">fcarouge::kalman_internal::state_transition</a></div><div class="ttdeci">state_transition(Element) -&gt; state_transition&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ac6a9cf33472fe67bd423c384ef492c25"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ac6a9cf33472fe67bd423c384ef492c25">fcarouge::kalman_internal::process_uncertainty</a></div><div class="ttdeci">process_uncertainty(Element) -&gt; process_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_acb17489172dd8b3802d97fdd17f9d91b"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#acb17489172dd8b3802d97fdd17f9d91b">fcarouge::kalman_internal::t</a></div><div class="ttdeci">auto t(const Type &amp;value)</div><div class="ttdoc">Transpose helper function.</div><div class="ttdef"><b>Definition</b> <a href="#l00247">utility.hpp:247</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ae07f10e473ecf773b1a30ae5abebd4d2"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ae07f10e473ecf773b1a30ae5abebd4d2">fcarouge::kalman_internal::one&lt; Type &gt;</a></div><div class="ttdeci">auto one&lt; Type &gt;</div><div class="ttdef"><b>Definition</b> <a href="#l00462">utility.hpp:462</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_ae0d4cb88e21450951fd7dc06f745f71b"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#ae0d4cb88e21450951fd7dc06f745f71b">fcarouge::kalman_internal::output_uncertainty</a></div><div class="ttdeci">output_uncertainty(Element) -&gt; output_uncertainty&lt; Element &gt;</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_5c3532884164bb88b0a2e2abaff977cb.xhtml">kalman_internal</a></li><li class="navelem"><a class="el" href="utility_8hpp.xhtml">utility.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
