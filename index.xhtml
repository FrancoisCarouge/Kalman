<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.3"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Kalman Filter for C++</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.3 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('index.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Kalman Filter for C++ </div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p ><a class="anchor" id="md_README"></a> A generic Kalman filter.</p>
<h1><a class="anchor" id="autotoc_md13"></a>
Continuous Integration &amp; Deployment Actions</h1>
<p ><a href="https://github.com/FrancoisCarouge/Kalman"><img src="https://img.shields.io/badge/Repository-GitHub%20%F0%9F%94%97-brightgreen" alt="Code Repository" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_ubuntu-20-04_gcc-trunk.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_ubuntu-20-04_gcc-trunk.yml/badge.svg" alt="Test: Ubuntu 20.04 GCC Trunk" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_windows-2019_msvc.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_windows-2019_msvc.yml/badge.svg" alt="Test: Windows 2019 MSVC" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_ubuntu-20-04_clang-trunk.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_ubuntu-20-04_clang-trunk.yml/badge.svg" alt="Test: Ubuntu 20.04 Clang Trunk" style="pointer-events: none;" class="inline"/></a> <br  />
 <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_undefined_behavior.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_undefined_behavior.yml/badge.svg" alt="Test Undefined Behavior: Sanitizer" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_thread.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_thread.yml/badge.svg" alt="Test Thread: Sanitizer" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_static_analysis_cppcheck.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_static_analysis_cppcheck.yml/badge.svg" alt="Test Static Analysis: CppCheck" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_static_analysis_tidy.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_static_analysis_tidy.yml/badge.svg" alt="Test Static Analysis: ClangTidy" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_memory_valgrind.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_memory_valgrind.yml/badge.svg" alt="Test Memory: Valgrind" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_leak.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_leak.yml/badge.svg" alt="Test Leak: Sanitizer" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_style_format.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_code_style_format.yml/badge.svg" alt="Test Code Style: ClangFormat" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_address.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_test_sanitizer_address.yml/badge.svg" alt="Test Address: Sanitizer" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://coveralls.io/github/FrancoisCarouge/Kalman?branch=develop"><img src="https://coveralls.io/repos/github/FrancoisCarouge/Kalman/badge.svg?branch=develop" alt="Coverage Status" style="pointer-events: none;" class="inline"/></a> <br  />
 <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_documentation_doxygen.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/verify_documentation_doxygen.yml/badge.svg" alt="Test Documentation: Doxygen" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://raw.githubusercontent.com/francoiscarouge/Kalman/develop/LICENSE.txt"><img src="https://img.shields.io/badge/License-Public%20Domain%20%F0%9F%94%97-brightgreen" alt="Public Domain" class="inline"/></a> <br  />
 <a href="https://app.fossa.com/projects/git%2Bgithub.com%2FFrancoisCarouge%2FKalman?ref=badge_shield"><img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2FFrancoisCarouge%2FKalman.svg?type=shield" alt="License Scan" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="http://paypal.me/francoiscarouge"><img src="https://img.shields.io/badge/Sponsor-%EF%BC%84%EF%BC%84%EF%BC%84%20%F0%9F%94%97-brightgreen" alt="Sponsor" class="inline"/></a> <br  />
 <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/deploy_documentation_doxygen.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/deploy_documentation_doxygen.yml/badge.svg" alt="Deploy Documentation: Doxygen GitHub Pages" style="pointer-events: none;" class="inline"/></a> <br  />
 <a href="https://github.com/FrancoisCarouge/Kalman/actions/workflows/deploy_test_coverage_coveralls.yml"><img src="https://github.com/FrancoisCarouge/Kalman/actions/workflows/deploy_test_coverage_coveralls.yml/badge.svg" alt="Deploy Code Coverage: Coveralls" style="pointer-events: none;" class="inline"/></a></p>
<h1><a class="anchor" id="autotoc_md14"></a>
Examples</h1>
<h2><a class="anchor" id="autotoc_md15"></a>
One-Dimensional</h2>
<div class="fragment"><div class="line"><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a> k;</div>
<div class="line"> </div>
<div class="line">k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afde73aa8d6b0d8d7794ca7f0220526cd">x</a>(60.);</div>
<div class="line">k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a44c7e9f1008c20710e3da602c65c89de">p</a>(225.);</div>
<div class="line">k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a84905bab5a2b4ed397bf33425afb5cf6">r</a>(25.);</div>
<div class="line"> </div>
<div class="line">k(48.54);</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00103">kalman.hpp:104</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a44c7e9f1008c20710e3da602c65c89de"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a44c7e9f1008c20710e3da602c65c89de">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr estimate_uncertainty p() const</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00519">kalman.hpp:519</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a84905bab5a2b4ed397bf33425afb5cf6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a84905bab5a2b4ed397bf33425afb5cf6">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr output_uncertainty r() const</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00564">kalman.hpp:564</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afde73aa8d6b0d8d7794ca7f0220526cd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afde73aa8d6b0d8d7794ca7f0220526cd">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr state x() const</div><div class="ttdoc">Returns the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00497">kalman.hpp:497</a></div></div>
</div><!-- fragment --><h2><a class="anchor" id="autotoc_md16"></a>
Multi-Dimensional</h2>
<p >Two states, one control, using Eigen3 support.</p>
<div class="fragment"><div class="line"><span class="keyword">using</span> <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a0a4898a4d871508e1af8d35cab6ecb01">kalman</a> =</div>
<div class="line">    <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">fcarouge::eigen::kalman&lt;double, 2, 1, 1, std::chrono::milliseconds&gt;</a>;</div>
<div class="line"> </div>
<div class="line"><span class="keyword">const</span> <span class="keywordtype">double</span> gravitational_acceleration{ -9.8 }; <span class="comment">// m.s^-2</span></div>
<div class="line"><span class="keyword">const</span> std::chrono::milliseconds delta_time{ 250 };</div>
<div class="line"><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a0a4898a4d871508e1af8d35cab6ecb01">kalman</a> k;</div>
<div class="line"> </div>
<div class="line">k.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afde73aa8d6b0d8d7794ca7f0220526cd">x</a>(0, 0);</div>
<div class="line">k.p(kalman::estimate_uncertainty{ { 500, 0 }, { 0, 500 } });</div>
<div class="line">k.f([](<span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time) {</div>
<div class="line">  <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line">  <span class="keywordflow">return</span> kalman::state_transition{ { 1, dt }, { 0, 1 } };</div>
<div class="line">});</div>
<div class="line">k.q([](<span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time) {</div>
<div class="line">  <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line">  <span class="keywordflow">return</span> kalman::process_uncertainty{</div>
<div class="line">    { 0.1 * 0.1 * dt * dt * dt * dt / 4, 0.1 * 0.1 * dt * dt * dt / 2 },</div>
<div class="line">    { 0.1 * 0.1 * dt * dt * dt / 2, 0.1 * 0.1 * dt * dt }</div>
<div class="line">  };</div>
<div class="line">});</div>
<div class="line">k.g([](<span class="keyword">const</span> std::chrono::milliseconds &amp;delta_time) {</div>
<div class="line">  <span class="keyword">const</span> <span class="keyword">auto</span> dt{ std::chrono::duration&lt;double&gt;(delta_time).count() };</div>
<div class="line">  <span class="keywordflow">return</span> kalman::input_control{ 0.0313, dt };</div>
<div class="line">});</div>
<div class="line">k.h(1, 0);</div>
<div class="line">k.r(400);</div>
<div class="line"> </div>
<div class="line">k.predict(delta_time, gravitational_acceleration);</div>
<div class="line">k.update(-32.40 );</div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a0a4898a4d871508e1af8d35cab6ecb01"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a0a4898a4d871508e1af8d35cab6ecb01">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; Type, Eigen::Vector&lt; Type, State &gt;, Eigen::Vector&lt; Type, Output &gt;, Eigen::Vector&lt; Type, Input &gt;, internal::transpose, internal::symmetrize, internal::divide, internal::identity, PredictionArguments... &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00067">kalman_eigen.hpp:70</a></div></div>
</div><!-- fragment --><h1><a class="anchor" id="autotoc_md17"></a>
Library</h1>
<ul>
<li>Kalman Filter for C++</li>
<li>Continuous Integration &amp; Deployment Actions</li>
<li>Examples<ul>
<li>One-Dimensional</li>
<li>Multi-Dimensional</li>
</ul>
</li>
<li>Library<ul>
<li>Motivation</li>
<li>Class fcarouge::kalman<ul>
<li>Template Parameters</li>
<li>Member Types</li>
<li>Member Functions<ul>
<li>Characteristics</li>
<li>Modifiers</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Resources</li>
<li>License</li>
</ul>
<h2><a class="anchor" id="autotoc_md18"></a>
Motivation</h2>
<p >Kalman filters can be difficult to learn, use, and implement. Users often need fair algebra, domain, and software knowledge. Inadequacy leads to incorrectness, underperformance, and a big ball of mud.</p>
<p >This package explores what could be a Kalman filter implementation a la standard library. The following concerns and tradeoffs are considered:</p><ul>
<li>Separation of the application domain.</li>
<li>Separation of the algebra implementation.</li>
<li>Generalization of the support.</li>
</ul>
<h2><a class="anchor" id="autotoc_md19"></a>
Class fcarouge::kalman</h2>
<p >Defined in header <a href="include/fcarouge/kalman.hpp">fcarouge/kalman.hpp</a></p>
<div class="fragment"><div class="line"><span class="keyword">template</span> &lt;</div>
<div class="line">    <span class="keyword">typename</span> Type = <a class="code hl_class" href="classdouble.xhtml">double</a>, <span class="keyword">typename</span> State = Type, <span class="keyword">typename</span> Output = State,</div>
<div class="line">    <span class="keyword">typename</span> Input = State, <span class="keyword">typename</span> Transpose = std::identity,</div>
<div class="line">    <span class="keyword">typename</span> Symmetrize = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line">    <span class="keyword">typename</span> Identity = internal::identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><span class="keyword">class </span><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a0a4898a4d871508e1af8d35cab6ecb01">kalman</a></div>
<div class="ttc" id="aclassdouble_xhtml"><div class="ttname"><a href="classdouble.xhtml">double</a></div></div>
</div><!-- fragment --><h3><a class="anchor" id="autotoc_md20"></a>
Template Parameters</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Template Parameter   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>Type</code>   </td><td class="markdownTableBodyNone">The type template parameter of the value type of the filter.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>State</code>   </td><td class="markdownTableBodyNone">The type template parameter of the state vector x. State variables can be observed (measured), or hidden variables (infeered). This is the the mean of the multivariate Gaussian.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>Output</code>   </td><td class="markdownTableBodyNone">The type template parameter of the measurement vector z.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>Input</code>   </td><td class="markdownTableBodyNone">The type template parameter of the control u.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>Transpose</code>   </td><td class="markdownTableBodyNone">The template template parameter of the matrix transpose functor.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>Symmetrize</code>   </td><td class="markdownTableBodyNone">The template template parameter of the matrix symmetrization functor.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>Divide</code>   </td><td class="markdownTableBodyNone">The template template parameter of the matrix division functor.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>Identity</code>   </td><td class="markdownTableBodyNone">The template template parameter of the matrix identity functor.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>PredictionArguments...</code>   </td><td class="markdownTableBodyNone">The variadic type template parameter for additional prediction function parameters. Time, or a delta thereof, is often a prediction parameter. The parameters are propagated to the function objects used to compute the process noise Q, the state transition F, and the control transition G matrices.   </td></tr>
</table>
<h3><a class="anchor" id="autotoc_md21"></a>
Member Types</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Member Type   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>state</code>   </td><td class="markdownTableBodyNone">Type of the state estimate vector X.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>output</code>   </td><td class="markdownTableBodyNone">Type of the observation vector Z, also known as Y.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>input</code>   </td><td class="markdownTableBodyNone">Type of the control vector U.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>estimate_uncertainty</code>   </td><td class="markdownTableBodyNone">Type of the estimated covariance matrix P, also known as Σ.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>process_uncertainty</code>   </td><td class="markdownTableBodyNone">Type of the process noise covariance matrix Q.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>output_uncertainty</code>   </td><td class="markdownTableBodyNone">Type of the observation, measurement noise covariance matrix R.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>state_transition</code>   </td><td class="markdownTableBodyNone">Type of the state transition matrix F, also known as Φ or A.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>output_model</code>   </td><td class="markdownTableBodyNone">Type of the observation transition matrix H, also known as C.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>input_control</code>   </td><td class="markdownTableBodyNone">Type of the control transition matrix G, also known as B.   </td></tr>
</table>
<h3><a class="anchor" id="autotoc_md22"></a>
Member Functions</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Member Function   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>(constructor)</code>   </td><td class="markdownTableBodyNone">Constructs the filter.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>(destructor)</code>   </td><td class="markdownTableBodyNone">Destructs the filter.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>operator=</code>   </td><td class="markdownTableBodyNone">Assigns values to the filter.   </td></tr>
</table>
<h4><a class="anchor" id="autotoc_md23"></a>
Characteristics</h4>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Characteristic   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>x</code>   </td><td class="markdownTableBodyNone">Manages the state estimate vector.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>z</code>   </td><td class="markdownTableBodyNone">Manages the observation vector.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>u</code>   </td><td class="markdownTableBodyNone">Manages the control vector.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>p</code>   </td><td class="markdownTableBodyNone">Manages the estimated covariance matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>q</code>   </td><td class="markdownTableBodyNone">Manages the process noise covariance matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>r</code>   </td><td class="markdownTableBodyNone">Manages the observation, measurement noise covariance matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>f</code>   </td><td class="markdownTableBodyNone">Manages the state transition matrix.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>h</code>   </td><td class="markdownTableBodyNone">Manages the observation transition matrix.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>g</code>   </td><td class="markdownTableBodyNone">Manages the control transition matrix.   </td></tr>
</table>
<h4><a class="anchor" id="autotoc_md24"></a>
Modifiers</h4>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Modifier   </th><th class="markdownTableHeadNone">Definition    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>operator()</code>   </td><td class="markdownTableBodyNone">Runs a step of the filter. Predicts and updates the estimates per prediction arguments, control input, and measurement output.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone"><code>update</code>   </td><td class="markdownTableBodyNone">Updates the estimates with the outcome of a measurement.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone"><code>predict</code>   </td><td class="markdownTableBodyNone">Produces estimates of the state variables and uncertainties.   </td></tr>
</table>
<h1><a class="anchor" id="autotoc_md25"></a>
Resources</h1>
<p >Awesome resources to learn about Kalman filters:</p>
<ul>
<li><a href="https://www.kalmanfilter.net">KalmanFilter.NET</a> by Alex Becker.</li>
<li><a href="https://github.com/rlabbe/Kalman-and-Bayesian-Filters-in-Python">Kalman and Bayesian Filters in Python</a> by Roger Labbe.</li>
</ul>
<h1><a class="anchor" id="autotoc_md26"></a>
License</h1>
<p ><img src="http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png" alt="" align="right" class="inline"/></p>
<p >Project for C++ is public domain:</p>
<p >This is free and unencumbered software released into the public domain.</p>
<p >Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.</p>
<p >In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.</p>
<p >THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>
<p >For more information, please refer to <a href="https://unlicense.org">https://unlicense.org</a> </p>
</div></div><!-- PageDoc -->
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Thu May 12 2022 05:00:19 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.3 </li>
  </ul>
</div>
</body>
</html>
