<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/linalg/lazy/fcarouge/linalg.hpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.2.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('lazy_2fcarouge_2linalg_8hpp.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">linalg.hpp File Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Linear algebra coroutine-based lazy implementation.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="utility_8hpp_source.xhtml">fcarouge/utility.hpp</a>&quot;</code><br />
<code>#include &lt;algorithm&gt;</code><br />
<code>#include &lt;array&gt;</code><br />
<code>#include &lt;concepts&gt;</code><br />
<code>#include &lt;coroutine&gt;</code><br />
<code>#include &lt;generator&gt;</code><br />
<code>#include &lt;ranges&gt;</code><br />
<code>#include &lt;type_traits&gt;</code><br />
<code>#include &lt;utility&gt;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for linalg.hpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="lazy_2fcarouge_2linalg_8hpp__incl.svg" width="100%" height="507"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
</div>
<p><a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefcarouge"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></td></tr>
<tr class="memdesc:namespacefcarouge"><td class="mdescLeft">&#160;</td><td class="mdescRight">Francois Carouge's projects namespace. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memTemplParams" colspan="2">template&lt;std::ranges::range Range&gt; </td></tr>
<tr class="memitem:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memTemplItemLeft" align="right" valign="top">constexpr std::generator&lt; typename Range::value_type &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">fcarouge::make_generator</a> (Range elements)</td></tr>
<tr class="separator:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a34cda4cdb141fdaa3b43f3973585e4b1">fcarouge::make_generator</a> (Type element) -&gt; std::generator&lt; Type &gt;</td></tr>
<tr class="separator:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memTemplParams" colspan="2">template&lt;std::invocable L&gt; </td></tr>
<tr class="memitem:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a62fb05e2f569f36e8cac44a90ccbc106">fcarouge::operator==</a> (L lhs, L rhs)</td></tr>
<tr class="separator:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memTemplParams" colspan="2">template&lt;std::invocable L, typename T &gt; </td></tr>
<tr class="memitem:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a47d78fa7b2fbab1fdec6f6e30d6b1da0">fcarouge::operator==</a> (L lhs, T rhs)</td></tr>
<tr class="separator:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84939a609e68330c2689aff14d978311"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column, bool CopyableOrNot1, bool CopyableOrNot2&gt; </td></tr>
<tr class="memitem:a84939a609e68330c2689aff14d978311"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a84939a609e68330c2689aff14d978311">fcarouge::operator==</a> (matrix&lt; Type, Row, Column, CopyableOrNot1 &gt; lhs, matrix&lt; Type, Row, Column, CopyableOrNot2 &gt; rhs)</td></tr>
<tr class="separator:a84939a609e68330c2689aff14d978311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f46009dfa013275132875c5be3ab85c"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Size&gt; </td></tr>
<tr class="memitem:a5f46009dfa013275132875c5be3ab85c"><td class="memTemplItemLeft" align="right" valign="top">matrix&lt; Type, Row, 1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">fcarouge::operator*</a> (matrix&lt; Type, Row, Size &gt; lhs, matrix&lt; Type, Size, 1 &gt; rhs)</td></tr>
<tr class="separator:a5f46009dfa013275132875c5be3ab85c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memTemplItemLeft" align="right" valign="top">matrix&lt; Type, Row, Column &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a0647c4efb9c02b9ea365aacec50e4ae0">fcarouge::operator*</a> (matrix&lt; Type, Row, Column &gt; lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a214880fe1dfe8701212c14c9ece44013"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a214880fe1dfe8701212c14c9ece44013"><td class="memTemplItemLeft" align="right" valign="top">matrix&lt; Type, 1, 1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">fcarouge::operator+</a> (Type lhs, matrix&lt; Type, 1, 1 &gt; rhs)</td></tr>
<tr class="separator:a214880fe1dfe8701212c14c9ece44013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37839500158d123b7bdc6824a025f0bc"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a37839500158d123b7bdc6824a025f0bc"><td class="memTemplItemLeft" align="right" valign="top">matrix&lt; Type, Row, Column &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a37839500158d123b7bdc6824a025f0bc">fcarouge::operator+</a> (matrix&lt; Type, Row, Column &gt; lhs, matrix&lt; Type, Row, Column &gt; rhs)</td></tr>
<tr class="separator:a37839500158d123b7bdc6824a025f0bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Deduction Guides</div></td></tr>
<tr class="memitem:a4833d152f612bead262723ae23039575"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a4833d152f612bead262723ae23039575"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a4833d152f612bead262723ae23039575">fcarouge::matrix</a> (Type) -&gt; matrix&lt; Type, 1, 1 &gt;</td></tr>
<tr class="separator:a4833d152f612bead262723ae23039575"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0175c0b371513180978bbdb30909c54"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:ac0175c0b371513180978bbdb30909c54"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ac0175c0b371513180978bbdb30909c54">fcarouge::matrix</a> (const Type(&amp;)[Row][Column]) -&gt; matrix&lt; Type, Row, Column &gt;</td></tr>
<tr class="separator:ac0175c0b371513180978bbdb30909c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row&gt; </td></tr>
<tr class="memitem:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a36b1c08e7faa5e078cd8c56e4acd8a54">fcarouge::matrix</a> (const Type(&amp;)[Row]) -&gt; matrix&lt; Type, Row, 1 &gt;</td></tr>
<tr class="separator:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff2f7c46a68129e9dece27181dce855"><td class="memTemplParams" colspan="2">template&lt;typename... Types, auto... Columns&gt; <br />
requires (std::conjunction_v&lt;std::is_same&lt;first_t&lt;Types...&gt;, Types&gt;...&gt; &amp;&amp; ((Columns == first_v&lt;Columns&gt;)&amp;&amp;... &amp;&amp; true))</td></tr>
<tr class="memitem:a1ff2f7c46a68129e9dece27181dce855"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a1ff2f7c46a68129e9dece27181dce855">fcarouge::matrix</a> (const Types(&amp;...rows)[Columns]) -&gt; matrix&lt; std::remove_cvref_t&lt; first_t&lt; Types... &gt; &gt;, sizeof...(Columns),(Columns,...)&gt;</td></tr>
<tr class="separator:a1ff2f7c46a68129e9dece27181dce855"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a3b0c4f263f282cbb330a4ca6b5ad10d9">fcarouge::make_identity_generator</a></td></tr>
<tr class="separator:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fe918283834c2c859a7325fc8d3a563"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a7fe918283834c2c859a7325fc8d3a563"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a7fe918283834c2c859a7325fc8d3a563">fcarouge::make_zero_generator</a></td></tr>
<tr class="separator:a7fe918283834c2c859a7325fc8d3a563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Algebraic Named Values</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p >The identity matrix naive specialization. </p>
</div></td></tr>
<tr class="memitem:a1ea35424b203a1ba2ab287785e36b753"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a1ea35424b203a1ba2ab287785e36b753"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a1ea35424b203a1ba2ab287785e36b753">fcarouge::identity_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</a></td></tr>
<tr class="separator:a1ea35424b203a1ba2ab287785e36b753"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e109425619816f11a1c78c3a9e59f6"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a27e109425619816f11a1c78c3a9e59f6"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a27e109425619816f11a1c78c3a9e59f6">fcarouge::zero_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</a></td></tr>
<tr class="memdesc:a27e109425619816f11a1c78c3a9e59f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The zero matrix lazy specialization.  <a href="namespacefcarouge.xhtml#a27e109425619816f11a1c78c3a9e59f6">More...</a><br /></td></tr>
<tr class="separator:a27e109425619816f11a1c78c3a9e59f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Linear algebra coroutine-based lazy implementation. </p>
<p >Matrix, vectors, and named algebraic values.</p>
<dl class="section note"><dt>Note</dt><dd>Idea from: <a href="https://gieseanw.wordpress.com/2019/10/20/we-dont-need-no-stinking-expression-templates/">https://gieseanw.wordpress.com/2019/10/20/we-dont-need-no-stinking-expression-templates/</a> </dd></dl>

<p class="definition">Definition in file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
</div></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c1845e5bf011c2136883d0d7188f50e9.xhtml">linalg</a></li><li class="navelem"><a class="el" href="dir_a5865fd9dbf72bad167b68249efe8e33.xhtml">lazy</a></li><li class="navelem"><a class="el" href="dir_0a4f59775a28c8901f3ddbf67298531c.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="lazy_2fcarouge_2linalg_8hpp.xhtml">linalg.hpp</a></li>
    <li class="footer">Generated on Thu Aug 3 2023 02:21:21 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
