<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: kf_1x1x0_liquid_temperature_unit.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.1</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('kf_1x1x0_liquid_temperature_unit_8cpp-example.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kf_1x1x0_liquid_temperature_unit.cpp</div></div>
</div><!--header-->
<div class="contents">
<p>Estimating the temperature of the liquid in a tank.</p>
<p>Estimating the temperature of the liquid in a tank.</p><dl class="section copyright"><dt>Copyright</dt><dd>This example is transcribed from KalmanFilter.NET copyright Alex Becker. </dd>
<dd>
This example also transcribes Mateusz Pusz's mp-units Kalman filter sample.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a href="https://www.kalmanfilter.net/kalman1d.html#ex6">https://www.kalmanfilter.net/kalman1d.html#ex6</a> </dd>
<dd>
<a href="https://github.com/mpusz/mp-units/blob/master/example/kalman_filter/kalman_filter-example_6.cpp">https://github.com/mpusz/mp-units/blob/master/example/kalman_filter/kalman_filter-example_6.cpp</a></dd></dl>
<p>We would like to estimate the temperature of the liquid in a tank. We assume that at steady state the liquid temperature is constant. However, some fluctuations in the true liquid temperature are possible. We can describe the system dynamics by the following equation: xn = T + wn where: T is the constant temperature wn is a random process noise with variance q. Let us assume a true temperature of 50 degrees Celsius. The measurements are taken every 5 seconds. The true liquid temperature at the measurement points is: 49.979°C, 50.025°C, 50°C, 50.003°C, 49.994°C, 50.002°C, 49.999°C, 50.006°C, 49.998°C, and 49.991°C. The set of measurements is: 49.95°C, 49.967°C, 50.1°C, 50.106°C, 49.992°C, 49.819°C, 49.933°C, 50.007°C, 50.023°C, and 49.99°C.</p>
<div class="fragment"><div class="line"><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">Kalman Filter</span></div>
<div class="line"><span class="comment">Version 0.5.1</span></div>
<div class="line"><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><span class="comment">means.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><span class="comment">software under copyright law.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="kalman_8hpp.xhtml">fcarouge/kalman.hpp</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;fcarouge/unit.hpp&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a> {</div>
<div class="line"><span class="keyword">namespace </span>{</div>
<div class="line">[[maybe_unused]] <span class="keyword">auto</span> sample{[] {</div>
<div class="line">  <span class="comment">// A one-dimensional filter, constant system dynamic model.</span></div>
<div class="line">  <a id="a0" name="a0"></a><a class="code hl_function" href="namespacefcarouge.xhtml#a4a3bd37a96fd242e89867316396afcd5">kalman</a> filter{</div>
<div class="line">      <span class="comment">// We initialize the Kalman filter and predict the next state (which is</span></div>
<div class="line">      <span class="comment">// the first state). We don&#39;t know what the temperature of the liquid is,</span></div>
<div class="line">      <span class="comment">// and our guess is: estimated state X = 10°C.</span></div>
<div class="line">      state{temperature{point&lt;deg_C&gt;(10.)}},</div>
<div class="line">      <span class="comment">// The measured liquid temperature Z.</span></div>
<div class="line">      output&lt;temperature&gt;,</div>
<div class="line">      <span class="comment">// Our guess is very imprecise, so we set our initialization estimate</span></div>
<div class="line">      <span class="comment">// error σ to 100. The estimate uncertainty p of the initialization is the</span></div>
<div class="line">      <span class="comment">// error variance σ^2: P = p0,0 = 100^2 = 10,000. This variance is very</span></div>
<div class="line">      <span class="comment">// high. If we initialize with a more meaningful value, we will get faster</span></div>
<div class="line">      <span class="comment">// Kalman filter convergence.</span></div>
<div class="line">      estimate_uncertainty{delta&lt;deg_C2&gt;(10&#39;000.)},</div>
<div class="line">      <span class="comment">// We have an accurate model, thus we set the process uncertainty noise</span></div>
<div class="line">      <span class="comment">// variance Q to 0.0001.</span></div>
<div class="line">      process_uncertainty{delta&lt;deg_C2&gt;(0.000&#39;1)},</div>
<div class="line">      <span class="comment">// Since the measurement error of the thermometer is σ = 0.1, the variance</span></div>
<div class="line">      <span class="comment">// σ^2 would be 0.01, thus the measurement, output uncertainty is: R = r1</span></div>
<div class="line">      <span class="comment">// = 0.01. The measurement error (standard deviation) is 0.1 degrees</span></div>
<div class="line">      <span class="comment">// Celsius.</span></div>
<div class="line">      output_uncertainty{delta&lt;deg_C2&gt;(0.01)}};</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Now, we shall predict the next state based on the initialization values.</span></div>
<div class="line">  filter.predict();</div>
<div class="line"> </div>
<div class="line">  assert(temperature{point&lt;deg_C&gt;(10.)} == filter.x() &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;Since our model has constant dynamics, the predicted estimate is &quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;equal to the current estimate: x^1,0 = 10°C.&quot;</span>);</div>
<div class="line">  assert(10&#39;000.000&#39;1 * deg_C2 == filter.p() &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The extrapolated estimate uncertainty (variance): p1,0 = p0,0 + q = &quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;10&#39;000 + 0.000&#39;1 = 10&#39;000.000&#39;1.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// The first measurement value: z1 = 49.95°C. Measure and update.</span></div>
<div class="line">  filter.update(temperature{point&lt;deg_C&gt;(49.95)});</div>
<div class="line"> </div>
<div class="line">  assert(abs(1 - filter.k() / 0.999&#39;999) &lt; 0.000&#39;1 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The gain expected at 0.01% accuracy.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// And so on, run a step of the filter, predicting and updating, every</span></div>
<div class="line">  <span class="comment">// measurements period: Δt = 5s (constant).</span></div>
<div class="line">  <span class="keyword">const</span> <span class="keyword">auto</span> step{[&amp;filter](temperature output_z) {</div>
<div class="line">    filter.predict();</div>
<div class="line">    filter.update(output_z);</div>
<div class="line">  }};</div>
<div class="line"> </div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(49.967)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(50.1)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(50.106)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(49.992)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(49.819)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(49.933)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(50.007)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(50.023)});</div>
<div class="line">  step(temperature{point&lt;deg_C&gt;(49.99)});</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// The estimate uncertainty quickly goes down, after 10 measurements:</span></div>
<div class="line">  assert(0.001&#39;2 * deg_C2 &lt; filter.p() &amp;&amp; filter.p() &lt; 0.001&#39;3 * deg_C2 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The estimate uncertainty expected at 5% accuracy.&quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;The estimate uncertainty is 0.0013, i.e. the estimate error standard &quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;deviation is: 0.036°C.&quot;</span>);</div>
<div class="line">  assert(temperature{point&lt;deg_C&gt;(49.98)} &lt; filter.x() &amp;&amp;</div>
<div class="line">         filter.x() &lt; temperature{point&lt;deg_C&gt;(49.99)} &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;The filter estimates the liquid temperature at 49.988°C.&quot;</span>);</div>
<div class="line">  assert(0.126&#39;4 &lt; filter.k() &amp;&amp; filter.k() &lt; 0.126&#39;5 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The gain expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// So we can say that the liquid temperature estimate is: 49.988 ± 0.036°C.</span></div>
<div class="line">  <span class="comment">// In this example we&#39;ve measured a liquid temperature using the</span></div>
<div class="line">  <span class="comment">// one-dimensional Kalman filter. Although the system dynamics include</span></div>
<div class="line">  <span class="comment">// a random process noise, the Kalman filter can provide good estimation.</span></div>
<div class="line"> </div>
<div class="line">  <span class="keywordflow">return</span> 0;</div>
<div class="line">}()};</div>
<div class="line">} <span class="comment">// namespace</span></div>
<div class="line">} <span class="comment">// namespace fcarouge::sample</span></div>
<div class="ttc" id="akalman_8hpp_xhtml"><div class="ttname"><a href="kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The Kalman filter class and library top-level header.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div><div class="ttdoc">Examples, tutorials, demonstrators of the library.</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a4a3bd37a96fd242e89867316396afcd5"><div class="ttname"><a href="namespacefcarouge.xhtml#a4a3bd37a96fd242e89867316396afcd5">fcarouge::kalman</a></div><div class="ttdeci">kalman(Arguments... arguments) -&gt; kalman&lt; kalman_internal::deduce_filter&lt; Arguments... &gt; &gt;</div><div class="ttdoc">Deduces the filter type from its declared configuration.</div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
