<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: kf_6x2x0_vehicle_location.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('kf_6x2x0_vehicle_location_8cpp-example.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kf_6x2x0_vehicle_location.cpp</div></div>
</div><!--header-->
<div class="contents">
<p>Estimating the vehicle location.</p>
<p>Estimating the vehicle location.</p><dl class="section copyright"><dt>Copyright</dt><dd>This example is transcribed from KalmanFilter.NET copyright Alex Becker.</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a href="https://www.kalmanfilter.net/multiExamples.html#ex9">https://www.kalmanfilter.net/multiExamples.html#ex9</a></dd></dl>
<p>In this example, we would like to estimate the location of the vehicle in the XY plane. The vehicle has an onboard location sensor that reports X and Y coordinates of the system. We assume constant acceleration dynamics. In this example we don't have a control variable u since we don't have control input. Let us assume a vehicle moving in a straight line in the X direction with a constant velocity. After traveling 400 meters the vehicle turns right, with a turning radius of 300 meters. During the turning maneuver, the vehicle experiences acceleration due to the circular motion (an angular acceleration). The measurements period: Î”t = 1s (constant).</p>
<div class="fragment"><div class="line"><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">Kalman Filter</span></div>
<div class="line"><span class="comment">Version 0.4.0</span></div>
<div class="line"><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><span class="comment">means.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><span class="comment">software under copyright law.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><span class="comment"></span> </div>
<div class="line"><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="kalman_8hpp.xhtml">fcarouge/kalman.hpp</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;fcarouge/linalg.hpp&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a> {</div>
<div class="line"><span class="keyword">namespace </span>{</div>
<div class="line"><span class="keyword">template</span> &lt;auto Size&gt; <span class="keyword">using </span><a id="a0" name="a0"></a><a class="code hl_typedef" href="namespacefcarouge.xhtml#a7a5eee105e8b1e887741720d3de13a41">vector</a> = <a id="a1" name="a1"></a><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a3aae575a4aa6b608a99d02f58b0fc86c">column_vector&lt;double, Size&gt;</a>;</div>
<div class="line"><span class="keyword">template</span> &lt;auto Row, auto Column&gt; <span class="keyword">using </span><a id="a2" name="a2"></a><a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">matrix</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">matrix&lt;double, Row, Column&gt;</a>;</div>
<div class="line"><span class="keyword">using </span>state = fcarouge::state&lt;vector&lt;6&gt;&gt;;</div>
<div class="line"> </div>
<div class="line">[[maybe_unused]] <span class="keyword">auto</span> sample{[] {</div>
<div class="line">  <span class="comment">// A 6x2x0 filter, constant acceleration dynamic model, no control.</span></div>
<div class="line">  <a id="a3" name="a3"></a><a class="code hl_function" href="namespacefcarouge.xhtml#ae4d1dbbab6a8bdcaa50062d0cb879777">kalman</a> filter{</div>
<div class="line">      <span class="comment">// The state X is chosen to be the position, velocity, acceleration in the</span></div>
<div class="line">      <span class="comment">// XY plane: [px, vx, ax, py, vy, ay]. We don&#39;t know the vehicle location;</span></div>
<div class="line">      <span class="comment">// we will set initial position, velocity and acceleration to 0.</span></div>
<div class="line">      state{0., 0., 0., 0., 0., 0.},</div>
<div class="line">      <span class="comment">// The vehicle has an onboard location sensor that reports output Z as X</span></div>
<div class="line">      <span class="comment">// and Y coordinates of the system.</span></div>
<div class="line">      output&lt;vector&lt;2&gt;&gt;,</div>
<div class="line">      <span class="comment">// The estimate uncertainty matrix P.</span></div>
<div class="line">      <span class="comment">// Since our initial state vector is a guess, we will set a very high</span></div>
<div class="line">      <span class="comment">// estimate uncertainty. The high estimate uncertainty results in a high</span></div>
<div class="line">      <span class="comment">// Kalman Gain, giving a high weight to the measurement.</span></div>
<div class="line">      estimate_uncertainty{{500., 0., 0., 0., 0., 0.},</div>
<div class="line">                           {0., 500., 0., 0., 0., 0.},</div>
<div class="line">                           {0., 0., 500., 0., 0., 0.},</div>
<div class="line">                           {0., 0., 0., 500., 0., 0.},</div>
<div class="line">                           {0., 0., 0., 0., 500., 0.},</div>
<div class="line">                           {0., 0., 0., 0., 0., 500.}},</div>
<div class="line">      <span class="comment">// The process uncertainty noise matrix Q, constant, computed in place,</span></div>
<div class="line">      <span class="comment">// with  random acceleration standard deviation: Ïƒa = 0.2 m.s^-2.</span></div>
<div class="line">      process_uncertainty{0.2 * 0.2 *</div>
<div class="line">                          <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">matrix&lt;6, 6&gt;</a>{{0.25, 0.5, 0.5, 0., 0., 0.},</div>
<div class="line">                                       {0.5, 1., 1., 0., 0., 0.},</div>
<div class="line">                                       {0.5, 1., 1., 0., 0., 0.},</div>
<div class="line">                                       {0., 0., 0., 0.25, 0.5, 0.5},</div>
<div class="line">                                       {0., 0., 0., 0.5, 1., 1.},</div>
<div class="line">                                       {0., 0., 0., 0.5, 1., 1.}}},</div>
<div class="line">      <span class="comment">// The output uncertainty matrix R. Assume that the x and y measurements</span></div>
<div class="line">      <span class="comment">// are uncorrelated, i.e. error in the x coordinate measurement doesn&#39;t</span></div>
<div class="line">      <span class="comment">// depend on the error in the y coordinate measurement. In real-life</span></div>
<div class="line">      <span class="comment">// applications, the measurement uncertainty can differ between</span></div>
<div class="line">      <span class="comment">// measurements. In many systems the measurement uncertainty depends on</span></div>
<div class="line">      <span class="comment">// the measurement SNR (signal-to-noise ratio), angle between sensor (or</span></div>
<div class="line">      <span class="comment">// sensors) and target, signal frequency and many other parameters.</span></div>
<div class="line">      <span class="comment">// For the sake of the example simplicity, we will assume a constant</span></div>
<div class="line">      <span class="comment">// measurement uncertainty: R1 = R2...Rn-1 = Rn = R The measurement error</span></div>
<div class="line">      <span class="comment">// standard deviation: Ïƒxm = Ïƒym = 3m. The variance 9.</span></div>
<div class="line">      output_uncertainty{{9., 0.}, {0., 9.}},</div>
<div class="line">      <span class="comment">// The output model matrix H. The dimension of zn is 2x1 and the dimension</span></div>
<div class="line">      <span class="comment">// of xn is 6x1. Therefore the dimension of the observation matrix H shall</span></div>
<div class="line">      <span class="comment">// be 2x6.</span></div>
<div class="line">      output_model{{1., 0., 0., 0., 0., 0.}, {0., 0., 0., 1., 0., 0.}},</div>
<div class="line">      <span class="comment">// // The state transition matrix F would be:</span></div>
<div class="line">      state_transition{{1., 1., 0.5, 0., 0., 0.},</div>
<div class="line">                       {0., 1., 1., 0., 0., 0.},</div>
<div class="line">                       {0., 0., 1., 0., 0., 0.},</div>
<div class="line">                       {0., 0., 0., 1., 1., 0.5},</div>
<div class="line">                       {0., 0., 0., 0., 1., 1.},</div>
<div class="line">                       {0., 0., 0., 0., 0., 1.}}};</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Now we can predict the next state based on the initialization values.</span></div>
<div class="line">  filter.predict();</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// The measurement values: z1 = [-393.66, 300.4]</span></div>
<div class="line">  filter.update(-393.66, 300.4);</div>
<div class="line">  filter.predict();</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// And so on, run a step of the filter, predicting and updating, every</span></div>
<div class="line">  <span class="comment">// measurements period: Î”t = 1s (constant, built-in).</span></div>
<div class="line">  <span class="keyword">const</span> <span class="keyword">auto</span> step{[&amp;filter](<span class="keywordtype">double</span> position_x, <span class="keywordtype">double</span> position_y) {</div>
<div class="line">    filter.update(position_x, position_y);</div>
<div class="line">    filter.predict();</div>
<div class="line">  }};</div>
<div class="line"> </div>
<div class="line">  step(-375.93, 301.78);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// Verify the example estimated state at 0.1% accuracy.</span></div>
<div class="line">  assert(std::abs(1 - filter.x()[0] / -277.8) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[1] / 148.3) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[2] / 94.5) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[3] / 249.8) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[4] / -85.9) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[5] / -63.6) &lt; 0.001 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  step(-351.04, 295.1);</div>
<div class="line">  step(-328.96, 305.19);</div>
<div class="line">  step(-299.35, 301.06);</div>
<div class="line">  step(-273.36, 302.05);</div>
<div class="line">  step(-245.89, 300);</div>
<div class="line">  step(-222.58, 303.57);</div>
<div class="line">  step(-198.03, 296.33);</div>
<div class="line">  step(-174.17, 297.65);</div>
<div class="line">  step(-146.32, 297.41);</div>
<div class="line">  step(-123.72, 299.61);</div>
<div class="line">  step(-103.47, 299.6);</div>
<div class="line">  step(-78.23, 302.39);</div>
<div class="line">  step(-52.63, 295.04);</div>
<div class="line">  step(-23.34, 300.09);</div>
<div class="line">  step(25.96, 294.72);</div>
<div class="line">  step(49.72, 298.61);</div>
<div class="line">  step(76.94, 294.64);</div>
<div class="line">  step(95.38, 284.88);</div>
<div class="line">  step(119.83, 272.82);</div>
<div class="line">  step(144.01, 264.93);</div>
<div class="line">  step(161.84, 251.46);</div>
<div class="line">  step(180.56, 241.27);</div>
<div class="line">  step(201.42, 222.98);</div>
<div class="line">  step(222.62, 203.73);</div>
<div class="line">  step(239.4, 184.1);</div>
<div class="line">  step(252.51, 166.12);</div>
<div class="line">  step(266.26, 138.71);</div>
<div class="line">  step(271.75, 119.71);</div>
<div class="line">  step(277.4, 100.41);</div>
<div class="line">  step(294.12, 79.76);</div>
<div class="line">  step(301.23, 50.62);</div>
<div class="line">  step(291.8, 32.99);</div>
<div class="line">  step(299.89, 2.14);</div>
<div class="line"> </div>
<div class="line">  assert(std::abs(1 - filter.x()[0] / 298.5) &lt; 0.006 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[1] / -1.65) &lt; 0.006 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[2] / -1.9) &lt; 0.006 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[3] / -22.5) &lt; 0.006 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[4] / -26.1) &lt; 0.006 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.x()[5] / -0.64) &lt; 0.006 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The state estimates expected at 0.6% accuracy.&quot;</span>);</div>
<div class="line">  assert(std::abs(1 - filter.p()(0, 0) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.p()(0, 1) / 4.5) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.p()(0, 2) / 0.9) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.p()(1, 1) / 2.4) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.p()(2, 2) / 0.2) &lt; 0.001 &amp;&amp;</div>
<div class="line">         std::abs(1 - filter.p()(3, 3) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line">         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;At this point, the position uncertainty px = py = 5, which means &quot;</span></div>
<div class="line">         <span class="stringliteral">&quot;that the standard deviation of the prediction is square root of 5m.&quot;</span>);</div>
<div class="line"> </div>
<div class="line">  <span class="comment">// As you can see, the Kalman Filter tracks the vehicle quite well. However,</span></div>
<div class="line">  <span class="comment">// when the vehicle starts the turning maneuver, the estimates are not so</span></div>
<div class="line">  <span class="comment">// accurate. After a while, the Kalman Filter accuracy improves. While the</span></div>
<div class="line">  <span class="comment">// vehicle travels along the straight line, the acceleration is constant and</span></div>
<div class="line">  <span class="comment">// equal to zero. However, during the turn maneuver, the vehicle experiences</span></div>
<div class="line">  <span class="comment">// acceleration due to the circular motion - the angular acceleration.</span></div>
<div class="line">  <span class="comment">// Although the angular acceleration is constant, the angular acceleration</span></div>
<div class="line">  <span class="comment">// projection on the x and y axes is not constant, therefore ax and ay are not</span></div>
<div class="line">  <span class="comment">// constant. Our Kalman Filter is designed for a constant acceleration model.</span></div>
<div class="line">  <span class="comment">// Nevertheless, it succeeds in tracking maneuvering vehicle due to a properly</span></div>
<div class="line">  <span class="comment">// chosen Ïƒa parameter. I would like to encourage the readers to implement</span></div>
<div class="line">  <span class="comment">// this example in software and see how different values of Ïƒa of R influence</span></div>
<div class="line">  <span class="comment">// the actual Kalman Filter accuracy, Kalman Gain convergence, and estimation</span></div>
<div class="line">  <span class="comment">// uncertainty.</span></div>
<div class="line"> </div>
<div class="line">  <span class="keywordflow">return</span> 0;</div>
<div class="line">}()};</div>
<div class="line">} <span class="comment">// namespace</span></div>
<div class="line">} <span class="comment">// namespace fcarouge::sample</span></div>
<div class="ttc" id="akalman_8hpp_xhtml"><div class="ttname"><a href="kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The Kalman filter class and library top-level header.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a01e78c3f356b744543b2f25797bcfa84"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a01e78c3f356b744543b2f25797bcfa84">fcarouge::eigen::matrix</a></div><div class="ttdeci">Eigen::Matrix&lt; Type, Row, Column &gt; matrix</div><div class="ttdoc">Compile-time sized Eigen3 matrix.</div><div class="ttdef"><b>Definition</b> <a href="eigen_8hpp_source.xhtml#l00077">eigen.hpp:77</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a3aae575a4aa6b608a99d02f58b0fc86c"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a3aae575a4aa6b608a99d02f58b0fc86c">fcarouge::eigen::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition</b> <a href="eigen_8hpp_source.xhtml#l00085">eigen.hpp:85</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div><div class="ttdoc">Examples, tutorials, demonstrators of the library.</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a7a5eee105e8b1e887741720d3de13a41"><div class="ttname"><a href="namespacefcarouge.xhtml#a7a5eee105e8b1e887741720d3de13a41">fcarouge::vector</a></div><div class="ttdeci">indexed::column_vector&lt; column_vector&lt; Representation, sizeof...(References)&gt;, quantity&lt; Representation, References &gt;... &gt; vector</div><div class="ttdoc">Quantity column vector with mp-units and Eigen implementations.</div><div class="ttdef"><b>Definition</b> <a href="quantity_8hpp_source.xhtml#l00075">quantity.hpp:75</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae4d1dbbab6a8bdcaa50062d0cb879777"><div class="ttname"><a href="namespacefcarouge.xhtml#ae4d1dbbab6a8bdcaa50062d0cb879777">fcarouge::kalman</a></div><div class="ttdeci">kalman(Arguments... arguments) -&gt; kalman&lt; internal::deduce_filter&lt; Arguments... &gt; &gt;</div><div class="ttdoc">Deduces the filter type from its declared configuration.</div></div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
