<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s1fa4930bc84fe44f1356caa6c4f47996.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s782384b9d3b42e12136747112a4edbee.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Types</div></td></tr>
<tr class="memitem:a2fc9d9e4b18006d41a642a5740b39675"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> = State</td></tr>
<tr class="memdesc:a2fc9d9e4b18006d41a642a5740b39675"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state estimate vector X.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">More...</a><br /></td></tr>
<tr class="separator:a2fc9d9e4b18006d41a642a5740b39675"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad58389f483104f70dbee002813577af9"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> = Output</td></tr>
<tr class="memdesc:ad58389f483104f70dbee002813577af9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation vector Z.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">More...</a><br /></td></tr>
<tr class="separator:ad58389f483104f70dbee002813577af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5b850e202b48f07b71f0faf54a9b122"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> = Input</td></tr>
<tr class="memdesc:ad5b850e202b48f07b71f0faf54a9b122"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control vector U.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">More...</a><br /></td></tr>
<tr class="separator:ad5b850e202b48f07b71f0faf54a9b122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4677d90d6b11eb8691da8ac7fa4442"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:aac4677d90d6b11eb8691da8ac7fa4442"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the estimated covariance matrix P.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">More...</a><br /></td></tr>
<tr class="separator:aac4677d90d6b11eb8691da8ac7fa4442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043a8fbb71c1359963b47e8cd58a1be1"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:a043a8fbb71c1359963b47e8cd58a1be1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the process noise covariance matrix Q.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">More...</a><br /></td></tr>
<tr class="separator:a043a8fbb71c1359963b47e8cd58a1be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525901e2c4fb95260f40a39d2a8fdfe8"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, Output &gt; &gt;</td></tr>
<tr class="memdesc:a525901e2c4fb95260f40a39d2a8fdfe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation, measurement noise covariance matrix R.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">More...</a><br /></td></tr>
<tr class="separator:a525901e2c4fb95260f40a39d2a8fdfe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0ffef3ffdc1f0fa9065e643c712a033"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt;</td></tr>
<tr class="memdesc:ae0ffef3ffdc1f0fa9065e643c712a033"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the state transition matrix F.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">More...</a><br /></td></tr>
<tr class="separator:ae0ffef3ffdc1f0fa9065e643c712a033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a5b9989ab5de531a03e0f8ce3c8675"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, State &gt; &gt;</td></tr>
<tr class="memdesc:a45a5b9989ab5de531a03e0f8ce3c8675"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the observation transition matrix H.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">More...</a><br /></td></tr>
<tr class="separator:a45a5b9989ab5de531a03e0f8ce3c8675"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f894d43b3b9c0693c1312b681625822"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a> = std::decay_t&lt; std::invoke_result_t&lt; Divide, State, Input &gt; &gt;</td></tr>
<tr class="memdesc:a5f894d43b3b9c0693c1312b681625822"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the control transition matrix G.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">More...</a><br /></td></tr>
<tr class="separator:a5f894d43b3b9c0693c1312b681625822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf6256a9aef7db5ffb70bc68f64e2439"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a> = std::decay_t&lt; std::invoke_result_t&lt; Transpose, <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a> &gt; &gt;</td></tr>
<tr class="memdesc:abf6256a9aef7db5ffb70bc68f64e2439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the gain matrix K.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">More...</a><br /></td></tr>
<tr class="separator:abf6256a9aef7db5ffb70bc68f64e2439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29af619a6a44c07d93e4b6a742137915"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a> = <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a></td></tr>
<tr class="memdesc:a29af619a6a44c07d93e4b6a742137915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the innovation vector Y.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">More...</a><br /></td></tr>
<tr class="separator:a29af619a6a44c07d93e4b6a742137915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65b55c102d2bbc6de21033f5672c09bf"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">innovation_uncertainty</a> = <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a></td></tr>
<tr class="memdesc:a65b55c102d2bbc6de21033f5672c09bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the innovation uncertainty matrix S.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">More...</a><br /></td></tr>
<tr class="separator:a65b55c102d2bbc6de21033f5672c09bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Functions</div></td></tr>
<tr class="memitem:ada982df51bf70f5e21f6b5a7fa81cf7e"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ada982df51bf70f5e21f6b5a7fa81cf7e">update</a> (const UpdateArguments &amp;...arguments, const auto &amp;...output_z)</td></tr>
<tr class="separator:ada982df51bf70f5e21f6b5a7fa81cf7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bba3eed22dd16a58476f26a66fe7204"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2bba3eed22dd16a58476f26a66fe7204">predict</a> (const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</td></tr>
<tr class="separator:a2bba3eed22dd16a58476f26a66fe7204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c60947aa330bcd51eba130b2560cf74"><td class="memItemLeft" align="right" valign="top">constexpr void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a8c60947aa330bcd51eba130b2560cf74">predict</a> (const PredictionArguments &amp;...arguments)</td></tr>
<tr class="separator:a8c60947aa330bcd51eba130b2560cf74"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Variables</div></td></tr>
<tr class="memitem:a465a2c8a276b63dbe54c2beacb1beb07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a>&gt;() }</td></tr>
<tr class="memdesc:a465a2c8a276b63dbe54c2beacb1beb07"><td class="mdescLeft">&#160;</td><td class="mdescRight">The state estimate vector x.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">More...</a><br /></td></tr>
<tr class="separator:a465a2c8a276b63dbe54c2beacb1beb07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6465e04085a4115af829fd08072e56e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a></td></tr>
<tr class="memdesc:aa6465e04085a4115af829fd08072e56e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The estimate uncertainty, covariance matrix P.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">More...</a><br /></td></tr>
<tr class="separator:aa6465e04085a4115af829fd08072e56e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad78e68fc14d2880b20b65952e39456f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a></td></tr>
<tr class="separator:aad78e68fc14d2880b20b65952e39456f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af78826cf70b5869c0bd643cd623a45bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">r</a></td></tr>
<tr class="separator:af78826cf70b5869c0bd643cd623a45bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11e07e73bc9c6e2746be37ea919bb3a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>&gt;() }</td></tr>
<tr class="separator:a11e07e73bc9c6e2746be37ea919bb3a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa69abffd72727a761892466eb684a5ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a>&gt;() }</td></tr>
<tr class="separator:aa69abffd72727a761892466eb684a5ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6919e64102a3956686bd36da15f8d34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af6919e64102a3956686bd36da15f8d34">g</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a>&gt;() }</td></tr>
<tr class="separator:af6919e64102a3956686bd36da15f8d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ce6e3922af86685f9ad41d11fc93b8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a>&gt;() }</td></tr>
<tr class="separator:a03ce6e3922af86685f9ad41d11fc93b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2484d5ac2634661f49bae5df3ed805e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2484d5ac2634661f49bae5df3ed805e9">y</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a>&gt;() }</td></tr>
<tr class="separator:a2484d5ac2634661f49bae5df3ed805e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee7975d19763f616d88a6284f7a3b16"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">innovation_uncertainty</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aeee7975d19763f616d88a6284f7a3b16">s</a></td></tr>
<tr class="separator:aeee7975d19763f616d88a6284f7a3b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71e02694e499381a6a4de04ae4dcb9e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>&gt;() }</td></tr>
<tr class="separator:a71e02694e499381a6a4de04ae4dcb9e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40af56d017b38b9dd87c58df8f7e6ee4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a> { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a>&gt;() }</td></tr>
<tr class="separator:a40af56d017b38b9dd87c58df8f7e6ee4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Function Objects</div></td></tr>
<tr class="memitem:aa2445b05ea9c828d98d60cb4ffc3c92e"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const UpdateArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa2445b05ea9c828d98d60cb4ffc3c92e">observation_state_h</a></td></tr>
<tr class="memdesc:aa2445b05ea9c828d98d60cb4ffc3c92e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the state observation H matrix.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa2445b05ea9c828d98d60cb4ffc3c92e">More...</a><br /></td></tr>
<tr class="separator:aa2445b05ea9c828d98d60cb4ffc3c92e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06741667c0f7bc160e634fe34f07e59d"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> &amp;, const UpdateArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a06741667c0f7bc160e634fe34f07e59d">noise_observation_r</a></td></tr>
<tr class="memdesc:a06741667c0f7bc160e634fe34f07e59d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the observation noise R matrix.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a06741667c0f7bc160e634fe34f07e59d">More...</a><br /></td></tr>
<tr class="separator:a06741667c0f7bc160e634fe34f07e59d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b8a1f820f5a73d6b6ec4a90e3ec48a3"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;..., const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> &amp;)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">transition_state_f</a></td></tr>
<tr class="memdesc:a7b8a1f820f5a73d6b6ec4a90e3ec48a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the state transition F matrix.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">More...</a><br /></td></tr>
<tr class="separator:a7b8a1f820f5a73d6b6ec4a90e3ec48a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dc6a0e2b66a465c4f11a40faa13ba66"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2dc6a0e2b66a465c4f11a40faa13ba66">noise_process_q</a></td></tr>
<tr class="memdesc:a2dc6a0e2b66a465c4f11a40faa13ba66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute process noise Q matrix.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2dc6a0e2b66a465c4f11a40faa13ba66">More...</a><br /></td></tr>
<tr class="separator:a2dc6a0e2b66a465c4f11a40faa13ba66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d091451db6b411b0a076635240ed19c"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a>(const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a9d091451db6b411b0a076635240ed19c">transition_control_g</a></td></tr>
<tr class="memdesc:a9d091451db6b411b0a076635240ed19c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute control transition G matrix.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a9d091451db6b411b0a076635240ed19c">More...</a><br /></td></tr>
<tr class="separator:a9d091451db6b411b0a076635240ed19c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0883dfa21c7567a1518fef109d1a9602"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0883dfa21c7567a1518fef109d1a9602">transition</a></td></tr>
<tr class="memdesc:a0883dfa21c7567a1518fef109d1a9602"><td class="mdescLeft">&#160;</td><td class="mdescRight">State transition function f.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0883dfa21c7567a1518fef109d1a9602">More...</a><br /></td></tr>
<tr class="separator:a0883dfa21c7567a1518fef109d1a9602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2745bd4ac1765c51edbb8bc10cf38940"><td class="memItemLeft" align="right" valign="top">std::function&lt; <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const UpdateArguments &amp;...arguments)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2745bd4ac1765c51edbb8bc10cf38940">observation</a></td></tr>
<tr class="memdesc:a2745bd4ac1765c51edbb8bc10cf38940"><td class="mdescLeft">&#160;</td><td class="mdescRight">State observation function h.  <a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2745bd4ac1765c51edbb8bc10cf38940">More...</a><br /></td></tr>
<tr class="separator:a2745bd4ac1765c51edbb8bc10cf38940"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae292271b8b158500c336fd0864b4a380"><td class="memItemLeft" align="right" valign="top">Transpose&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a></td></tr>
<tr class="separator:ae292271b8b158500c336fd0864b4a380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c9c25cb2f88839e8bbe629b409eb371"><td class="memItemLeft" align="right" valign="top">Divide&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0c9c25cb2f88839e8bbe629b409eb371">divide</a></td></tr>
<tr class="separator:a0c9c25cb2f88839e8bbe629b409eb371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbc6aeae461dac1580eec28f77a5a50f"><td class="memItemLeft" align="right" valign="top">Symmetrize&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#acbc6aeae461dac1580eec28f77a5a50f">symmetrize</a></td></tr>
<tr class="separator:acbc6aeae461dac1580eec28f77a5a50f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad55ac21ffae3a1ce46ef39e390558ed4"><td class="memItemLeft" align="right" valign="top">Identity&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad55ac21ffae3a1ce46ef39e390558ed4">identity</a></td></tr>
<tr class="separator:ad55ac21ffae3a1ce46ef39e390558ed4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename State, typename Output, typename Input, typename Transpose, typename Symmetrize, typename Divide, typename Identity, typename... UpdateArguments, typename... PredictionArguments&gt;<br />
struct fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;</div>
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00080">80</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aac4677d90d6b11eb8691da8ac7fa4442" name="aac4677d90d6b11eb8691da8ac7fa4442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac4677d90d6b11eb8691da8ac7fa4442">&#9670;&nbsp;</a></span>estimate_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the estimated covariance matrix P. </p>
<p >Also known as Σ. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00100">100</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="abf6256a9aef7db5ffb70bc68f64e2439" name="abf6256a9aef7db5ffb70bc68f64e2439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf6256a9aef7db5ffb70bc68f64e2439">&#9670;&nbsp;</a></span>gain</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a> =  std::decay_t&lt;std::invoke_result_t&lt;Transpose, <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the gain matrix K. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00130">130</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a29af619a6a44c07d93e4b6a742137915" name="a29af619a6a44c07d93e4b6a742137915"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29af619a6a44c07d93e4b6a742137915">&#9670;&nbsp;</a></span>innovation</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a> =  <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the innovation vector Y. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00133">133</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a65b55c102d2bbc6de21033f5672c09bf" name="a65b55c102d2bbc6de21033f5672c09bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65b55c102d2bbc6de21033f5672c09bf">&#9670;&nbsp;</a></span>innovation_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">innovation_uncertainty</a> =  <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the innovation uncertainty matrix S. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00136">136</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ad5b850e202b48f07b71f0faf54a9b122" name="ad5b850e202b48f07b71f0faf54a9b122"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5b850e202b48f07b71f0faf54a9b122">&#9670;&nbsp;</a></span>input</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> =  Input</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control vector U. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a5f894d43b3b9c0693c1312b681625822" name="a5f894d43b3b9c0693c1312b681625822"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f894d43b3b9c0693c1312b681625822">&#9670;&nbsp;</a></span>input_control</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, Input&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the control transition matrix G. </p>
<p >Also known as B. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00126">126</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ad58389f483104f70dbee002813577af9" name="ad58389f483104f70dbee002813577af9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad58389f483104f70dbee002813577af9">&#9670;&nbsp;</a></span>output</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> =  Output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation vector Z. </p>
<p >Also known as Y or O. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00092">92</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a45a5b9989ab5de531a03e0f8ce3c8675" name="a45a5b9989ab5de531a03e0f8ce3c8675"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45a5b9989ab5de531a03e0f8ce3c8675">&#9670;&nbsp;</a></span>output_model</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, Output, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation transition matrix H. </p>
<p >Also known as C. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00120">120</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a525901e2c4fb95260f40a39d2a8fdfe8" name="a525901e2c4fb95260f40a39d2a8fdfe8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a525901e2c4fb95260f40a39d2a8fdfe8">&#9670;&nbsp;</a></span>output_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, Output, Output&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the observation, measurement noise covariance matrix R. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00108">108</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a043a8fbb71c1359963b47e8cd58a1be1" name="a043a8fbb71c1359963b47e8cd58a1be1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a043a8fbb71c1359963b47e8cd58a1be1">&#9670;&nbsp;</a></span>process_uncertainty</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the process noise covariance matrix Q. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00104">104</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a2fc9d9e4b18006d41a642a5740b39675" name="a2fc9d9e4b18006d41a642a5740b39675"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fc9d9e4b18006d41a642a5740b39675">&#9670;&nbsp;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> =  State</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state estimate vector X. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00087">87</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ae0ffef3ffdc1f0fa9065e643c712a033" name="ae0ffef3ffdc1f0fa9065e643c712a033"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0ffef3ffdc1f0fa9065e643c712a033">&#9670;&nbsp;</a></span>state_transition</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a> =  std::decay_t&lt;std::invoke_result_t&lt;Divide, State, State&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of the state transition matrix F. </p>
<p >Also known as Φ or A. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00114">114</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8c60947aa330bcd51eba130b2560cf74" name="a8c60947aa330bcd51eba130b2560cf74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c60947aa330bcd51eba130b2560cf74">&#9670;&nbsp;</a></span>predict() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::predict </td>
          <td>(</td>
          <td class="paramtype">const PredictionArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00326">326</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>  {</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">transition_state_f</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments..., <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a>{});</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2dc6a0e2b66a465c4f11a40faa13ba66">noise_process_q</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments...);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0883dfa21c7567a1518fef109d1a9602">transition</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments...);</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#acbc6aeae461dac1580eec28f77a5a50f">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a> });</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a0883dfa21c7567a1518fef109d1a9602"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0883dfa21c7567a1518fef109d1a9602">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition</a></div><div class="ttdeci">std::function&lt; state(const state &amp;, const PredictionArguments &amp;...)&gt; transition</div><div class="ttdoc">State transition function f.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00265">kalman.hpp:265</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a2dc6a0e2b66a465c4f11a40faa13ba66"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2dc6a0e2b66a465c4f11a40faa13ba66">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::noise_process_q</a></div><div class="ttdeci">std::function&lt; process_uncertainty(const state &amp;, const PredictionArguments &amp;...)&gt; noise_process_q</div><div class="ttdoc">Compute process noise Q matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00240">kalman.hpp:240</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a465a2c8a276b63dbe54c2beacb1beb07"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::x</a></div><div class="ttdeci">state x</div><div class="ttdoc">The state estimate vector x.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00146">kalman.hpp:146</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a7b8a1f820f5a73d6b6ec4a90e3ec48a3"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition_state_f</a></div><div class="ttdeci">std::function&lt; state_transition(const state &amp;, const PredictionArguments &amp;..., const input &amp;)&gt; transition_state_f</div><div class="ttdoc">Compute the state transition F matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00228">kalman.hpp:228</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aa6465e04085a4115af829fd08072e56e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::p</a></div><div class="ttdeci">estimate_uncertainty p</div><div class="ttdoc">The estimate uncertainty, covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00151">kalman.hpp:151</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aa69abffd72727a761892466eb684a5ef"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::f</a></div><div class="ttdeci">state_transition f</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00163">kalman.hpp:163</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aac4677d90d6b11eb8691da8ac7fa4442"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::estimate_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; estimate_uncertainty</div><div class="ttdoc">Type of the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00100">kalman.hpp:101</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aad78e68fc14d2880b20b65952e39456f"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::q</a></div><div class="ttdeci">process_uncertainty q</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00155">kalman.hpp:155</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_acbc6aeae461dac1580eec28f77a5a50f"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#acbc6aeae461dac1580eec28f77a5a50f">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::symmetrize</a></div><div class="ttdeci">Symmetrize symmetrize</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00286">kalman.hpp:286</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_ad5b850e202b48f07b71f0faf54a9b122"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::input</a></div><div class="ttdeci">Input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00095">kalman.hpp:95</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_ae292271b8b158500c336fd0864b4a380"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transpose</a></div><div class="ttdeci">Transpose transpose</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00284">kalman.hpp:284</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2bba3eed22dd16a58476f26a66fe7204" name="a2bba3eed22dd16a58476f26a66fe7204"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bba3eed22dd16a58476f26a66fe7204">&#9670;&nbsp;</a></span>predict() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::predict </td>
          <td>(</td>
          <td class="paramtype">const PredictionArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>input_u</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000012">Todo:</a></b></dt><dd>Extended support? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00315">315</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>  {</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a> = <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a>{ input_u... };</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">transition_state_f</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments..., <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a>); <span class="comment">// x, u, args?</span></div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2dc6a0e2b66a465c4f11a40faa13ba66">noise_process_q</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments...); <span class="comment">// x, u, args?</span></div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af6919e64102a3956686bd36da15f8d34">g</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a9d091451db6b411b0a076635240ed19c">transition_control_g</a>(arguments...); <span class="comment">// extend?</span></div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af6919e64102a3956686bd36da15f8d34">g</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a>;</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#acbc6aeae461dac1580eec28f77a5a50f">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a> });</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a40af56d017b38b9dd87c58df8f7e6ee4"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::u</a></div><div class="ttdeci">input u</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00175">kalman.hpp:175</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a9d091451db6b411b0a076635240ed19c"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a9d091451db6b411b0a076635240ed19c">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition_control_g</a></div><div class="ttdeci">std::function&lt; input_control(const PredictionArguments &amp;...)&gt; transition_control_g</div><div class="ttdoc">Compute control transition G matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00251">kalman.hpp:251</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_af6919e64102a3956686bd36da15f8d34"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af6919e64102a3956686bd36da15f8d34">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::g</a></div><div class="ttdeci">input_control g</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00166">kalman.hpp:166</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ada982df51bf70f5e21f6b5a7fa81cf7e" name="ada982df51bf70f5e21f6b5a7fa81cf7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada982df51bf70f5e21f6b5a7fa81cf7e">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr void <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::update </td>
          <td>(</td>
          <td class="paramtype">const UpdateArguments &amp;...&#160;</td>
          <td class="paramname"><em>arguments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>output_z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000011">Todo:</a></b></dt><dd><p class="startdd">Do we want to store i - k * h in a temporary result for reuse? Or does the compiler/linker do it for us? </p>
<p class="enddd">Do we want to support extended custom y = output_difference(z, observation(x))? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00298">298</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>  {</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>    <span class="keyword">const</span> <span class="keyword">auto</span> i{ <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad55ac21ffae3a1ce46ef39e390558ed4">identity</a>.template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>&gt;() };</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a> = <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>{ output_z... };</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa2445b05ea9c828d98d60cb4ffc3c92e">observation_state_h</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments...); <span class="comment">// x, z, args?</span></div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">r</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a06741667c0f7bc160e634fe34f07e59d">noise_observation_r</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a>, arguments...);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aeee7975d19763f616d88a6284f7a3b16">s</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">r</a>;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0c9c25cb2f88839e8bbe629b409eb371">divide</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a>), <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aeee7975d19763f616d88a6284f7a3b16">s</a>);</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2484d5ac2634661f49bae5df3ed805e9">y</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a> - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2745bd4ac1765c51edbb8bc10cf38940">observation</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, arguments...);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a> + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2484d5ac2634661f49bae5df3ed805e9">y</a>;</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> = <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#acbc6aeae461dac1580eec28f77a5a50f">symmetrize</a>(<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>{</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>        (i - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a>) * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa6465e04085a4115af829fd08072e56e">p</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(i - <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a>) + <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">r</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae292271b8b158500c336fd0864b4a380">transpose</a>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">k</a>) });</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a03ce6e3922af86685f9ad41d11fc93b8"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a03ce6e3922af86685f9ad41d11fc93b8">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::k</a></div><div class="ttdeci">gain k</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00169">kalman.hpp:169</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a06741667c0f7bc160e634fe34f07e59d"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a06741667c0f7bc160e634fe34f07e59d">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::noise_observation_r</a></div><div class="ttdeci">std::function&lt; output_uncertainty(const state &amp;, const output &amp;, const UpdateArguments &amp;...)&gt; noise_observation_r</div><div class="ttdoc">Compute the observation noise R matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00207">kalman.hpp:207</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a0c9c25cb2f88839e8bbe629b409eb371"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a0c9c25cb2f88839e8bbe629b409eb371">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::divide</a></div><div class="ttdeci">Divide divide</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00285">kalman.hpp:285</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a11e07e73bc9c6e2746be37ea919bb3a8"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::h</a></div><div class="ttdeci">output_model h</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00162">kalman.hpp:162</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a2484d5ac2634661f49bae5df3ed805e9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2484d5ac2634661f49bae5df3ed805e9">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::y</a></div><div class="ttdeci">innovation y</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00170">kalman.hpp:170</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a2745bd4ac1765c51edbb8bc10cf38940"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2745bd4ac1765c51edbb8bc10cf38940">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::observation</a></div><div class="ttdeci">std::function&lt; output(const state &amp;, const UpdateArguments &amp;...arguments)&gt; observation</div><div class="ttdoc">State observation function h.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00278">kalman.hpp:278</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a71e02694e499381a6a4de04ae4dcb9e7"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::z</a></div><div class="ttdeci">output z</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00174">kalman.hpp:174</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aa2445b05ea9c828d98d60cb4ffc3c92e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa2445b05ea9c828d98d60cb4ffc3c92e">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::observation_state_h</a></div><div class="ttdeci">std::function&lt; output_model(const state &amp;, const UpdateArguments &amp;...)&gt; observation_state_h</div><div class="ttdoc">Compute the state observation H matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00195">kalman.hpp:195</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_ad55ac21ffae3a1ce46ef39e390558ed4"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad55ac21ffae3a1ce46ef39e390558ed4">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::identity</a></div><div class="ttdeci">Identity identity</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00287">kalman.hpp:287</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_ad58389f483104f70dbee002813577af9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::output</a></div><div class="ttdeci">Output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00092">kalman.hpp:92</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_aeee7975d19763f616d88a6284f7a3b16"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aeee7975d19763f616d88a6284f7a3b16">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::s</a></div><div class="ttdeci">innovation_uncertainty s</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00171">kalman.hpp:171</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_af78826cf70b5869c0bd643cd623a45bc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::r</a></div><div class="ttdeci">output_uncertainty r</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00158">kalman.hpp:158</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0c9c25cb2f88839e8bbe629b409eb371" name="a0c9c25cb2f88839e8bbe629b409eb371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c9c25cb2f88839e8bbe629b409eb371">&#9670;&nbsp;</a></span>divide</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Divide <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::divide</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00285">285</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="aa69abffd72727a761892466eb684a5ef" name="aa69abffd72727a761892466eb684a5ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa69abffd72727a761892466eb684a5ef">&#9670;&nbsp;</a></span>f</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::f { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00163">163</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="af6919e64102a3956686bd36da15f8d34" name="af6919e64102a3956686bd36da15f8d34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6919e64102a3956686bd36da15f8d34">&#9670;&nbsp;</a></span>g</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::g { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd>Should G be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00166">166</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a11e07e73bc9c6e2746be37ea919bb3a8" name="a11e07e73bc9c6e2746be37ea919bb3a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11e07e73bc9c6e2746be37ea919bb3a8">&#9670;&nbsp;</a></span>h</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::h { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>Should H be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00162">162</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ad55ac21ffae3a1ce46ef39e390558ed4" name="ad55ac21ffae3a1ce46ef39e390558ed4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad55ac21ffae3a1ce46ef39e390558ed4">&#9670;&nbsp;</a></span>identity</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Identity <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::identity</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00287">287</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a03ce6e3922af86685f9ad41d11fc93b8" name="a03ce6e3922af86685f9ad41d11fc93b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03ce6e3922af86685f9ad41d11fc93b8">&#9670;&nbsp;</a></span>k</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::k { Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#abf6256a9aef7db5ffb70bc68f64e2439">gain</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000005">Todo:</a></b></dt><dd>Should K be initialized to all ones? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00169">169</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a06741667c0f7bc160e634fe34f07e59d" name="a06741667c0f7bc160e634fe34f07e59d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06741667c0f7bc160e634fe34f07e59d">&#9670;&nbsp;</a></span>noise_observation_r</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> &amp;, const UpdateArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::noise_observation_r</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>, <span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a>,</div>
<div class="line">               <span class="keyword">const</span> UpdateArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a> {</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>);</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a71e02694e499381a6a4de04ae4dcb9e7">z</a>);</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af78826cf70b5869c0bd643cd623a45bc">r</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a2fc9d9e4b18006d41a642a5740b39675"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::state</a></div><div class="ttdeci">State state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00087">kalman.hpp:87</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a525901e2c4fb95260f40a39d2a8fdfe8"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::output_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, Output &gt; &gt; output_uncertainty</div><div class="ttdoc">Type of the observation, measurement noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00108">kalman.hpp:109</a></div></div>
</div><!-- fragment -->
<p>Compute the observation noise R matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00207">207</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a2dc6a0e2b66a465c4f11a40faa13ba66" name="a2dc6a0e2b66a465c4f11a40faa13ba66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2dc6a0e2b66a465c4f11a40faa13ba66">&#9670;&nbsp;</a></span>noise_process_q</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::noise_process_q</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>,</div>
<div class="line">               <span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a> {</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>);</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aad78e68fc14d2880b20b65952e39456f">q</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a043a8fbb71c1359963b47e8cd58a1be1"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::process_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; process_uncertainty</div><div class="ttdoc">Type of the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00104">kalman.hpp:105</a></div></div>
</div><!-- fragment -->
<p>Compute process noise Q matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00240">240</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a2745bd4ac1765c51edbb8bc10cf38940" name="a2745bd4ac1765c51edbb8bc10cf38940"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2745bd4ac1765c51edbb8bc10cf38940">&#9670;&nbsp;</a></span>observation</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const UpdateArguments &amp;...arguments)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::observation</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>,</div>
<div class="line">                          <span class="keyword">const</span> UpdateArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> {</div>
<div class="line">        (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">        <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>;</div>
<div class="line">      } }</div>
</div><!-- fragment -->
<p>State observation function h. </p>
<p >For linear system h(x) = H * X. For non-linear system, or extended filter, the client implements a linearization of the observation function hand the state observation H matrix is the Jacobian of the state observation function. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00278">278</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="aa2445b05ea9c828d98d60cb4ffc3c92e" name="aa2445b05ea9c828d98d60cb4ffc3c92e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2445b05ea9c828d98d60cb4ffc3c92e">&#9670;&nbsp;</a></span>observation_state_h</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const UpdateArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::observation_state_h</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>,</div>
<div class="line">               <span class="keyword">const</span> UpdateArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">output_model</a> {</div>
<div class="line">          <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>);</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a11e07e73bc9c6e2746be37ea919bb3a8">h</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a45a5b9989ab5de531a03e0f8ce3c8675"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a45a5b9989ab5de531a03e0f8ce3c8675">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::output_model</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, State &gt; &gt; output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00120">kalman.hpp:121</a></div></div>
</div><!-- fragment -->
<p>Compute the state observation H matrix. </p>
<p >The state observation H is also known as C. For non-linear system, or extended filter, H is the Jacobian of the state observation function: H = ∂h/∂X = ∂hj/∂xi that is each row i contains the derivatives of the state observation function for every element j in the state vector X.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000007">Todo:</a></b></dt><dd>Should we pass through the reference to the state x or have the user access it through k.x() when needed? Where does the practical/performance tradeoff leans toward? For the general case? For the specialized cases? Same question applies to other parameters. </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00195">195</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="aa6465e04085a4115af829fd08072e56e" name="aa6465e04085a4115af829fd08072e56e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6465e04085a4115af829fd08072e56e">&#9670;&nbsp;</a></span>p</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::p</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aac4677d90d6b11eb8691da8ac7fa4442">estimate_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
</div><!-- fragment -->
<p>The estimate uncertainty, covariance matrix P. </p>
<p >The estimate uncertainty, covariance is also known as Σ. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00151">151</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="aad78e68fc14d2880b20b65952e39456f" name="aad78e68fc14d2880b20b65952e39456f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad78e68fc14d2880b20b65952e39456f">&#9670;&nbsp;</a></span>q</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::q</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    0 * Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a043a8fbb71c1359963b47e8cd58a1be1">process_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00155">155</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="af78826cf70b5869c0bd643cd623a45bc" name="af78826cf70b5869c0bd643cd623a45bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af78826cf70b5869c0bd643cd623a45bc">&#9670;&nbsp;</a></span>r</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::r</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ 0 *</div>
<div class="line">                        Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a525901e2c4fb95260f40a39d2a8fdfe8">output_uncertainty</a>&gt;() }</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00158">158</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="aeee7975d19763f616d88a6284f7a3b16" name="aeee7975d19763f616d88a6284f7a3b16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeee7975d19763f616d88a6284f7a3b16">&#9670;&nbsp;</a></span>s</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">innovation_uncertainty</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::s</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    Identity().template operator()&lt;<a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">innovation_uncertainty</a>&gt;()</div>
<div class="line">  }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a65b55c102d2bbc6de21033f5672c09bf"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a65b55c102d2bbc6de21033f5672c09bf">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::innovation_uncertainty</a></div><div class="ttdeci">output_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00136">kalman.hpp:136</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00171">171</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="acbc6aeae461dac1580eec28f77a5a50f" name="acbc6aeae461dac1580eec28f77a5a50f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbc6aeae461dac1580eec28f77a5a50f">&#9670;&nbsp;</a></span>symmetrize</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Symmetrize <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::symmetrize</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00286">286</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a0883dfa21c7567a1518fef109d1a9602" name="a0883dfa21c7567a1518fef109d1a9602"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0883dfa21c7567a1518fef109d1a9602">&#9670;&nbsp;</a></span>transition</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>,</div>
<div class="line">                         <span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> {</div>
<div class="line">        (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">        <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a> * <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>;</div>
<div class="line">      } }</div>
</div><!-- fragment -->
<p>State transition function f. </p>
<p >For linear system f(x) = F * X. For non-linear system, or extended filter, the client implements a linearization of the transition function f and the state transition F matrix is the Jacobian of the state transition function. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00265">265</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a9d091451db6b411b0a076635240ed19c" name="a9d091451db6b411b0a076635240ed19c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d091451db6b411b0a076635240ed19c">&#9670;&nbsp;</a></span>transition_control_g</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a>(const PredictionArguments &amp;...)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition_control_g</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">        [<span class="keyword">this</span>](<span class="keyword">const</span> PredictionArguments &amp;...arguments) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">input_control</a> {</div>
<div class="line">          (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">          <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#af6919e64102a3956686bd36da15f8d34">g</a>;</div>
<div class="line">        }</div>
<div class="line">      }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_a5f894d43b3b9c0693c1312b681625822"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a5f894d43b3b9c0693c1312b681625822">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::input_control</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, Input &gt; &gt; input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00126">kalman.hpp:127</a></div></div>
</div><!-- fragment -->
<p>Compute control transition G matrix. </p>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00251">251</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a7b8a1f820f5a73d6b6ec4a90e3ec48a3" name="a7b8a1f820f5a73d6b6ec4a90e3ec48a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b8a1f820f5a73d6b6ec4a90e3ec48a3">&#9670;&nbsp;</a></span>transition_state_f</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a>(const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;, const PredictionArguments &amp;..., const <a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> &amp;)&gt; <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transition_state_f</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{ [<span class="keyword">this</span>](<span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>,</div>
<div class="line">                                 <span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line">                                 <span class="keyword">const</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> &amp;<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a>) -&gt; <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">state_transition</a> {</div>
<div class="line">        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a465a2c8a276b63dbe54c2beacb1beb07">x</a>);</div>
<div class="line">        (<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(arguments), ...);</div>
<div class="line">        <span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span><span class="keyword">&gt;</span>(<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a40af56d017b38b9dd87c58df8f7e6ee4">u</a>);</div>
<div class="line">        <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#aa69abffd72727a761892466eb684a5ef">f</a>;</div>
<div class="line">      } }</div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a_xhtml_ae0ffef3ffdc1f0fa9065e643c712a033"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ae0ffef3ffdc1f0fa9065e643c712a033">fcarouge::internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::state_transition</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00114">kalman.hpp:115</a></div></div>
</div><!-- fragment -->
<p>Compute the state transition F matrix. </p>
<p >The state transition F matrix is also known as Φ or A. For non-linear system, or extended filter, F is the Jacobian of the state transition function: F = ∂f/∂X = ∂fj/∂xi that is each row i contains the derivatives of the state transition function for every element j in the state vector X.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000009">Todo:</a></b></dt><dd>Pass the arguments by universal reference? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00228">228</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="ae292271b8b158500c336fd0864b4a380" name="ae292271b8b158500c336fd0864b4a380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae292271b8b158500c336fd0864b4a380">&#9670;&nbsp;</a></span>transpose</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Transpose <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::transpose</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00284">284</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a40af56d017b38b9dd87c58df8f7e6ee4" name="a40af56d017b38b9dd87c58df8f7e6ee4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40af56d017b38b9dd87c58df8f7e6ee4">&#9670;&nbsp;</a></span>u</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::u { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad5b850e202b48f07b71f0faf54a9b122">input</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00175">175</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a465a2c8a276b63dbe54c2beacb1beb07" name="a465a2c8a276b63dbe54c2beacb1beb07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a465a2c8a276b63dbe54c2beacb1beb07">&#9670;&nbsp;</a></span>x</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::x { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a2fc9d9e4b18006d41a642a5740b39675">state</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The state estimate vector x. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>Is there a simpler, more portable way to get a zero initialization? </dd></dl>

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00146">146</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a2484d5ac2634661f49bae5df3ed805e9" name="a2484d5ac2634661f49bae5df3ed805e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2484d5ac2634661f49bae5df3ed805e9">&#9670;&nbsp;</a></span>y</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::y { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#a29af619a6a44c07d93e4b6a742137915">innovation</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<a id="a71e02694e499381a6a4de04ae4dcb9e7" name="a71e02694e499381a6a4de04ae4dcb9e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71e02694e499381a6a4de04ae4dcb9e7">&#9670;&nbsp;</a></span>z</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename... UpdateArguments, typename... PredictionArguments&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a> <a class="el" href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;::z { 0 * Identity().template operator()&lt;<a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml#ad58389f483104f70dbee002813577af9">output</a>&gt;() }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="internal_2kalman_8hpp_source.xhtml#l00174">174</a> of file <a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/fcarouge/internal/<a class="el" href="internal_2kalman_8hpp_source.xhtml">kalman.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1internal.xhtml">internal</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1internal_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpose_00_01_s189f7199b0f919964d120b8cacfaae8a.xhtml">kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, std::tuple&lt; UpdateArguments... &gt;, std::tuple&lt; PredictionArguments... &gt; &gt;</a></li>
    <li class="footer">Generated on Sun Jul 10 2022 00:27:09 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
