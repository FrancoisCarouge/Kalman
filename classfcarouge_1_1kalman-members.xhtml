<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classfcarouge_1_1kalman.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>() const -&gt; state_transition</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#adfcb88d11e6acd97edc8a7b12bf9f968">f</a>(const state_transition &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae4b6c0b6919568edd63eed8e99611cc6">f</a>(state_transition &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a63fba3b2ab5b6d43e0fc5572465e9fae">f</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aac4006a8db6258a0370224552eac80cb">f</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#adc62beb3c4966490cf0beb903ca2c32e">f</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af60d3900dcf7aa355aec9cbeb49717c1">f</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a></td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>() const -&gt; input_control</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a93e0214b611288f2e92e518b32b7df8f">g</a>(const input_control &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aba2ca5c3be45a77e0c240aeceb9994cc">g</a>(input_control &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aad8a339e49e1163b0b03c0636137cca2">g</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a372d731f45878d9b24cf05f98c323331">g</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a35d105bfccef4f52164862ef81517e10">g</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab2db8e0f326cb9e620168480899f80e7">g</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">gain</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>() const -&gt; output_model</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab3b5e3b9a40ed34e5d4fb7f3155834e1">h</a>(const output_model &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa761a06c9b0984ba4e779f7ce8434bb6">h</a>(output_model &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8dcf68b4aaae3099c50a0ed20008a9fe">h</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7c7514987378a9f414fe35b0b868e66b">h</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a87d960bf092b4d09b96cab469c41bdcf">h</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0a97953f6cfb11823bf7175a859f383c">h</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2879383b3c018de9da9801d2082f9713">implementation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">innovation_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a84b9242641a17d3ee45167fcca8c9e0c">input</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4f4614f96ad5a959cc04c3b76b30df56">k</a>() const -&gt; gain</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3711c00c961692b20c398c21f83a11cc">kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#abdd41b063f863347987d886c49621e39">kalman</a>(const kalman &amp;other)=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2c39c64ad83dcc6fa948d3b2c08e60aa">kalman</a>(kalman &amp;&amp;other) noexcept=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4902a8386c2506824507080a57170bc6">observation</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2c15cbc941160cab5c51f5b1612714b8">observation</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1e49b408cd795e92589a34f506813a6a">operator()</a>(const PredictionArguments &amp;...arguments, const auto &amp;...input_u, const auto &amp;...output_z)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8270d34b62666449cb9acb43fba6a7ae">operator=</a>(const kalman &amp;other) -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afb3443e4f233dc6a775551f074148b2e">operator=</a>(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>() const -&gt; estimate_uncertainty</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a828b1ebb9a217690515d13e71919cb84">p</a>(const estimate_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad7d96f203b15b786387c831a20764bd5">p</a>(estimate_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a72bcf8c51e2a64941314ab114d026b42">p</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac2971219f51722acc7f16039b20b033f">p</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#acd1393a459126fdd0fa1e276e2f7d0bc">predict</a>(const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>() const -&gt; process_uncertainty</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a009565f056f1deb87a35f0e90c071ace">q</a>(const process_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ada6203e61d5ce10b5cf0c975228038da">q</a>(process_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a66430f17480527d89070d7af2029edd9">q</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab45a5313a880da2554b3f37fab13b05d">q</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a556623f2e309d756ef375ed0171a471b">q</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac778dee689935e9fd7f22e6279404c8b">q</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>() const -&gt; output_uncertainty</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aefbf7da508036b2406be232af818cd2d">r</a>(const output_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8afdf0b57b40ad3e94daa5ee5825e4b1">r</a>(output_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0ac3ee0025e90abcc96734f703dad4b2">r</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8d97fcc2556c844dd276799b794e598a">r</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#adfdfd0aedf4a47d4e7aee854819f0a6a">r</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3f0df6719f062e036eb0d0ba589057c2">r</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4835d24ec7b4fd4cc7197b7ccf73f617">s</a>() const -&gt; innovation_uncertainty</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4a09b31c36d29ad4eb014682a730d01d">transition</a>(const auto &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aeed636a3d67148c33752dd6d4be4381d">transition</a>(auto &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4f812a58b1635e7a8f9e6f613b7e24f0">u</a>() const -&gt; input</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af0c0297d0d677737625e9fa99c2bb28f">update</a>(const auto &amp;...output_z)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8c5b5958b505bc7dbfe396559d408a8a">value_type</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>() const -&gt; state</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae555fabafed5e62507a3277259a8d5cf">x</a>(const state &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4143e5126dbb431afc6656388a60ecc6">x</a>(state &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#acb35b3deb5e763d7da221a1fd68b640d">x</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a17e7e3f2742bc4a51dabe18a18736a60">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a539aa5fc86af0bb2bdbb2d1c834b61a4">y</a>() const -&gt; innovation</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a775d92b5ed7b1cdc2b6591dc4267af7e">z</a>() const -&gt; output</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af33cdb91db27c653f109a06c016f9cf7">~kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, PredictionArguments &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Thu Jun 23 2022 04:57:38 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
