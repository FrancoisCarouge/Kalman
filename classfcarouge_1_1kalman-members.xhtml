<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classfcarouge_1_1kalman.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afe63ffd764a7eef508a9366605038a55">f</a>() const -&gt; const state_transition &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0778be5a4f05b18fedc40ae519a4fb6c">f</a>() -&gt; state_transition &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0a36196d86b79b19e6456eb09fedd369">f</a>(const state_transition &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a353d4448d3be51931e658b14bea01f2e">f</a>(state_transition &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7e051a24d4528313bb9345330eb72c60">f</a>(const transition_state_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1669aec26e10199669598be7515b1b58">f</a>(transition_state_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a></td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae3ac9c7640e303e5020ccea0eaf0dfb7">g</a>() const -&gt; const input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afa908f8d9ddde01136c44a0f09fb00d5">g</a>() -&gt; input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3de41e564a10050c0fd7be455045bba6">g</a>(const input_control &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad3e3d62942b259c347fc03e232f2c297">g</a>(input_control &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8f81d84c28af1605363ed9812028dc41">g</a>(const transition_control_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7c1c1eb68626e399abf117de538c254b">g</a>(transition_control_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad1eeee2aae7756cb1a24350ff802de2a">gain</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2a696e4880433cce993a10b19887747b">h</a>() const -&gt; const output_model &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6b74778e3d98fafca60b81b71669d178">h</a>() -&gt; output_model &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae4f7ba705650fe606d346969b4542461">h</a>(const output_model &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae3890f39ad42f502ced221c523589fb5">h</a>(output_model &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a18f2040d7e00b06874e5a4ff7bb3385f">h</a>(const observation_state_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a03d83761a97e6908465a75da1e2ee4da">h</a>(observation_state_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab36b602d354fad0d0d0aa93abcdd9f01">implementation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a222414fb9c93edb378a0156aa278a811">innovation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab485e684ce0723c3d6de5dec389c88a6">innovation_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">input</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9ab8dd1a980bb6a0ec2527ccc0b6370d">k</a>() const -&gt; const gain &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a59a9e100ebc62a6d4db11a7e65a06b12">kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa3064ce3ec5d541ddb849a7b530b5124">kalman</a>(const kalman &amp;other)=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a97c4057f94bf097d2075c2b019a1a9e5">kalman</a>(kalman &amp;&amp;other) noexcept=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1f72ebc552d798c0f1c20198e68127bc">noise_observation_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7bbfed3fa165990b1d2b11b66a8ce5c2">noise_process_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8322a989123873c88190f4dd7cea40a5">observation</a>(const observation_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2eee8dab54e2cf6b78bf52551c988bf5">observation</a>(observation_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a689fcc450a7698b5375da9dc9c6a535b">observation_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1985c7ac691e33223b6b470bd7516056">observation_state_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4ae5a09664832ca35039c426a4a15cc6">operator=</a>(const kalman &amp;other) -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa2f0430be3a57809a6bdca479c341954">operator=</a>(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7fd585072f9799aa546943934e1a38e1">output</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac86b75da175dc0a7ac9eec5803c92f4b">p</a>() const -&gt; const estimate_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9742852191b4bb4397e77ffbffafde42">p</a>() -&gt; estimate_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a922687019e99df6169eb09ddaa396bd7">p</a>(const estimate_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac5cb329547421eabc8bb91f2c16329b7">p</a>(estimate_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a326b305473fba0a1efc17660c94eb199">predict</a>(const auto &amp;...arguments)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aec1d96672e7eea0d0b7c53c21eaf6f90">predict</a>() const</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a39949781d9f392007b6dbf97d7b5bcab">q</a>() const -&gt; const process_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afb00b60a769d35cb1bb343f759e36143">q</a>() -&gt; process_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a83e4f8a0a73353e11ddebbd1b8d1d82f">q</a>(const process_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3e5dbe4814f6b42a296c23498010d37f">q</a>(process_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab318abf09d9bdc76f8b620a005bf89df">q</a>(const noise_process_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0b29b04611a007b055c3b79c5df93bc3">q</a>(noise_process_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad36f348f6a553a23e0ea60be43d70f6a">r</a>() const -&gt; const output_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aac11636c2f58e37be2f4c6d90a8f1bfa">r</a>() -&gt; output_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2817f91f637370aea02b56fbf076fa01">r</a>(const output_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa0619da7600a0124f811314fd2021815">r</a>(output_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1d5e5a551e56582d41d2291f68ec85ef">r</a>(const noise_observation_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a476a5222f56e85a2a03b3de5f735952a">r</a>(noise_observation_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0828a776eb386c75dfda49b963b9bd25">s</a>() const -&gt; const innovation_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3d730d7d70675193158ca059a41ffde0">transition</a>(const transition_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a79c28d25749406338e2895dbad5c0158">transition</a>(transition_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a78b78edf59992eb0f70a5ac7e929435e">transition_control_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a590bb0d2390025d6e1705dd073450bf8">transition_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4b9de840036a999b615535a2399a1667">transition_state_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a219ab6c9d08b0b4b6928363a370fb2c5">u</a>() const -&gt; const input &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a71b11bb6c9a898533dfd86ce6eef5c20">update</a>(const auto &amp;...arguments)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8bb0ab5cffd71944ac83f19d5f3b3c83">update</a>() const</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a283ddb031438dc6b3a9f7c6cadf09338">x</a>() const -&gt; const state &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4651ec960a279b0d44df09278ce7f452">x</a>() -&gt; state &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7f45fec5e2a499c7874350f27ff16959">x</a>(const state &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0c655b621eaaea59e65cce6abe12dbd7">x</a>(state &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a232d3cdfe6af3eed0cfe3bbfc1a6a51b">x</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a04f87358de723f8ae31cd0098b54feeb">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a768f798cf2e400312f713434fca71adb">y</a>() const -&gt; const innovation &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9171abacab66f3af260de6de99790298">z</a>() const -&gt; const output &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aefcc6608c7aa96cd7ea0ab658fd5da54">~kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sun Sep 25 2022 02:48:56 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
