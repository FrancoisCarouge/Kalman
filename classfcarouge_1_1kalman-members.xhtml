<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('classfcarouge_1_1kalman.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>() const -&gt; const state_transition &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad853e0afb2f1cae922fc570da643e463">f</a>() -&gt; state_transition &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa2688efccd97183f6173b887e40bcf34">f</a>(const state_transition &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a686a15534f0eb3bd3eb646fc1ed03794">f</a>(state_transition &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a3ddaeb039e322e44818cf0b5c78913be">f</a>(const transition_state_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9d8e3b7328ad70deb1506f6babe4ddf9">f</a>(transition_state_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a></td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>() const -&gt; const input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a953e5ff0efae82a3e2de2d3e59d0a968">g</a>() -&gt; input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a48c3c59453aac26eff7955350dee15ef">g</a>(const input_control &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa5ec9dbc278680c9cac446d24b4789fa">g</a>(input_control &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0043031a127353735e4a009b9bed93ba">g</a>(const transition_control_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6041e36f2f23b4fe8d667683cf316e1d">g</a>(transition_control_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">gain</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>() const -&gt; const output_model &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a981e43cdb98dc56ea70d0e0a9e1d5a5e">h</a>() -&gt; output_model &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a15c5c9e7b897c7fd9e79127be957c3be">h</a>(const output_model &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a96fd884233949382a99e4d657aa932bf">h</a>(output_model &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af042d07a3aa3c4a051fb9d0be17a12e0">h</a>(const observation_state_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afc0b9383ae1fb5134e6928212008b968">h</a>(observation_state_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8ec2ec2747d100f3ce32cdff8ac70331">implementation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">innovation</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">innovation_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">input</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af21fc49da11cf3ea087f6e0b5601f82e">k</a>() const -&gt; const gain &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9b20129bf7970b824760af000fd901f1">kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad3b14be3534eb1c3a2d61b496bd0a7b5">kalman</a>(const kalman &amp;other)=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6d0268717d97cd617bdd75f323b9c319">kalman</a>(kalman &amp;&amp;other) noexcept=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">observation</a>(const observation_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae61382f728286fee1321c73f82311666">observation</a>(observation_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#abc64369462a3430c2823e5969c3e8a0e">operator=</a>(const kalman &amp;other) -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#afaf3a50c0320573f44db0ac92fd9830c">operator=</a>(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">output</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">p</a>() const -&gt; const estimate_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aac38a985c305e5596d7f2cae00d896b4">p</a>() -&gt; estimate_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ac27cba2bc4bc960dc6c48dd9b6874095">p</a>(const estimate_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a96a55d3dc468f8af4b7e83b75604ed3b">p</a>(estimate_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ae7bb3ce73c9da11a9a694af0cc3306a3">predict</a>(const auto &amp;...arguments)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">predict</a>() const</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>() const -&gt; const process_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aae5e85c68ecef11931d9fce39269a06d">q</a>() -&gt; process_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ad7892fa27870360ccc6a3a45c69d5e5a">q</a>(const process_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a8fb7a721da291ad89d8e4d74ef00137a">q</a>(process_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a93e49ac704ec8660264415bb6d6fb256">q</a>(const noise_process_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a9ee6d255f81f6d6918bafd21458fda40">q</a>(noise_process_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>() const -&gt; const output_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a1035098c819afc9e6d6042f4fbdc6b86">r</a>() -&gt; output_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a6ac9e818e2d59e63ad52b3d0c61cc9d2">r</a>(const output_uncertainty &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a47258f0402fa3a8b9c84a715e7b53da4">r</a>(output_uncertainty &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a830699bb67965adf201f50f03954e769">r</a>(const noise_observation_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aaf0568624cc3735e167c40a23fe14110">r</a>(noise_observation_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a7ac54f89db65b70bb013765b21e1dbe4">s</a>() const -&gt; const innovation_uncertainty &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">transition</a>(const transition_function &amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a05c82bf48d3573e6d91d2708f6bef61c">transition</a>(transition_function &amp;&amp;callable)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> typedef</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aabd868007b2b8ff65a4818b339a5bfc6">u</a>() const -&gt; const input &amp;requires(not std::is_same_v&lt; Input, void &gt;)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a86a8854b3ea278e4d743b72ffdbd35da">update</a>(const auto &amp;...arguments)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">update</a>() const</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>() const -&gt; const state &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#abc33dace8bf1d0ad80410e797a6693d3">x</a>() -&gt; state &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab813201eb553cb0e36a343fc18d2228a">x</a>(const state &amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a162a5e170f340d8aea89ca5b8396db93">x</a>(state &amp;&amp;value)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a4ec2e5a7ce177384d9fe56bc5c9537d4">x</a>(const auto &amp;value, const auto &amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#af74a8cd2415274ec443ed2919e8862fa">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values)</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#affc21b5672b9e24008ca0da21f81e79e">y</a>() const -&gt; const innovation &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#ab2f8cc075c0c78c6010808f375fd0983">z</a>() const -&gt; const output &amp;</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml#a11beeb6cab8f8432000b6e67c6eaa71e">~kalman</a>()=default</td><td class="entry"><a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman&lt; State, Output, Input, Transpose, Divide, UpdateTypes, PredictionTypes &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sat Oct 22 2022 19:24:08 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
