<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/include/fcarouge/internal/factory.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('factory_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">factory.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="factory_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.4.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INTERNAL_FACTORY_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INTERNAL_FACTORY_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &quot;<a class="code" href="type_8hpp.xhtml">fcarouge/internal/type.hpp</a>&quot;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__p__q__r__h__f_8hpp.xhtml">fcarouge/internal/x_z_p_q_r_h_f.hpp</a>&quot;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__p__q__r__hh__us__ps_8hpp.xhtml">fcarouge/internal/x_z_p_q_r_hh_us_ps.hpp</a>&quot;</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__p__qq__rr__f_8hpp.xhtml">fcarouge/internal/x_z_p_qq_rr_f.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__p__r_8hpp.xhtml">fcarouge/internal/x_z_p_r.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__p__r__f_8hpp.xhtml">fcarouge/internal/x_z_p_r_f.hpp</a>&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__u__p__q__r_8hpp.xhtml">fcarouge/internal/x_z_u_p_q_r.hpp</a>&quot;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__u__p__q__r__f__g__ps_8hpp.xhtml">fcarouge/internal/x_z_u_p_q_r_f_g_ps.hpp</a>&quot;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &quot;<a class="code" href="x__z__u__p__q__r__h__f__g__us__ps_8hpp.xhtml">fcarouge/internal/x_z_u_p_q_r_h_f_g_us_ps.hpp</a>&quot;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a> {</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter = <span class="keywordtype">void</span>&gt; <span class="keyword">struct </span>filter_deducer {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Arguments&gt;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  operator()([[maybe_unused]] Arguments... arguments) <span class="keyword">const</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    <span class="keyword">requires</span>(std::same_as&lt;Filter, void&gt;)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keyword">static_assert</span>(<span class="keyword">false</span>,</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>                  <span class="stringliteral">&quot;This requested filter configuration is not yet supported. &quot;</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>                  <span class="stringliteral">&quot;Please, submit a pull request or feature request.&quot;</span>);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">return</span> x_z_p_r&lt;double&gt;{};</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()() const -&gt; x_z_p_r&lt;<span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    requires(std::same_as&lt;Filter, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  inline constexpr auto operator()()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> Filter{}; }</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State&gt;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    <span class="keywordflow">return</span> x_z_p_r&lt;State&gt;(x.value);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output&gt;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keyword">requires</span> std::same_as&lt;State, Output&gt;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keywordflow">return</span> x_z_p_r&lt;State&gt;(x.value);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  }</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output&gt;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    <span class="keywordflow">return</span> x_z_p_q_r_h_f&lt;State, Output&gt;(x.value);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input&gt;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>                                   [[maybe_unused]] input_t&lt;Input&gt; u)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keyword">using </span>kt =</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        x_z_u_p_q_r_h_f_g_us_ps&lt;State, Output, Input, empty_tuple, empty_tuple&gt;;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value)};</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>            <span class="keyword">typename</span> EstimateUncertainty, <span class="keyword">typename</span> ProcessUncertainty,</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>            <span class="keyword">typename</span> OutputUncertainty, <span class="keyword">typename</span> StateTransition,</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>            <span class="keyword">typename</span> InputControl, <span class="keyword">typename</span>... Ps&gt;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(ProcessUncertainty q) {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      <span class="keyword">requires</span> std::invocable&lt;ProcessUncertainty, State, Ps...&gt;;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>             [[maybe_unused]] input_t&lt;Input&gt; u,</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition&lt;StateTransition&gt;</a> f, <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#ab441fe9a9ee342227522822f5245e2a2">input_control&lt;InputControl&gt;</a> g,</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>             [[maybe_unused]] prediction_types_t&lt;Ps...&gt; pts)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    <span class="keyword">using </span>kt = x_z_u_p_q_r_f_g_ps&lt;State, Output, Input, <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#aba5eb00c20ad829026fe88a48785307d">empty_tuple</a>,</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>                                  <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;prediction_types_t&lt;Ps...&gt;&gt;&gt;;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>              <span class="keyword">typename</span> kt::noise_process_function(q.value),</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value),</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>              <span class="keyword">typename</span> kt::transition_state_function(f.value),</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>              <span class="keyword">typename</span> kt::transition_control_function(g.value)};</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  }</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span>... Us,</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>            <span class="keyword">typename</span>... Ps&gt;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>             [[maybe_unused]] input_t&lt;Input&gt; u,</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>             [[maybe_unused]] update_types_t&lt;Us...&gt; uts,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>             [[maybe_unused]] prediction_types_t&lt;Ps...&gt; pts)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keyword">using </span>kt = x_z_u_p_q_r_h_f_g_us_ps&lt;State, Output, Input,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;update_types_t&lt;Us...&gt;&gt;,</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;prediction_types_t&lt;Ps...&gt;&gt;&gt;;</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value)};</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  }</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>            <span class="keyword">typename</span> ProcessUncertainty, <span class="keyword">typename</span> OutputUncertainty,</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>            <span class="keyword">typename</span> OutputModel, <span class="keyword">typename</span> Transition, <span class="keyword">typename</span> Observation,</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>            <span class="keyword">typename</span>... Us, <span class="keyword">typename</span>... Ps&gt;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>() {</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>      <span class="keyword">requires</span> std::invocable&lt;OutputModel, State, Us...&gt;;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>      <span class="keyword">requires</span> std::invocable&lt;Transition, State, Ps...&gt;;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>      <span class="keyword">requires</span> std::invocable&lt;Observation, State, Ps...&gt;;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#af41c59712adaec8d2aac3366133cd381">output_model&lt;OutputModel&gt;</a> h, <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#ab650a2bb0de1f418440b1d5cf8903b41">transition&lt;Transition&gt;</a> ff,</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a79f6e22e40f939028ed33d22111a4f39">observation&lt;Observation&gt;</a> hh,</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>             [[maybe_unused]] update_types_t&lt;Us...&gt; uts,</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>             [[maybe_unused]] prediction_types_t&lt;Ps...&gt; pts)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    <span class="keyword">using </span>kt = x_z_p_q_r_hh_us_ps&lt;State, Output, <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;update_types_t&lt;Us...&gt;&gt;,</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>                                  <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;prediction_types_t&lt;Ps...&gt;&gt;&gt;;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value),</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>              <span class="keyword">typename</span> kt::observation_state_function(h.value),</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>              <span class="keyword">typename</span> kt::transition_function(ff.value),</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>              <span class="keyword">typename</span> kt::observation_function(hh.value)};</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  }</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>            <span class="keyword">typename</span> ProcessUncertainty, <span class="keyword">typename</span> OutputUncertainty,</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>            <span class="keyword">typename</span> OutputModel, <span class="keyword">typename</span> StateTransition&gt;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#af41c59712adaec8d2aac3366133cd381">output_model&lt;OutputModel&gt;</a> h,</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition&lt;StateTransition&gt;</a> f)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keyword">using </span>kt = x_z_p_q_r_h_f&lt;State, Output&gt;;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value),</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>              <span class="keyword">typename</span> kt::output_model(h.value),</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>              <span class="keyword">typename</span> kt::state_transition(f.value)};</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  }</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>            <span class="keyword">typename</span> OutputUncertainty&gt;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    <span class="keyword">requires</span> std::same_as&lt;State, Output&gt;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    <span class="keyword">using </span>kt = x_z_p_r&lt;State&gt;;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  }</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>            <span class="keyword">typename</span> OutputUncertainty, <span class="keyword">typename</span> StateTransition&gt;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition&lt;StateTransition&gt;</a> f)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>    <span class="keyword">using </span>kt = x_z_p_r_f&lt;State&gt;;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value),</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>              <span class="keyword">typename</span> kt::state_transition(f.value)};</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  }</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>            <span class="keyword">typename</span> OutputUncertainty&gt;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keyword">using </span>kt = x_z_p_q_r_h_f&lt;State, Output&gt;;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  }</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>            <span class="keyword">typename</span> OutputUncertainty, <span class="keyword">typename</span> ProcessUncertainty&gt;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    <span class="keyword">using </span>kt = x_z_p_q_r_h_f&lt;State, Output&gt;;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  }</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>            <span class="keyword">typename</span> EstimateUncertainty, <span class="keyword">typename</span> ProcessUncertainty,</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>            <span class="keyword">typename</span> OutputUncertainty&gt;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>             [[maybe_unused]] input_t&lt;Input&gt; u,</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <span class="keyword">using </span>kt =</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>        x_z_u_p_q_r_h_f_g_us_ps&lt;State, Output, Input, empty_tuple, empty_tuple&gt;;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>  }</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>            <span class="keyword">typename</span> EstimateUncertainty, <span class="keyword">typename</span> OutputUncertainty,</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>            <span class="keyword">typename</span> ProcessUncertainty, <span class="keyword">typename</span>... Us, <span class="keyword">typename</span>... Ps&gt;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>             [[maybe_unused]] input_t&lt;Input&gt; u,</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>             [[maybe_unused]] update_types_t&lt;Us...&gt; uts,</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>             [[maybe_unused]] prediction_types_t&lt;Ps...&gt; pts)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span> </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keyword">using </span>kt = x_z_u_p_q_r_h_f_g_us_ps&lt;State, Output, Input,</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;update_types_t&lt;Us...&gt;&gt;,</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;prediction_types_t&lt;Ps...&gt;&gt;&gt;;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  }</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>            <span class="keyword">typename</span> ProcessUncertainty, <span class="keyword">typename</span> OutputUncertainty&gt;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;Type&gt;</a> x, [[maybe_unused]] output_t&lt;Type&gt; z,</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>             [[maybe_unused]] input_t&lt;Type&gt; u,</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>    <span class="keyword">using </span>kt = x_z_u_p_q_r&lt;Type&gt;;</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value)};</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  }</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>            <span class="keyword">typename</span> EstimateUncertainty, <span class="keyword">typename</span> ProcessUncertainty,</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>            <span class="keyword">typename</span> OutputUncertainty, <span class="keyword">typename</span> OutputModel,</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>            <span class="keyword">typename</span> StateTransition, <span class="keyword">typename</span> InputControl, <span class="keyword">typename</span>... Us,</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>            <span class="keyword">typename</span>... Ps&gt;</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x, [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>             [[maybe_unused]] input_t&lt;Input&gt; u,</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#af41c59712adaec8d2aac3366133cd381">output_model&lt;OutputModel&gt;</a> h, <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition&lt;StateTransition&gt;</a> f,</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>             <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#ab441fe9a9ee342227522822f5245e2a2">input_control&lt;InputControl&gt;</a> g,</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>             [[maybe_unused]] update_types_t&lt;Us...&gt; uts,</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>             [[maybe_unused]] prediction_types_t&lt;Ps...&gt; pts)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <span class="keyword">using </span>kt = x_z_u_p_q_r_h_f_g_us_ps&lt;State, Output, Input,</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;update_types_t&lt;Us...&gt;&gt;,</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>                                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">repack</a>&lt;prediction_types_t&lt;Ps...&gt;&gt;&gt;;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>              <span class="keyword">typename</span> kt::process_uncertainty(q.value),</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>              <span class="keyword">typename</span> kt::output_uncertainty(r.value),</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>              <span class="keyword">typename</span> kt::output_model(h.value),</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>              <span class="keyword">typename</span> kt::state_transition(f.value),</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>              <span class="keyword">typename</span> kt::input_control(g.value)};</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>  }</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> EstimateUncertainty,</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>            <span class="keyword">typename</span> ProcessUncertainty, <span class="keyword">typename</span> OutputUncertainty,</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>            <span class="keyword">typename</span> StateTransition&gt;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(ProcessUncertainty q, OutputUncertainty r) {</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>      <span class="keyword">requires</span> std::invocable&lt;ProcessUncertainty, State&gt;;</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>      <span class="keyword">requires</span> std::invocable&lt;OutputUncertainty, State, Output&gt;;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>    }</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">state&lt;State&gt;</a> x,</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>                                   [[maybe_unused]] output_t&lt;Output&gt; z,</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">estimate_uncertainty&lt;EstimateUncertainty&gt;</a> p,</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty&lt;ProcessUncertainty&gt;</a> q,</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty&lt;OutputUncertainty&gt;</a> r,</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>                                   <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition&lt;StateTransition&gt;</a> f)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>    <span class="keyword">using </span>kt = x_z_p_qq_rr_f&lt;State, Output&gt;;</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>    <span class="keywordflow">return</span> kt{<span class="keyword">typename</span> kt::state(x.value),</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>              <span class="keyword">typename</span> kt::estimate_uncertainty(p.value),</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>              <span class="keyword">typename</span> kt::noise_process_function(q.value),</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>              <span class="keyword">typename</span> kt::noise_observation_function(r.value),</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>              <span class="keyword">typename</span> kt::state_transition(f.value)};</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  }</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>};</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">  354</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Filter&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> filter_deducer&lt;Filter&gt; <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>{};</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Arguments&gt;</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a0005e5cf17f05f289eaf8a5bc9ffeda5">  357</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a0005e5cf17f05f289eaf8a5bc9ffeda5">deduce_filter</a> = std::invoke_result_t&lt;filter_deducer&lt;&gt;, Arguments...&gt;;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>} <span class="comment">// namespace fcarouge::internal</span></div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INTERNAL_FACTORY_HPP</span></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a0005e5cf17f05f289eaf8a5bc9ffeda5"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a0005e5cf17f05f289eaf8a5bc9ffeda5">fcarouge::internal::deduce_filter</a></div><div class="ttdeci">std::invoke_result_t&lt; filter_deducer&lt;&gt;, Arguments... &gt; deduce_filter</div><div class="ttdef"><b>Definition</b> <a href="#l00357">factory.hpp:357</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a040f0f8f1c580c270311aac67e8706e6"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a040f0f8f1c580c270311aac67e8706e6">fcarouge::internal::state</a></div><div class="ttdeci">state(Type) -&gt; state&lt; Type &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a198bcbdb5521548ddb61317e21ff8f1f"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">fcarouge::internal::state_transition</a></div><div class="ttdeci">state_transition(Element) -&gt; state_transition&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a665945f3d976759241bf85f4102a2d16"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">fcarouge::internal::output_uncertainty</a></div><div class="ttdeci">output_uncertainty(Element) -&gt; output_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a79f6e22e40f939028ed33d22111a4f39"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a79f6e22e40f939028ed33d22111a4f39">fcarouge::internal::observation</a></div><div class="ttdeci">observation(Element) -&gt; observation&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a88ca8cd4d48af886c2c73835d77a1bf3"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">fcarouge::internal::process_uncertainty</a></div><div class="ttdeci">process_uncertainty(Element) -&gt; process_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a8f2c9f1d6c11710ebe51a102f09e170b"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a8f2c9f1d6c11710ebe51a102f09e170b">fcarouge::internal::estimate_uncertainty</a></div><div class="ttdeci">estimate_uncertainty(Element) -&gt; estimate_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a90e8b68cdd277f22bfc4b4c678b5c8b8"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">fcarouge::internal::filter</a></div><div class="ttdeci">constexpr filter_deducer&lt; Filter &gt; filter</div><div class="ttdef"><b>Definition</b> <a href="#l00354">factory.hpp:354</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ab441fe9a9ee342227522822f5245e2a2"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ab441fe9a9ee342227522822f5245e2a2">fcarouge::internal::input_control</a></div><div class="ttdeci">input_control(Element) -&gt; input_control&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ab650a2bb0de1f418440b1d5cf8903b41"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ab650a2bb0de1f418440b1d5cf8903b41">fcarouge::internal::transition</a></div><div class="ttdeci">transition(Element) -&gt; transition&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_aba5eb00c20ad829026fe88a48785307d"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#aba5eb00c20ad829026fe88a48785307d">fcarouge::internal::empty_tuple</a></div><div class="ttdeci">std::tuple&lt;&gt; empty_tuple</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00251">utility.hpp:251</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ac5b5280ce4415cabffdbb67a0db92af3"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ac5b5280ce4415cabffdbb67a0db92af3">fcarouge::internal::repack</a></div><div class="ttdeci">repacker&lt; Pack &gt;::type repack</div><div class="ttdef"><b>Definition</b> <a href="internal_2utility_8hpp_source.xhtml#l00253">utility.hpp:253</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_af41c59712adaec8d2aac3366133cd381"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#af41c59712adaec8d2aac3366133cd381">fcarouge::internal::output_model</a></div><div class="ttdeci">output_model(Element) -&gt; output_model&lt; Element &gt;</div></div>
<div class="ttc" id="atype_8hpp_xhtml"><div class="ttname"><a href="type_8hpp.xhtml">type.hpp</a></div></div>
<div class="ttc" id="ax__z__p__q__r__h__f_8hpp_xhtml"><div class="ttname"><a href="x__z__p__q__r__h__f_8hpp.xhtml">x_z_p_q_r_h_f.hpp</a></div></div>
<div class="ttc" id="ax__z__p__q__r__hh__us__ps_8hpp_xhtml"><div class="ttname"><a href="x__z__p__q__r__hh__us__ps_8hpp.xhtml">x_z_p_q_r_hh_us_ps.hpp</a></div></div>
<div class="ttc" id="ax__z__p__qq__rr__f_8hpp_xhtml"><div class="ttname"><a href="x__z__p__qq__rr__f_8hpp.xhtml">x_z_p_qq_rr_f.hpp</a></div></div>
<div class="ttc" id="ax__z__p__r_8hpp_xhtml"><div class="ttname"><a href="x__z__p__r_8hpp.xhtml">x_z_p_r.hpp</a></div></div>
<div class="ttc" id="ax__z__p__r__f_8hpp_xhtml"><div class="ttname"><a href="x__z__p__r__f_8hpp.xhtml">x_z_p_r_f.hpp</a></div></div>
<div class="ttc" id="ax__z__u__p__q__r_8hpp_xhtml"><div class="ttname"><a href="x__z__u__p__q__r_8hpp.xhtml">x_z_u_p_q_r.hpp</a></div></div>
<div class="ttc" id="ax__z__u__p__q__r__f__g__ps_8hpp_xhtml"><div class="ttname"><a href="x__z__u__p__q__r__f__g__ps_8hpp.xhtml">x_z_u_p_q_r_f_g_ps.hpp</a></div></div>
<div class="ttc" id="ax__z__u__p__q__r__h__f__g__us__ps_8hpp_xhtml"><div class="ttname"><a href="x__z__u__p__q__r__h__f__g__us__ps_8hpp.xhtml">x_z_u_p_q_r_h_f_g_us_ps.hpp</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_378fe1080454d2b2e5da42d8158af554.xhtml">internal</a></li><li class="navelem"><a class="el" href="factory_8hpp.xhtml">factory.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
