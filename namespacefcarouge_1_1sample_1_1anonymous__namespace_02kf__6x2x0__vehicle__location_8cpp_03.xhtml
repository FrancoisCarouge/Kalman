<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.3.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp} Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aea874e6d5763ffe074ce591b7e2e8336" id="r_aea874e6d5763ffe074ce591b7e2e8336"><td class="memTemplParams" colspan="2">template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Size&gt; </td></tr>
<tr class="memitem:aea874e6d5763ffe074ce591b7e2e8336"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#aea874e6d5763ffe074ce591b7e2e8336">vector</a> = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a>&lt; double, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">Size</a> &gt;</td></tr>
<tr class="separator:aea874e6d5763ffe074ce591b7e2e8336"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a01e191b965cbf1142f550229d05c2197" id="r_a01e191b965cbf1142f550229d05c2197"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a01e191b965cbf1142f550229d05c2197">sample</a></td></tr>
<tr class="separator:a01e191b965cbf1142f550229d05c2197"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="aea874e6d5763ffe074ce591b7e2e8336" name="aea874e6d5763ffe074ce591b7e2e8336"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea874e6d5763ffe074ce591b7e2e8336">&#9670;&#160;</a></span>vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::vector = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a>&lt;double, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">Size</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00018">18</a> of file <a class="el" href="kf__6x2x0__vehicle__location_8cpp_source.xhtml">kf_6x2x0_vehicle_location.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a01e191b965cbf1142f550229d05c2197" name="a01e191b965cbf1142f550229d05c2197"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01e191b965cbf1142f550229d05c2197">&#9670;&#160;</a></span>sample</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::sample</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="kf__6x2x0__vehicle__location_8cpp_source.xhtml">kf_6x2x0_vehicle_location.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   39</span>                            {[] {</div>
<div class="line"><span class="lineno">   40</span>  <span class="comment">// A 6x2x0 filter, constant acceleration dynamic model, no control.</span></div>
<div class="line"><span class="lineno">   41</span>  <span class="keyword">using </span>state = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">vector&lt;6&gt;</a>;</div>
<div class="line"><span class="lineno">   42</span>  <span class="keyword">using </span>output = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">vector&lt;2&gt;</a>;</div>
<div class="line"><span class="lineno">   43</span>  <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">no_input</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">void</a>;</div>
<div class="line"><span class="lineno">   44</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">kalman&lt;state, output, no_input&gt;</a>;</div>
<div class="line"><span class="lineno">   45</span> </div>
<div class="line"><span class="lineno">   46</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><span class="lineno">   47</span> </div>
<div class="line"><span class="lineno">   48</span>  <span class="comment">// Initialization</span></div>
<div class="line"><span class="lineno">   49</span>  <span class="comment">// The state is chosen to be the position, velocity, acceleration in the XY</span></div>
<div class="line"><span class="lineno">   50</span>  <span class="comment">// plane: [px, vx, ax, py, vy, ay]. We don&#39;t know the vehicle location; we</span></div>
<div class="line"><span class="lineno">   51</span>  <span class="comment">// will set initial position, velocity and acceleration to 0.</span></div>
<div class="line"><span class="lineno">   52</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>(0., 0., 0., 0., 0., 0.);</div>
<div class="line"><span class="lineno">   53</span> </div>
<div class="line"><span class="lineno">   54</span>  <span class="comment">// Since our initial state vector is a guess, we will set a very high estimate</span></div>
<div class="line"><span class="lineno">   55</span>  <span class="comment">// uncertainty. The high estimate uncertainty results in a high Kalman Gain,</span></div>
<div class="line"><span class="lineno">   56</span>  <span class="comment">// giving a high weight to the measurement.</span></div>
<div class="line"><span class="lineno">   57</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2b9d45277b0216e1f15d64ff9369802e">kalman::estimate_uncertainty</a>{{500., 0., 0., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   58</span>                                        {0., 500., 0., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   59</span>                                        {0., 0., 500., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   60</span>                                        {0., 0., 0., 500., 0., 0.},</div>
<div class="line"><span class="lineno">   61</span>                                        {0., 0., 0., 0., 500., 0.},</div>
<div class="line"><span class="lineno">   62</span>                                        {0., 0., 0., 0., 0., 500.}});</div>
<div class="line"><span class="lineno">   63</span> </div>
<div class="line"><span class="lineno">   64</span>  <span class="comment">// Prediction</span></div>
<div class="line"><span class="lineno">   65</span>  <span class="comment">// The process noise matrix Q would be:</span></div>
<div class="line"><span class="lineno">   66</span>  kalman::process_uncertainty q{</div>
<div class="line"><span class="lineno">   67</span>      {0.25, 0.5, 0.5, 0., 0., 0.}, {0.5, 1., 1., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   68</span>      {0.5, 1., 1., 0., 0., 0.},    {0., 0., 0., 0.25, 0.5, 0.5},</div>
<div class="line"><span class="lineno">   69</span>      {0., 0., 0., 0.5, 1., 1.},    {0., 0., 0., 0.5, 1., 1.}};</div>
<div class="line"><span class="lineno">   70</span>  q *= 0.2 * 0.2;</div>
<div class="line"><span class="lineno">   71</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a04da55f7c46559f46cac6da0a5132605">q</a>(q);</div>
<div class="line"><span class="lineno">   72</span> </div>
<div class="line"><span class="lineno">   73</span>  <span class="comment">// The state transition matrix F would be:</span></div>
<div class="line"><span class="lineno">   74</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2e2b3d64520fb7e7476b6b8bbb0352e9">f</a>(kalman::state_transition{{1., 1., 0.5, 0., 0., 0.},</div>
<div class="line"><span class="lineno">   75</span>                                    {0., 1., 1., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   76</span>                                    {0., 0., 1., 0., 0., 0.},</div>
<div class="line"><span class="lineno">   77</span>                                    {0., 0., 0., 1., 1., 0.5},</div>
<div class="line"><span class="lineno">   78</span>                                    {0., 0., 0., 0., 1., 1.},</div>
<div class="line"><span class="lineno">   79</span>                                    {0., 0., 0., 0., 0., 1.}});</div>
<div class="line"><span class="lineno">   80</span> </div>
<div class="line"><span class="lineno">   81</span>  <span class="comment">// Now we can predict the next state based on the initialization values.</span></div>
<div class="line"><span class="lineno">   82</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1a54f32cfaafea2d586a5f7b28898fec">predict</a>();</div>
<div class="line"><span class="lineno">   83</span> </div>
<div class="line"><span class="lineno">   84</span>  <span class="comment">// Measure and Update</span></div>
<div class="line"><span class="lineno">   85</span>  <span class="comment">// The dimension of zn is 2x1 and the dimension of xn is 6x1. Therefore the</span></div>
<div class="line"><span class="lineno">   86</span>  <span class="comment">// dimension of the observation matrix H shall be 2x6.</span></div>
<div class="line"><span class="lineno">   87</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a204057628097c64e926affd69a530861">h</a>(</div>
<div class="line"><span class="lineno">   88</span>      kalman::output_model{{1., 0., 0., 0., 0., 0.}, {0., 0., 0., 1., 0., 0.}});</div>
<div class="line"><span class="lineno">   89</span> </div>
<div class="line"><span class="lineno">   90</span>  <span class="comment">// Assume that the x and y measurements are uncorrelated, i.e. error in the x</span></div>
<div class="line"><span class="lineno">   91</span>  <span class="comment">// coordinate measurement doesn&#39;t depend on the error in the y coordinate</span></div>
<div class="line"><span class="lineno">   92</span>  <span class="comment">// measurement. In real-life applications, the measurement uncertainty can</span></div>
<div class="line"><span class="lineno">   93</span>  <span class="comment">// differ between measurements. In many systems the measurement uncertainty</span></div>
<div class="line"><span class="lineno">   94</span>  <span class="comment">// depends on the measurement SNR (signal-to-noise ratio), angle between</span></div>
<div class="line"><span class="lineno">   95</span>  <span class="comment">// sensor (or sensors) and target, signal frequency and many other parameters.</span></div>
<div class="line"><span class="lineno">   96</span>  <span class="comment">// For the sake of the example simplicity, we will assume a constant</span></div>
<div class="line"><span class="lineno">   97</span>  <span class="comment">// measurement uncertainty: R1 = R2...Rn-1 = Rn = R The measurement error</span></div>
<div class="line"><span class="lineno">   98</span>  <span class="comment">// standard deviation: σxm = σym = 3m. The variance 9.</span></div>
<div class="line"><span class="lineno">   99</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acf923010d2576566b69acf82007924d9">r</a>(kalman::output_uncertainty{{9., 0.}, {0., 9.}});</div>
<div class="line"><span class="lineno">  100</span> </div>
<div class="line"><span class="lineno">  101</span>  <span class="comment">// The measurement values: z1 = [-393.66, 300.4]</span></div>
<div class="line"><span class="lineno">  102</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af971a3cfb03099d42c99e6a165c56ad5">update</a>(-393.66, 300.4);</div>
<div class="line"><span class="lineno">  103</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1a54f32cfaafea2d586a5f7b28898fec">predict</a>();</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>  <span class="comment">// And so on, run a step of the filter, predicting and updating, every</span></div>
<div class="line"><span class="lineno">  106</span>  <span class="comment">// measurements period: Δt = 1s (constant, built-in).</span></div>
<div class="line"><span class="lineno">  107</span>  <span class="keyword">const</span> <span class="keyword">auto</span> step{[&amp;filter](<span class="keywordtype">double</span> position_x, <span class="keywordtype">double</span> position_y) {</div>
<div class="line"><span class="lineno">  108</span>    filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af971a3cfb03099d42c99e6a165c56ad5">update</a>(position_x, position_y);</div>
<div class="line"><span class="lineno">  109</span>    filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1a54f32cfaafea2d586a5f7b28898fec">predict</a>();</div>
<div class="line"><span class="lineno">  110</span>  }};</div>
<div class="line"><span class="lineno">  111</span> </div>
<div class="line"><span class="lineno">  112</span>  step(-375.93, 301.78);</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>  <span class="comment">// Verify the example estimated state at 0.1% accuracy.</span></div>
<div class="line"><span class="lineno">  115</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[0] / -277.8) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  116</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[1] / 148.3) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  117</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[2] / 94.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  118</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[3] / 249.8) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  119</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[4] / -85.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  120</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[5] / -63.6) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  121</span>         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  122</span> </div>
<div class="line"><span class="lineno">  123</span>  step(-351.04, 295.1);</div>
<div class="line"><span class="lineno">  124</span>  step(-328.96, 305.19);</div>
<div class="line"><span class="lineno">  125</span>  step(-299.35, 301.06);</div>
<div class="line"><span class="lineno">  126</span>  step(-273.36, 302.05);</div>
<div class="line"><span class="lineno">  127</span>  step(-245.89, 300);</div>
<div class="line"><span class="lineno">  128</span>  step(-222.58, 303.57);</div>
<div class="line"><span class="lineno">  129</span>  step(-198.03, 296.33);</div>
<div class="line"><span class="lineno">  130</span>  step(-174.17, 297.65);</div>
<div class="line"><span class="lineno">  131</span>  step(-146.32, 297.41);</div>
<div class="line"><span class="lineno">  132</span>  step(-123.72, 299.61);</div>
<div class="line"><span class="lineno">  133</span>  step(-103.47, 299.6);</div>
<div class="line"><span class="lineno">  134</span>  step(-78.23, 302.39);</div>
<div class="line"><span class="lineno">  135</span>  step(-52.63, 295.04);</div>
<div class="line"><span class="lineno">  136</span>  step(-23.34, 300.09);</div>
<div class="line"><span class="lineno">  137</span>  step(25.96, 294.72);</div>
<div class="line"><span class="lineno">  138</span>  step(49.72, 298.61);</div>
<div class="line"><span class="lineno">  139</span>  step(76.94, 294.64);</div>
<div class="line"><span class="lineno">  140</span>  step(95.38, 284.88);</div>
<div class="line"><span class="lineno">  141</span>  step(119.83, 272.82);</div>
<div class="line"><span class="lineno">  142</span>  step(144.01, 264.93);</div>
<div class="line"><span class="lineno">  143</span>  step(161.84, 251.46);</div>
<div class="line"><span class="lineno">  144</span>  step(180.56, 241.27);</div>
<div class="line"><span class="lineno">  145</span>  step(201.42, 222.98);</div>
<div class="line"><span class="lineno">  146</span>  step(222.62, 203.73);</div>
<div class="line"><span class="lineno">  147</span>  step(239.4, 184.1);</div>
<div class="line"><span class="lineno">  148</span>  step(252.51, 166.12);</div>
<div class="line"><span class="lineno">  149</span>  step(266.26, 138.71);</div>
<div class="line"><span class="lineno">  150</span>  step(271.75, 119.71);</div>
<div class="line"><span class="lineno">  151</span>  step(277.4, 100.41);</div>
<div class="line"><span class="lineno">  152</span>  step(294.12, 79.76);</div>
<div class="line"><span class="lineno">  153</span>  step(301.23, 50.62);</div>
<div class="line"><span class="lineno">  154</span>  step(291.8, 32.99);</div>
<div class="line"><span class="lineno">  155</span>  step(299.89, 2.14);</div>
<div class="line"><span class="lineno">  156</span> </div>
<div class="line"><span class="lineno">  157</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[0] / 298.5) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  158</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[1] / -1.65) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  159</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[2] / -1.9) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  160</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[3] / -22.5) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  161</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[4] / -26.1) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  162</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">x</a>()[5] / -0.64) &lt; 0.006 &amp;&amp;</div>
<div class="line"><span class="lineno">  163</span>         <span class="stringliteral">&quot;The state estimates expected at 0.6% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  164</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(0, 0) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  165</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(0, 1) / 4.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  166</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(0, 2) / 0.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  167</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(1, 1) / 2.4) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  168</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(2, 2) / 0.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  169</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">p</a>()(3, 3) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  170</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span></div>
<div class="line"><span class="lineno">  171</span>         <span class="stringliteral">&quot;At this point, the position uncertainty px = py = 5, which means &quot;</span></div>
<div class="line"><span class="lineno">  172</span>         <span class="stringliteral">&quot;that the standard deviation of the prediction is square root of 5m.&quot;</span>);</div>
<div class="line"><span class="lineno">  173</span> </div>
<div class="line"><span class="lineno">  174</span>  <span class="comment">// As you can see, the Kalman Filter tracks the vehicle quite well. However,</span></div>
<div class="line"><span class="lineno">  175</span>  <span class="comment">// when the vehicle starts the turning maneuver, the estimates are not so</span></div>
<div class="line"><span class="lineno">  176</span>  <span class="comment">// accurate. After a while, the Kalman Filter accuracy improves. While the</span></div>
<div class="line"><span class="lineno">  177</span>  <span class="comment">// vehicle travels along the straight line, the acceleration is constant and</span></div>
<div class="line"><span class="lineno">  178</span>  <span class="comment">// equal to zero. However, during the turn maneuver, the vehicle experiences</span></div>
<div class="line"><span class="lineno">  179</span>  <span class="comment">// acceleration due to the circular motion - the angular acceleration.</span></div>
<div class="line"><span class="lineno">  180</span>  <span class="comment">// Although the angular acceleration is constant, the angular acceleration</span></div>
<div class="line"><span class="lineno">  181</span>  <span class="comment">// projection on the x and y axes is not constant, therefore ax and ay are not</span></div>
<div class="line"><span class="lineno">  182</span>  <span class="comment">// constant. Our Kalman Filter is designed for a constant acceleration model.</span></div>
<div class="line"><span class="lineno">  183</span>  <span class="comment">// Nevertheless, it succeeds in tracking maneuvering vehicle due to a properly</span></div>
<div class="line"><span class="lineno">  184</span>  <span class="comment">// chosen σa parameter. I would like to encourage the readers to implement</span></div>
<div class="line"><span class="lineno">  185</span>  <span class="comment">// this example in software and see how different values of σa of R influence</span></div>
<div class="line"><span class="lineno">  186</span>  <span class="comment">// the actual Kalman Filter accuracy, Kalman Gain convergence, and estimation</span></div>
<div class="line"><span class="lineno">  187</span>  <span class="comment">// uncertainty.</span></div>
<div class="line"><span class="lineno">  188</span> </div>
<div class="line"><span class="lineno">  189</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  190</span>}()};</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter.</div><div class="ttdef"><b>Definition</b> <a href="kalman_8hpp_source.xhtml#l00160">kalman.hpp:162</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a04da55f7c46559f46cac6da0a5132605"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a04da55f7c46559f46cac6da0a5132605">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; const process_uncertainty &amp;</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1a54f32cfaafea2d586a5f7b28898fec"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1a54f32cfaafea2d586a5f7b28898fec">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a204057628097c64e926affd69a530861"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a204057628097c64e926affd69a530861">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr const auto &amp; h() const</div><div class="ttdoc">Returns the observation transition matrix H.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2b9d45277b0216e1f15d64ff9369802e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2b9d45277b0216e1f15d64ff9369802e">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition</b> <a href="kalman_8hpp_source.xhtml#l00198">kalman.hpp:198</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2e2b3d64520fb7e7476b6b8bbb0352e9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2e2b3d64520fb7e7476b6b8bbb0352e9">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; const state_transition &amp;</div><div class="ttdoc">Returns the state transition matrix F.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3ae3ff5bfaa781f0b64ed8e88d804508"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3ae3ff5bfaa781f0b64ed8e88d804508">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; const estimate_uncertainty &amp;</div><div class="ttdoc">Returns the estimated covariance matrix P.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acf923010d2576566b69acf82007924d9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acf923010d2576566b69acf82007924d9">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; const output_uncertainty &amp;</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad24bd49bfc9877ef197ab7aec6302282"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad24bd49bfc9877ef197ab7aec6302282">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; const state &amp;</div><div class="ttdoc">Returns the state estimate column vector X.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af971a3cfb03099d42c99e6a165c56ad5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af971a3cfb03099d42c99e6a165c56ad5">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a6f496dc857f8b172efc57e3ba9bfdbf8"><div class="ttname"><a href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00073">linalg.hpp:73</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample.xhtml">sample</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml">anonymous_namespace{kf_6x2x0_vehicle_location.cpp}</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
