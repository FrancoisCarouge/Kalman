<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::matrix&lt; Type, Row, Column, Copyable &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.2.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structfcarouge_1_1matrix.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structfcarouge_1_1matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aef4e1a401c270d709c1ebaf0a3ea4a91"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a> = std::generator&lt; Type &gt;</td></tr>
<tr class="separator:aef4e1a401c270d709c1ebaf0a3ea4a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59cdd2df33a514becc638338dad14c89"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a59cdd2df33a514becc638338dad14c89">promise_type</a> = std::coroutine_traits&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a> &gt;::promise_type</td></tr>
<tr class="separator:a59cdd2df33a514becc638338dad14c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af86ce6ac51113a4d4659d9d132cb43f4"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#af86ce6ac51113a4d4659d9d132cb43f4">matrix</a> ()</td></tr>
<tr class="separator:af86ce6ac51113a4d4659d9d132cb43f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a987179d95de59f29c8012e40d702f8b3"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a987179d95de59f29c8012e40d702f8b3">matrix</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other)</td></tr>
<tr class="separator:a987179d95de59f29c8012e40d702f8b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d016fe624e37386359a1f703f69b346"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a5d016fe624e37386359a1f703f69b346">matrix</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other)</td></tr>
<tr class="separator:a5d016fe624e37386359a1f703f69b346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0a1b974ccf94cb14a3142a79601d05a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ad0a1b974ccf94cb14a3142a79601d05a">matrix</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:ad0a1b974ccf94cb14a3142a79601d05a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a260683965683891fbee2ff171feef9e4"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a260683965683891fbee2ff171feef9e4">operator=</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other)</td></tr>
<tr class="separator:a260683965683891fbee2ff171feef9e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af385f3d7eae80e362fc500bf9f20c48e"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#af385f3d7eae80e362fc500bf9f20c48e">operator=</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other)</td></tr>
<tr class="separator:af385f3d7eae80e362fc500bf9f20c48e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2787c3b279cbdcf3357b4abbb19fd57c"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a2787c3b279cbdcf3357b4abbb19fd57c">operator=</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:a2787c3b279cbdcf3357b4abbb19fd57c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a750c2a33f4a421f80af145d5eaa8bd91"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a750c2a33f4a421f80af145d5eaa8bd91">matrix</a> (const std::same_as&lt; Type &gt; auto &amp;...elements)</td></tr>
<tr class="separator:a750c2a33f4a421f80af145d5eaa8bd91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8d706f1fed5c4cfba4dfd3be19815c1"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ae8d706f1fed5c4cfba4dfd3be19815c1">matrix</a> (Type(&amp;elements)[<a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> *<a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>])</td></tr>
<tr class="separator:ae8d706f1fed5c4cfba4dfd3be19815c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8588dae124ae763ea9efc16f64dfcde"><td class="memTemplParams" colspan="2">template&lt;auto... Columns&gt; <br />
requires ((sizeof...(rows) == <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) &amp;&amp; (((Columns == <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) &amp;&amp; ... &amp;&amp; true)))</td></tr>
<tr class="memitem:ac8588dae124ae763ea9efc16f64dfcde"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ac8588dae124ae763ea9efc16f64dfcde">matrix</a> (const Type(&amp;...rows)[Columns])</td></tr>
<tr class="separator:ac8588dae124ae763ea9efc16f64dfcde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bf288d8f34b76bd678b98427f16fc56"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a0bf288d8f34b76bd678b98427f16fc56">matrix</a> (std::generator&lt; Type &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a0bf288d8f34b76bd678b98427f16fc56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d43f3ebeab72104b65bc49131d293fc"><td class="memItemLeft" align="right" valign="top">constexpr std::generator&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a3d43f3ebeab72104b65bc49131d293fc">clone</a> () const</td></tr>
<tr class="separator:a3d43f3ebeab72104b65bc49131d293fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45aa1fe0841174ac3cd300875f1bd622"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a45aa1fe0841174ac3cd300875f1bd622">explicit</a> (false) operator <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type</td></tr>
<tr class="separator:a45aa1fe0841174ac3cd300875f1bd622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea1bee894ce50acc260645ce92a21b8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#abea1bee894ce50acc260645ce92a21b8">!Copyable</a> () const</td></tr>
<tr class="separator:abea1bee894ce50acc260645ce92a21b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8faf72ffb586809e220a72311f55e047"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a8faf72ffb586809e220a72311f55e047">explicit</a> (false) operator Type() const</td></tr>
<tr class="separator:a8faf72ffb586809e220a72311f55e047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad250daf4791adc363fc447a133059118"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ad250daf4791adc363fc447a133059118">explicit</a> (false) operator std</td></tr>
<tr class="separator:ad250daf4791adc363fc447a133059118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb50b9f741eb141a526e0271ea98d6c2"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#acb50b9f741eb141a526e0271ea98d6c2">operator[]</a> (auto index) const</td></tr>
<tr class="separator:acb50b9f741eb141a526e0271ea98d6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287a5b1c9d1668eb83e0e198fe088ca0"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a287a5b1c9d1668eb83e0e198fe088ca0">operator()</a> (auto index) const</td></tr>
<tr class="separator:a287a5b1c9d1668eb83e0e198fe088ca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a267410d17977190209f548b57ec2976c"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a267410d17977190209f548b57ec2976c">operator()</a> (auto index) const</td></tr>
<tr class="separator:a267410d17977190209f548b57ec2976c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe6fae4cb1cfbfb7a46b135e835361f"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#affe6fae4cb1cfbfb7a46b135e835361f">operator()</a> (auto row, auto column) const</td></tr>
<tr class="separator:affe6fae4cb1cfbfb7a46b135e835361f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6248dacd7be4fb05540b8ab2956cb7b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a> () const</td></tr>
<tr class="separator:ac6248dacd7be4fb05540b8ab2956cb7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e3b25e4af7bfcc97c5bdc3446a4c01"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a35e3b25e4af7bfcc97c5bdc3446a4c01">end</a> () const</td></tr>
<tr class="separator:a35e3b25e4af7bfcc97c5bdc3446a4c01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9faeccaa0850f175969d390a0e863c80"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a9faeccaa0850f175969d390a0e863c80">matrix</a> ()=default</td></tr>
<tr class="separator:a9faeccaa0850f175969d390a0e863c80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ddc6dbe38e87fb2e146626602a40813"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a4ddc6dbe38e87fb2e146626602a40813">explicit</a> (false) <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>(Type element)</td></tr>
<tr class="separator:a4ddc6dbe38e87fb2e146626602a40813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa509b56340d93b1486f06fa61d16647e"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#aa509b56340d93b1486f06fa61d16647e">matrix</a> (Type(element)[1])</td></tr>
<tr class="separator:aa509b56340d93b1486f06fa61d16647e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dda20ca56c012564c398936ca47e775"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a8dda20ca56c012564c398936ca47e775">matrix</a> (Type(column)[<a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>])</td></tr>
<tr class="separator:a8dda20ca56c012564c398936ca47e775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad83aaad1b4ba18c5ce4244834952de57"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ad83aaad1b4ba18c5ce4244834952de57">matrix</a> (Type(row)[<a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>])</td></tr>
<tr class="separator:ad83aaad1b4ba18c5ce4244834952de57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acac83196782ff7b1616f772d6714d5be"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#acac83196782ff7b1616f772d6714d5be">matrix</a> (const auto &amp;...elements)</td></tr>
<tr class="separator:acac83196782ff7b1616f772d6714d5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a482c9f9e56645d54ab791a1f23d40470"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a482c9f9e56645d54ab791a1f23d40470">matrix</a> (const auto &amp;...elements)</td></tr>
<tr class="separator:a482c9f9e56645d54ab791a1f23d40470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a215381dc58da35149bae60ee3bb9210a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a215381dc58da35149bae60ee3bb9210a">matrix</a> (const std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; &amp;rows)</td></tr>
<tr class="separator:a215381dc58da35149bae60ee3bb9210a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8faf72ffb586809e220a72311f55e047"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a8faf72ffb586809e220a72311f55e047">explicit</a> (false) operator Type() const</td></tr>
<tr class="separator:a8faf72ffb586809e220a72311f55e047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9ccb51a6ae30b457f528898debf4cf5"><td class="memItemLeft" align="right" valign="top">constexpr const Type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ac9ccb51a6ae30b457f528898debf4cf5">operator[]</a> (auto index) const</td></tr>
<tr class="separator:ac9ccb51a6ae30b457f528898debf4cf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48534181438acd7b9655acdf51e9d766"><td class="memItemLeft" align="right" valign="top">constexpr const Type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a48534181438acd7b9655acdf51e9d766">operator[]</a> (auto index) const</td></tr>
<tr class="separator:a48534181438acd7b9655acdf51e9d766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5863b8a98707ffea0b9209e7b38bec01"><td class="memItemLeft" align="right" valign="top">constexpr const Type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a5863b8a98707ffea0b9209e7b38bec01">operator()</a> (auto index) const</td></tr>
<tr class="separator:a5863b8a98707ffea0b9209e7b38bec01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27105b3bf58c0859a8fc527d9d9e56d3"><td class="memItemLeft" align="right" valign="top">constexpr const Type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a27105b3bf58c0859a8fc527d9d9e56d3">operator()</a> (auto index) const</td></tr>
<tr class="separator:a27105b3bf58c0859a8fc527d9d9e56d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a274f6d5d7f01fea4439ac6588f3931a2"><td class="memItemLeft" align="right" valign="top">constexpr const Type &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a274f6d5d7f01fea4439ac6588f3931a2">operator()</a> (auto row, auto column) const</td></tr>
<tr class="separator:a274f6d5d7f01fea4439ac6588f3931a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeed3a86caa430b8b39d8d1997fd9189a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#aeed3a86caa430b8b39d8d1997fd9189a">operator==</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;other) const =default</td></tr>
<tr class="separator:aeed3a86caa430b8b39d8d1997fd9189a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0a995e0b4a122d37f327be9b065d8136"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a></td></tr>
<tr class="separator:a0a995e0b4a122d37f327be9b065d8136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab24112c8116a37f1feff0dbbe6ac9178"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a></td></tr>
<tr class="separator:ab24112c8116a37f1feff0dbbe6ac9178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a345b32af8d533e28e162b7757e23d2ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1matrix.xhtml#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a></td></tr>
<tr class="separator:a345b32af8d533e28e162b7757e23d2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24baa2c48b4606232abeab530ec019ce"><td class="memItemLeft" align="right" valign="top">Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a> [<a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>][<a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>] {}</td></tr>
<tr class="separator:a24baa2c48b4606232abeab530ec019ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt;<br />
struct fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;</div>
<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00113">113</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aef4e1a401c270d709c1ebaf0a3ea4a91" name="aef4e1a401c270d709c1ebaf0a3ea4a91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef4e1a401c270d709c1ebaf0a3ea4a91">&#9670;&nbsp;</a></span>generator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::generator =  std::generator&lt;Type&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00257">257</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a59cdd2df33a514becc638338dad14c89" name="a59cdd2df33a514becc638338dad14c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59cdd2df33a514becc638338dad14c89">&#9670;&nbsp;</a></span>promise_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::promise_type =  std::coroutine_traits&lt;<a class="el" href="structfcarouge_1_1matrix.xhtml#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a>&gt;::promise_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00258">258</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af86ce6ac51113a4d4659d9d132cb43f4" name="af86ce6ac51113a4d4659d9d132cb43f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af86ce6ac51113a4d4659d9d132cb43f4">&#9670;&nbsp;</a></span>matrix() <span class="overload">[1/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000025">Todo:</a></b></dt><dd>Report the ICE for generator construction in member declaration. Use constructor's initializer list for now. </dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00116">116</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  117</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[] -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  118</span>          <span class="keywordflow">for</span> (<span class="keyword">auto</span> k{<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> * <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>}; k &gt; 0; --k) { <span class="comment">// repeat(Type{}) | take(R*C)</span></div>
<div class="line"><span class="lineno">  119</span>            <span class="keyword">co_yield</span> {};</div>
<div class="line"><span class="lineno">  120</span>          }</div>
<div class="line"><span class="lineno">  121</span>        }()} {}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a0a995e0b4a122d37f327be9b065d8136"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">fcarouge::matrix::Row</a></div><div class="ttdeci">constexpr Row</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">linalg.hpp:183</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a345b32af8d533e28e162b7757e23d2ec"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">fcarouge::matrix::genie</a></div><div class="ttdeci">generator genie</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00268">linalg.hpp:268</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ab24112c8116a37f1feff0dbbe6ac9178"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">fcarouge::matrix::Column</a></div><div class="ttdeci">constexpr Column</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">linalg.hpp:183</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Column</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Row</a>.</p>

</div>
</div>
<a id="a987179d95de59f29c8012e40d702f8b3" name="a987179d95de59f29c8012e40d702f8b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a987179d95de59f29c8012e40d702f8b3">&#9670;&nbsp;</a></span>matrix() <span class="overload">[2/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00123">123</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  125</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{std::move(other.genie)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5d016fe624e37386359a1f703f69b346" name="a5d016fe624e37386359a1f703f69b346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d016fe624e37386359a1f703f69b346">&#9670;&nbsp;</a></span>matrix() <span class="overload">[3/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00127">127</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  129</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{other.clone()} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ad0a1b974ccf94cb14a3142a79601d05a" name="ad0a1b974ccf94cb14a3142a79601d05a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0a1b974ccf94cb14a3142a79601d05a">&#9670;&nbsp;</a></span>matrix() <span class="overload">[4/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a750c2a33f4a421f80af145d5eaa8bd91" name="a750c2a33f4a421f80af145d5eaa8bd91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a750c2a33f4a421f80af145d5eaa8bd91">&#9670;&nbsp;</a></span>matrix() <span class="overload">[5/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const std::same_as&lt; Type &gt; auto &amp;...&#160;</td>
          <td class="paramname"><em>elements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00150">150</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  152</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[](<span class="keyword">auto</span>... elements_copy) -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  153</span>          (<span class="keyword">co_yield</span> elements_copy, ...);</div>
<div class="line"><span class="lineno">  154</span>        }(elements...)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae8d706f1fed5c4cfba4dfd3be19815c1" name="ae8d706f1fed5c4cfba4dfd3be19815c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8d706f1fed5c4cfba4dfd3be19815c1">&#9670;&nbsp;</a></span>matrix() <span class="overload">[6/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">Type(&amp;)&#160;</td>
          <td class="paramname"><em>elements</em>[Row *Column]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00156">156</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  158</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{<a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(std::to_array(elements))} {}</div>
<div class="ttc" id="anamespacefcarouge_xhtml_a7304a0ee69961148ab8bc5cac7ec21de"><div class="ttname"><a href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">fcarouge::make_generator</a></div><div class="ttdeci">auto make_generator(auto elements) -&gt; std::generator&lt; typename decltype(elements)::value_type &gt; requires(std::ranges::range&lt; decltype(elements)&gt;)</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">linalg.hpp:67</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_ae8d706f1fed5c4cfba4dfd3be19815c1_cgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac8588dae124ae763ea9efc16f64dfcde" name="ac8588dae124ae763ea9efc16f64dfcde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8588dae124ae763ea9efc16f64dfcde">&#9670;&nbsp;</a></span>matrix() <span class="overload">[7/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<div class="memtemplate">
template&lt;auto... Columns&gt; <br />
requires ((sizeof...(rows) == <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) &amp;&amp; (((Columns == <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) &amp;&amp; ... &amp;&amp; true)))</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const &#160;</td>
          <td class="paramname"><em>Type</em>(&amp;...rows)[Columns]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00161">161</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  163</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[](<span class="keyword">auto</span> rows_copy) -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  164</span>          <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;&amp;row : rows_copy) {</div>
<div class="line"><span class="lineno">  165</span>            <span class="keyword">co_yield</span> std::ranges::elements_of(row);</div>
<div class="line"><span class="lineno">  166</span>          }</div>
<div class="line"><span class="lineno">  167</span>        }(std::to_array({std::to_array(rows)...}))} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0bf288d8f34b76bd678b98427f16fc56" name="a0bf288d8f34b76bd678b98427f16fc56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bf288d8f34b76bd678b98427f16fc56">&#9670;&nbsp;</a></span>matrix() <span class="overload">[8/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">std::generator&lt; Type &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  171</span>      : <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>{std::move(other)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="abea1bee894ce50acc260645ce92a21b8" name="abea1bee894ce50acc260645ce92a21b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abea1bee894ce50acc260645ce92a21b8">&#9670;&nbsp;</a></span>!Copyable()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::!Copyable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">183</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  183</span>                                                        {</div>
<div class="line"><span class="lineno">  184</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a3d43f3ebeab72104b65bc49131d293fc">clone</a>();</div>
<div class="line"><span class="lineno">  185</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a3d43f3ebeab72104b65bc49131d293fc"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a3d43f3ebeab72104b65bc49131d293fc">fcarouge::matrix::clone</a></div><div class="ttdeci">constexpr std::generator&lt; Type &gt; clone() const</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00173">linalg.hpp:173</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9faeccaa0850f175969d390a0e863c80" name="a9faeccaa0850f175969d390a0e863c80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9faeccaa0850f175969d390a0e863c80">&#9670;&nbsp;</a></span>matrix() <span class="overload">[9/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa509b56340d93b1486f06fa61d16647e" name="aa509b56340d93b1486f06fa61d16647e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa509b56340d93b1486f06fa61d16647e">&#9670;&nbsp;</a></span>matrix() <span class="overload">[10/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">Type(element)&#160;</td>
          <td class="paramname">[1]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00059">59</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   61</span>  {</div>
<div class="line"><span class="lineno">   62</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0] = element[0];</div>
<div class="line"><span class="lineno">   63</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a24baa2c48b4606232abeab530ec019ce"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">fcarouge::matrix::data</a></div><div class="ttdeci">Type data[Row][Column]</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">linalg.hpp:144</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a8dda20ca56c012564c398936ca47e775" name="a8dda20ca56c012564c398936ca47e775"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dda20ca56c012564c398936ca47e775">&#9670;&nbsp;</a></span>matrix() <span class="overload">[11/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">Type(column)&#160;</td>
          <td class="paramname">[Row]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00065">65</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   67</span>  {</div>
<div class="line"><span class="lineno">   68</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0}; i &lt; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>; ++i) {</div>
<div class="line"><span class="lineno">   69</span>      <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][0] = column[i];</div>
<div class="line"><span class="lineno">   70</span>    }</div>
<div class="line"><span class="lineno">   71</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Row</a>.</p>

</div>
</div>
<a id="ad83aaad1b4ba18c5ce4244834952de57" name="ad83aaad1b4ba18c5ce4244834952de57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad83aaad1b4ba18c5ce4244834952de57">&#9670;&nbsp;</a></span>matrix() <span class="overload">[12/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">Type(row)&#160;</td>
          <td class="paramname">[Column]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00073">73</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   75</span>  {</div>
<div class="line"><span class="lineno">   76</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0}; j &lt; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>; ++j) {</div>
<div class="line"><span class="lineno">   77</span>      <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j] = row[j];</div>
<div class="line"><span class="lineno">   78</span>    }</div>
<div class="line"><span class="lineno">   79</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Column</a>, and <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="acac83196782ff7b1616f772d6714d5be" name="acac83196782ff7b1616f772d6714d5be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acac83196782ff7b1616f772d6714d5be">&#9670;&nbsp;</a></span>matrix() <span class="overload">[13/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>elements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00081">81</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   83</span>  {</div>
<div class="line"><span class="lineno">   84</span>    <span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0};</div>
<div class="line"><span class="lineno">   85</span>    ([&amp;] { <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i++][0] = elements; }(), ...);</div>
<div class="line"><span class="lineno">   86</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Row</a>.</p>

</div>
</div>
<a id="a482c9f9e56645d54ab791a1f23d40470" name="a482c9f9e56645d54ab791a1f23d40470"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a482c9f9e56645d54ab791a1f23d40470">&#9670;&nbsp;</a></span>matrix() <span class="overload">[14/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;...&#160;</td>
          <td class="paramname"><em>elements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00088">88</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   90</span>  {</div>
<div class="line"><span class="lineno">   91</span>    <span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0};</div>
<div class="line"><span class="lineno">   92</span>    ([&amp;] { <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j++] = elements; }(), ...);</div>
<div class="line"><span class="lineno">   93</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Column</a>, and <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a215381dc58da35149bae60ee3bb9210a" name="a215381dc58da35149bae60ee3bb9210a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a215381dc58da35149bae60ee3bb9210a">&#9670;&nbsp;</a></span>matrix() <span class="overload">[15/15]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>rows</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00095">95</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   96</span>                                                                  {</div>
<div class="line"><span class="lineno">   97</span>    <span class="comment">// static_assert</span></div>
<div class="line"><span class="lineno">   98</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>) i{0}; <span class="keyword">auto</span> &amp;&amp;elements : rows) {</div>
<div class="line"><span class="lineno">   99</span>      <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) j{0}; <span class="keyword">auto</span> &amp;&amp;element : elements) {</div>
<div class="line"><span class="lineno">  100</span>        <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j++] = element;</div>
<div class="line"><span class="lineno">  101</span>      }</div>
<div class="line"><span class="lineno">  102</span>      ++i;</div>
<div class="line"><span class="lineno">  103</span>    }</div>
<div class="line"><span class="lineno">  104</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Column</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Row</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac6248dacd7be4fb05540b8ab2956cb7b" name="ac6248dacd7be4fb05540b8ab2956cb7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6248dacd7be4fb05540b8ab2956cb7b">&#9670;&nbsp;</a></span>begin()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00261">261</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  261</span>{ <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>.begin(); }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00339">fcarouge::operator*()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00364">fcarouge::operator+()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_ac6248dacd7be4fb05540b8ab2956cb7b_icgraph.svg" width="343" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3d43f3ebeab72104b65bc49131d293fc" name="a3d43f3ebeab72104b65bc49131d293fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d43f3ebeab72104b65bc49131d293fc">&#9670;&nbsp;</a></span>clone()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::generator&lt; Type &gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00173">173</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  173</span>                                                                  {</div>
<div class="line"><span class="lineno">  174</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  175</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  176</span> </div>
<div class="line"><span class="lineno">  177</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  178</span> </div>
<div class="line"><span class="lineno">  179</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  180</span>  }</div>
<div class="ttc" id="a_l_i_c_e_n_s_e_8txt_xhtml_aaff024f9fd06471d3fb778f865b5b424"><div class="ttname"><a href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">copy</a></div><div class="ttdeci">This is free and unencumbered software released into the public domain Anyone is free to copy</div><div class="ttdef"><b>Definition:</b> <a href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">LICENSE.txt:3</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00339">fcarouge::operator*()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00133">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator=()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a3d43f3ebeab72104b65bc49131d293fc_cgraph.svg" width="380" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a3d43f3ebeab72104b65bc49131d293fc_icgraph.svg" width="384" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a35e3b25e4af7bfcc97c5bdc3446a4c01" name="a35e3b25e4af7bfcc97c5bdc3446a4c01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35e3b25e4af7bfcc97c5bdc3446a4c01">&#9670;&nbsp;</a></span>end()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00262">262</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  262</span>{ <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>.end(); }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4ddc6dbe38e87fb2e146626602a40813" name="a4ddc6dbe38e87fb2e146626602a40813"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ddc6dbe38e87fb2e146626602a40813">&#9670;&nbsp;</a></span>explicit() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   55</span>  {</div>
<div class="line"><span class="lineno">   56</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0] = element;</div>
<div class="line"><span class="lineno">   57</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a45aa1fe0841174ac3cd300875f1bd622" name="a45aa1fe0841174ac3cd300875f1bd622"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45aa1fe0841174ac3cd300875f1bd622">&#9670;&nbsp;</a></span>explicit() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad250daf4791adc363fc447a133059118" name="ad250daf4791adc363fc447a133059118"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad250daf4791adc363fc447a133059118">&#9670;&nbsp;</a></span>explicit() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00197">197</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  198</span>                                      {</div>
<div class="line"><span class="lineno">  199</span>    <span class="keyword">co_yield</span> std::ranges::elements_of(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>);</div>
<div class="line"><span class="lineno">  200</span>  }</div>
<div class="line"><span class="lineno">  201</span> </div>
<div class="line"><span class="lineno">  202</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#acb50b9f741eb141a526e0271ea98d6c2">operator[]</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><span class="lineno">  203</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a> &gt; 1 &amp;&amp; <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><span class="lineno">  204</span>  {</div>
<div class="line"><span class="lineno">  205</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  208</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  209</span> </div>
<div class="line"><span class="lineno">  210</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  211</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_acb50b9f741eb141a526e0271ea98d6c2"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#acb50b9f741eb141a526e0271ea98d6c2">fcarouge::matrix::operator[]</a></div><div class="ttdeci">constexpr Type operator[](auto index) const</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00213">linalg.hpp:213</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8faf72ffb586809e220a72311f55e047" name="a8faf72ffb586809e220a72311f55e047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8faf72ffb586809e220a72311f55e047">&#9670;&nbsp;</a></span>explicit() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00187">187</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  189</span>  {</div>
<div class="line"><span class="lineno">  190</span>    Type result{*<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>.begin()};</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(result);</div>
<div class="line"><span class="lineno">  193</span> </div>
<div class="line"><span class="lineno">  194</span>    <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  195</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a8faf72ffb586809e220a72311f55e047_cgraph.svg" width="388" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a8faf72ffb586809e220a72311f55e047" name="a8faf72ffb586809e220a72311f55e047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8faf72ffb586809e220a72311f55e047">&#9670;&nbsp;</a></span>explicit() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00106">106</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  108</span>  {</div>
<div class="line"><span class="lineno">  109</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0];</div>
<div class="line"><span class="lineno">  110</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a287a5b1c9d1668eb83e0e198fe088ca0" name="a287a5b1c9d1668eb83e0e198fe088ca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a287a5b1c9d1668eb83e0e198fe088ca0">&#9670;&nbsp;</a></span>operator()() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00224">224</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  226</span>  {</div>
<div class="line"><span class="lineno">  227</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  228</span> </div>
<div class="line"><span class="lineno">  229</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  230</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  231</span> </div>
<div class="line"><span class="lineno">  232</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  233</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a287a5b1c9d1668eb83e0e198fe088ca0_cgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a267410d17977190209f548b57ec2976c" name="a267410d17977190209f548b57ec2976c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a267410d17977190209f548b57ec2976c">&#9670;&nbsp;</a></span>operator()() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00235">235</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  237</span>  {</div>
<div class="line"><span class="lineno">  238</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  239</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  240</span> </div>
<div class="line"><span class="lineno">  241</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  242</span> </div>
<div class="line"><span class="lineno">  243</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  244</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a267410d17977190209f548b57ec2976c_cgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5863b8a98707ffea0b9209e7b38bec01" name="a5863b8a98707ffea0b9209e7b38bec01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5863b8a98707ffea0b9209e7b38bec01">&#9670;&nbsp;</a></span>operator()() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const Type &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00124">124</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  126</span>  {</div>
<div class="line"><span class="lineno">  127</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[index][0];</div>
<div class="line"><span class="lineno">  128</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a27105b3bf58c0859a8fc527d9d9e56d3" name="a27105b3bf58c0859a8fc527d9d9e56d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27105b3bf58c0859a8fc527d9d9e56d3">&#9670;&nbsp;</a></span>operator()() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const Type &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00130">130</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  132</span>  {</div>
<div class="line"><span class="lineno">  133</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][index];</div>
<div class="line"><span class="lineno">  134</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="affe6fae4cb1cfbfb7a46b135e835361f" name="affe6fae4cb1cfbfb7a46b135e835361f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe6fae4cb1cfbfb7a46b135e835361f">&#9670;&nbsp;</a></span>operator()() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>column</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000028">Todo:</a></b></dt><dd>Don't evaluate unless needed. How to do? Some kind of recursive genie recomposer? </dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00248">248</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  248</span>                                                                              {</div>
<div class="line"><span class="lineno">  249</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  250</span> </div>
<div class="line"><span class="lineno">  251</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  252</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  253</span> </div>
<div class="line"><span class="lineno">  254</span>    <span class="keywordflow">return</span> elements[row * <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> + column];</div>
<div class="line"><span class="lineno">  255</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_affe6fae4cb1cfbfb7a46b135e835361f_cgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a274f6d5d7f01fea4439ac6588f3931a2" name="a274f6d5d7f01fea4439ac6588f3931a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a274f6d5d7f01fea4439ac6588f3931a2">&#9670;&nbsp;</a></span>operator()() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const Type &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>column</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00136">136</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  136</span>                                                                       {</div>
<div class="line"><span class="lineno">  137</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[row][column];</div>
<div class="line"><span class="lineno">  138</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a260683965683891fbee2ff171feef9e4" name="a260683965683891fbee2ff171feef9e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a260683965683891fbee2ff171feef9e4">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00133">133</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  135</span>  {</div>
<div class="line"><span class="lineno">  136</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = other.clone();</div>
<div class="line"><span class="lineno">  137</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00173">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::clone()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a260683965683891fbee2ff171feef9e4_cgraph.svg" width="603" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af385f3d7eae80e362fc500bf9f20c48e" name="af385f3d7eae80e362fc500bf9f20c48e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af385f3d7eae80e362fc500bf9f20c48e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00139">139</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  141</span>  {</div>
<div class="line"><span class="lineno">  142</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = std::move(other.genie);</div>
<div class="line"><span class="lineno">  143</span>    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><span class="lineno">  144</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a2787c3b279cbdcf3357b4abbb19fd57c" name="a2787c3b279cbdcf3357b4abbb19fd57c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2787c3b279cbdcf3357b4abbb19fd57c">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aeed3a86caa430b8b39d8d1997fd9189a" name="aeed3a86caa430b8b39d8d1997fd9189a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeed3a86caa430b8b39d8d1997fd9189a">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="acb50b9f741eb141a526e0271ea98d6c2" name="acb50b9f741eb141a526e0271ea98d6c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb50b9f741eb141a526e0271ea98d6c2">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00213">213</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  215</span>  {</div>
<div class="line"><span class="lineno">  216</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  217</span> </div>
<div class="line"><span class="lineno">  218</span>    <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  219</span>    <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a7304a0ee69961148ab8bc5cac7ec21de">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  220</span> </div>
<div class="line"><span class="lineno">  221</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  222</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_acb50b9f741eb141a526e0271ea98d6c2_cgraph.svg" width="404" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac9ccb51a6ae30b457f528898debf4cf5" name="ac9ccb51a6ae30b457f528898debf4cf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9ccb51a6ae30b457f528898debf4cf5">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const Type &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00112">112</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  114</span>  {</div>
<div class="line"><span class="lineno">  115</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[index][0];</div>
<div class="line"><span class="lineno">  116</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a48534181438acd7b9655acdf51e9d766" name="a48534181438acd7b9655acdf51e9d766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48534181438acd7b9655acdf51e9d766">&#9670;&nbsp;</a></span>operator[]() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const Type &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">auto&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00118">118</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  120</span>  {</div>
<div class="line"><span class="lineno">  121</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][index];</div>
<div class="line"><span class="lineno">  122</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab24112c8116a37f1feff0dbbe6ac9178" name="ab24112c8116a37f1feff0dbbe6ac9178"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24112c8116a37f1feff0dbbe6ac9178">&#9670;&nbsp;</a></span>Column</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, Column, Copyable &gt;::Column</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">183</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00116">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>.</p>

</div>
</div>
<a id="a24baa2c48b4606232abeab530ec019ce" name="a24baa2c48b4606232abeab530ec019ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24baa2c48b4606232abeab530ec019ce">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::data[<a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>][<a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>] {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00144">144</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00053">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::explicit()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00059">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00124">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator()()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00201">fcarouge::operator*()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00254">fcarouge::operator+()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00281">fcarouge::operator-()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00301">fcarouge::operator/()</a>, <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00112">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator[]()</a>, and <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00314">fcarouge::transpose()</a>.</p>

</div>
</div>
<a id="a345b32af8d533e28e162b7757e23d2ec" name="a345b32af8d533e28e162b7757e23d2ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a345b32af8d533e28e162b7757e23d2ec">&#9670;&nbsp;</a></span>genie</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a> <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="structfcarouge_1_1matrix.xhtml#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::genie</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000029">Todo:</a></b></dt><dd><p class="startdd">Remove optional wrapper for the <code>empty</code> API support of the <code>std::generator</code> support and simplify the implementation. </p>
<p class="enddd">Clarify requirements for the mutable nature of the generator? Remove. </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00268">268</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00324">fcarouge::operator==()</a>.</p>

</div>
</div>
<a id="a0a995e0b4a122d37f327be9b065d8136" name="a0a995e0b4a122d37f327be9b065d8136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a995e0b4a122d37f327be9b065d8136">&#9670;&nbsp;</a></span>Row</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, <a class="el" href="structfcarouge_1_1matrix.xhtml#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::Row</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00183">183</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00116">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/github/workspace/linalg/lazy/fcarouge/<a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a></li>
<li>/github/workspace/linalg/naive/fcarouge/<a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a></li>
    <li class="footer">Generated on Mon Jun 26 2023 03:25:16 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
