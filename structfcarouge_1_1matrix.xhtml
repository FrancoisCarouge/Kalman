<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::matrix&lt; Type, Row, Column, Copyable &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structfcarouge_1_1matrix.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structfcarouge_1_1matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Coroutine lazy matrix.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aef4e1a401c270d709c1ebaf0a3ea4a91" id="r_aef4e1a401c270d709c1ebaf0a3ea4a91"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a> = std::generator&lt;Type&gt;</td></tr>
<tr class="separator:aef4e1a401c270d709c1ebaf0a3ea4a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59cdd2df33a514becc638338dad14c89" id="r_a59cdd2df33a514becc638338dad14c89"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a59cdd2df33a514becc638338dad14c89">promise_type</a> = std::coroutine_traits&lt;<a class="el" href="#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a>&gt;::promise_type</td></tr>
<tr class="separator:a59cdd2df33a514becc638338dad14c89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af86ce6ac51113a4d4659d9d132cb43f4" id="r_af86ce6ac51113a4d4659d9d132cb43f4"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af86ce6ac51113a4d4659d9d132cb43f4">matrix</a> ()</td></tr>
<tr class="separator:af86ce6ac51113a4d4659d9d132cb43f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5662e0df22e0adaa13c6638a429df6b" id="r_ad5662e0df22e0adaa13c6638a429df6b"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad5662e0df22e0adaa13c6638a429df6b">matrix</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;other)</td></tr>
<tr class="separator:ad5662e0df22e0adaa13c6638a429df6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf48cfde31b36aed22819ec63b357c96" id="r_aaf48cfde31b36aed22819ec63b357c96"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf48cfde31b36aed22819ec63b357c96">matrix</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;other)</td></tr>
<tr class="separator:aaf48cfde31b36aed22819ec63b357c96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93634d9b719e38f5737ee6df3d90e2a4" id="r_a93634d9b719e38f5737ee6df3d90e2a4"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a93634d9b719e38f5737ee6df3d90e2a4">operator=</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;other)</td></tr>
<tr class="separator:a93634d9b719e38f5737ee6df3d90e2a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef867f6ed87d203b1805512580ce95e0" id="r_aef867f6ed87d203b1805512580ce95e0"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef867f6ed87d203b1805512580ce95e0">operator=</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;other)</td></tr>
<tr class="separator:aef867f6ed87d203b1805512580ce95e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8839e855b616e74c73a88c4ce4a396ef" id="r_a8839e855b616e74c73a88c4ce4a396ef"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8839e855b616e74c73a88c4ce4a396ef">matrix</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a8839e855b616e74c73a88c4ce4a396ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8445d8e616e57e252b2cfbc267739123" id="r_a8445d8e616e57e252b2cfbc267739123"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8445d8e616e57e252b2cfbc267739123">matrix</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a8445d8e616e57e252b2cfbc267739123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a807760a155f249bd3ba3529b21363cfc" id="r_a807760a155f249bd3ba3529b21363cfc"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a807760a155f249bd3ba3529b21363cfc">operator=</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a807760a155f249bd3ba3529b21363cfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3ac05d0aeb1057133c6432fb10e59ee" id="r_ab3ac05d0aeb1057133c6432fb10e59ee"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab3ac05d0aeb1057133c6432fb10e59ee">operator=</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;&amp;other)</td></tr>
<tr class="separator:ab3ac05d0aeb1057133c6432fb10e59ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a750c2a33f4a421f80af145d5eaa8bd91" id="r_a750c2a33f4a421f80af145d5eaa8bd91"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a750c2a33f4a421f80af145d5eaa8bd91">matrix</a> (const std::same_as&lt; Type &gt; auto &amp;...elements)</td></tr>
<tr class="separator:a750c2a33f4a421f80af145d5eaa8bd91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8d706f1fed5c4cfba4dfd3be19815c1" id="r_ae8d706f1fed5c4cfba4dfd3be19815c1"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8d706f1fed5c4cfba4dfd3be19815c1">matrix</a> (Type(&amp;elements)[<a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a> *<a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>])</td></tr>
<tr class="separator:ae8d706f1fed5c4cfba4dfd3be19815c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bcb22d925538d8f2a9895364acf765c" id="r_a9bcb22d925538d8f2a9895364acf765c"><td class="memTemplParams" colspan="2">template&lt;typename... Types, auto... Columns&gt; <br />
requires (std::conjunction_v&lt;std::is_same&lt;Type, Types&gt;...&gt; &amp;&amp; ((Columns == <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) &amp;&amp; ... &amp;&amp; true))</td></tr>
<tr class="memitem:a9bcb22d925538d8f2a9895364acf765c"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a9bcb22d925538d8f2a9895364acf765c">matrix</a> (const Types(&amp;...rows)[Columns])</td></tr>
<tr class="separator:a9bcb22d925538d8f2a9895364acf765c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae49a5b34d19651a33fece603e19ab5d6" id="r_ae49a5b34d19651a33fece603e19ab5d6"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae49a5b34d19651a33fece603e19ab5d6">matrix</a> (std::generator&lt; Type &gt; other)</td></tr>
<tr class="separator:ae49a5b34d19651a33fece603e19ab5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aadf69ca0a98d1b54977289924aa7f2" id="r_a0aadf69ca0a98d1b54977289924aa7f2"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0aadf69ca0a98d1b54977289924aa7f2">matrix</a> (std::invocable auto other)</td></tr>
<tr class="separator:a0aadf69ca0a98d1b54977289924aa7f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d43f3ebeab72104b65bc49131d293fc" id="r_a3d43f3ebeab72104b65bc49131d293fc"><td class="memItemLeft" align="right" valign="top">constexpr std::generator&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d43f3ebeab72104b65bc49131d293fc">clone</a> () const</td></tr>
<tr class="separator:a3d43f3ebeab72104b65bc49131d293fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45aa1fe0841174ac3cd300875f1bd622" id="r_a45aa1fe0841174ac3cd300875f1bd622"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a45aa1fe0841174ac3cd300875f1bd622">explicit</a> (false) operator <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type</td></tr>
<tr class="separator:a45aa1fe0841174ac3cd300875f1bd622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea1bee894ce50acc260645ce92a21b8" id="r_abea1bee894ce50acc260645ce92a21b8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abea1bee894ce50acc260645ce92a21b8">!Copyable</a> () const</td></tr>
<tr class="separator:abea1bee894ce50acc260645ce92a21b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8faf72ffb586809e220a72311f55e047" id="r_a8faf72ffb586809e220a72311f55e047"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8faf72ffb586809e220a72311f55e047">explicit</a> (false) operator Type() const</td></tr>
<tr class="separator:a8faf72ffb586809e220a72311f55e047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21b64d2811192433795b124e140bbca2" id="r_a21b64d2811192433795b124e140bbca2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21b64d2811192433795b124e140bbca2">explicit</a> (false) operator std</td></tr>
<tr class="separator:a21b64d2811192433795b124e140bbca2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb50b9f741eb141a526e0271ea98d6c2" id="r_acb50b9f741eb141a526e0271ea98d6c2"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb50b9f741eb141a526e0271ea98d6c2">operator[]</a> (auto index) const</td></tr>
<tr class="separator:acb50b9f741eb141a526e0271ea98d6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7e9a43560b35148793464e6db205ffd" id="r_aa7e9a43560b35148793464e6db205ffd"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa7e9a43560b35148793464e6db205ffd">operator()</a> (auto index) const</td></tr>
<tr class="separator:aa7e9a43560b35148793464e6db205ffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a267410d17977190209f548b57ec2976c" id="r_a267410d17977190209f548b57ec2976c"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a267410d17977190209f548b57ec2976c">operator()</a> (auto index) const</td></tr>
<tr class="separator:a267410d17977190209f548b57ec2976c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe6fae4cb1cfbfb7a46b135e835361f" id="r_affe6fae4cb1cfbfb7a46b135e835361f"><td class="memItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#affe6fae4cb1cfbfb7a46b135e835361f">operator()</a> (auto row, auto column) const</td></tr>
<tr class="separator:affe6fae4cb1cfbfb7a46b135e835361f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6248dacd7be4fb05540b8ab2956cb7b" id="r_ac6248dacd7be4fb05540b8ab2956cb7b"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a> () const</td></tr>
<tr class="separator:ac6248dacd7be4fb05540b8ab2956cb7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e3b25e4af7bfcc97c5bdc3446a4c01" id="r_a35e3b25e4af7bfcc97c5bdc3446a4c01"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35e3b25e4af7bfcc97c5bdc3446a4c01">end</a> () const</td></tr>
<tr class="separator:a35e3b25e4af7bfcc97c5bdc3446a4c01"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0a995e0b4a122d37f327be9b065d8136" id="r_a0a995e0b4a122d37f327be9b065d8136"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a></td></tr>
<tr class="separator:a0a995e0b4a122d37f327be9b065d8136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab24112c8116a37f1feff0dbbe6ac9178" id="r_ab24112c8116a37f1feff0dbbe6ac9178"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a></td></tr>
<tr class="separator:ab24112c8116a37f1feff0dbbe6ac9178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a345b32af8d533e28e162b7757e23d2ec" id="r_a345b32af8d533e28e162b7757e23d2ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a></td></tr>
<tr class="separator:a345b32af8d533e28e162b7757e23d2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt;<br />
struct fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;</div><p>Coroutine lazy matrix. </p>
<p>The matrix is a generator. A coroutine range. Lazily generated elements and computed operations. Commonalities with ranges.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Type</td><td>The matrix element type. </td></tr>
    <tr><td class="paramname">Row</td><td>The number of rows of the matrix. </td></tr>
    <tr><td class="paramname">Column</td><td>The number of columns of the matrix. </td></tr>
    <tr><td class="paramname">Copyable</td><td>Whether the instance is fully lazy or deeply clones itself on copies. Useful for named values. May not be commonly used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Lifetime management with coroutine is tricky. The generators cannot use the lambda captures. The parameters of the lambda can however be copied to guarentee their lifetime for the usage of the generator. This technique is useful for initialization of the generator. </dd>
<dd>
A design decision for the composed generator to be mutable, traded off for const member function API. Similar to the mutable mutex member practice. </dd>
<dd>
Why genie? Because genies generate on demand.</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000031">Todo</a></b></dt><dd><p class="startdd">Explore and compare performance. </p>
<p class="interdd">Explore optimization of heap allocations? </p>
<p class="interdd">Explore constexpr support? </p>
<p class="interdd">Explore verification of lazy evaluation? </p>
<p class="enddd">Remove unecessary empty paramaters when MSVC supports lambda without them. </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00115">115</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aef4e1a401c270d709c1ebaf0a3ea4a91" name="aef4e1a401c270d709c1ebaf0a3ea4a91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef4e1a401c270d709c1ebaf0a3ea4a91">&#9670;&#160;</a></span>generator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::generator = std::generator&lt;Type&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00269">269</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a59cdd2df33a514becc638338dad14c89" name="a59cdd2df33a514becc638338dad14c89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59cdd2df33a514becc638338dad14c89">&#9670;&#160;</a></span>promise_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::promise_type = std::coroutine_traits&lt;<a class="el" href="#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a>&gt;::promise_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00270">270</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af86ce6ac51113a4d4659d9d132cb43f4" name="af86ce6ac51113a4d4659d9d132cb43f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af86ce6ac51113a4d4659d9d132cb43f4">&#9670;&#160;</a></span>matrix() <span class="overload">[1/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000035">Todo</a></b></dt><dd>Report the ICE for generator construction in member declaration. Use constructor's initializer list for now. </dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00118">118</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  119</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[]() -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  120</span>          <span class="keywordflow">for</span> (<span class="keyword">auto</span> k{<a class="code hl_variable" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a> * <a class="code hl_variable" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>}; k &gt; 0; --k) { <span class="comment">// repeat(Type{}) | take(R*C)</span></div>
<div class="line"><span class="lineno">  121</span>            <span class="keyword">co_yield</span> {};</div>
<div class="line"><span class="lineno">  122</span>          }</div>
<div class="line"><span class="lineno">  123</span>        }()} {}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a0a995e0b4a122d37f327be9b065d8136"><div class="ttname"><a href="#a0a995e0b4a122d37f327be9b065d8136">fcarouge::matrix::Row</a></div><div class="ttdeci">constexpr Row</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">linalg.hpp:196</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a345b32af8d533e28e162b7757e23d2ec"><div class="ttname"><a href="#a345b32af8d533e28e162b7757e23d2ec">fcarouge::matrix::genie</a></div><div class="ttdeci">generator genie</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00276">linalg.hpp:276</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ab24112c8116a37f1feff0dbbe6ac9178"><div class="ttname"><a href="#ab24112c8116a37f1feff0dbbe6ac9178">fcarouge::matrix::Column</a></div><div class="ttdeci">constexpr Column</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">linalg.hpp:196</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Column</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::Row</a>.</p>

</div>
</div>
<a id="ad5662e0df22e0adaa13c6638a429df6b" name="ad5662e0df22e0adaa13c6638a429df6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5662e0df22e0adaa13c6638a429df6b">&#9670;&#160;</a></span>matrix() <span class="overload">[2/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00125">125</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  126</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{std::move(other.genie)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="aaf48cfde31b36aed22819ec63b357c96" name="aaf48cfde31b36aed22819ec63b357c96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf48cfde31b36aed22819ec63b357c96">&#9670;&#160;</a></span>matrix() <span class="overload">[3/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00128">128</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  129</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{other.clone()} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8839e855b616e74c73a88c4ce4a396ef" name="a8839e855b616e74c73a88c4ce4a396ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8839e855b616e74c73a88c4ce4a396ef">&#9670;&#160;</a></span>matrix() <span class="overload">[4/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00143">143</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  144</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{std::move(other.genie)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a8445d8e616e57e252b2cfbc267739123" name="a8445d8e616e57e252b2cfbc267739123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8445d8e616e57e252b2cfbc267739123">&#9670;&#160;</a></span>matrix() <span class="overload">[5/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00146">146</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  147</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{other.clone()} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a750c2a33f4a421f80af145d5eaa8bd91" name="a750c2a33f4a421f80af145d5eaa8bd91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a750c2a33f4a421f80af145d5eaa8bd91">&#9670;&#160;</a></span>matrix() <span class="overload">[6/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const std::same_as&lt; Type &gt; auto &amp;...</td>          <td class="paramname"><span class="paramname"><em>elements</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00159">159</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  161</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[](<span class="keyword">auto</span>... elements_copy) -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  162</span>          (<span class="keyword">co_yield</span> elements_copy, ...);</div>
<div class="line"><span class="lineno">  163</span>        }(elements...)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ae8d706f1fed5c4cfba4dfd3be19815c1" name="ae8d706f1fed5c4cfba4dfd3be19815c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8d706f1fed5c4cfba4dfd3be19815c1">&#9670;&#160;</a></span>matrix() <span class="overload">[7/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">Type(&amp;)</td>          <td class="paramname"><span class="paramname"><em>elements</em></span>[Row *Column]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00165">165</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  167</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{<a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(std::to_array(elements))} {}</div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae167596e2c65ae7024cbc80f5b5d1974"><div class="ttname"><a href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">fcarouge::make_generator</a></div><div class="ttdeci">constexpr std::generator&lt; typename Range::value_type &gt; make_generator(Range elements)</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">linalg.hpp:67</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-1" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_ae8d706f1fed5c4cfba4dfd3be19815c1_cgraph.svg" width="383" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a9bcb22d925538d8f2a9895364acf765c" name="a9bcb22d925538d8f2a9895364acf765c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bcb22d925538d8f2a9895364acf765c">&#9670;&#160;</a></span>matrix() <span class="overload">[8/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<div class="memtemplate">
template&lt;typename... Types, auto... Columns&gt; <br />
requires (std::conjunction_v&lt;std::is_same&lt;Type, Types&gt;...&gt; &amp;&amp; ((Columns == <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>) &amp;&amp; ... &amp;&amp; true))</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const </td>          <td class="paramname"><span class="paramname"><em>Types</em></span>(&amp;...rows)[Columns]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  173</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{[](<span class="keyword">auto</span> rows_copy) -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">  174</span>          <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;&amp;row : rows_copy) {</div>
<div class="line"><span class="lineno">  175</span>            <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;&amp;element : row) { <span class="comment">// std::ranges::elements_of</span></div>
<div class="line"><span class="lineno">  176</span>              <span class="keyword">co_yield</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element</a>;</div>
<div class="line"><span class="lineno">  177</span>            }</div>
<div class="line"><span class="lineno">  178</span>          }</div>
<div class="line"><span class="lineno">  179</span>        }(std::to_array({std::to_array(rows)...}))} {}</div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a0a85d05cb03c2d137111049dcff27575"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">fcarouge::indexed::element</a></div><div class="ttdeci">product&lt; std::tuple_element_t&lt; RowIndex, typename Matrix::row_indexes &gt;, std::tuple_element_t&lt; ColumnIndex, typename Matrix::column_indexes &gt; &gt; element</div><div class="ttdoc">The type of the element at the given matrix indexes position.</div><div class="ttdef"><b>Definition</b> <a href="indexed_8hpp_source.xhtml#l00064">indexed.hpp:64</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae49a5b34d19651a33fece603e19ab5d6" name="ae49a5b34d19651a33fece603e19ab5d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae49a5b34d19651a33fece603e19ab5d6">&#9670;&#160;</a></span>matrix() <span class="overload">[9/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">std::generator&lt; Type &gt;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00181">181</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  182</span>      : <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{std::move(other)} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a0aadf69ca0a98d1b54977289924aa7f2" name="a0aadf69ca0a98d1b54977289924aa7f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0aadf69ca0a98d1b54977289924aa7f2">&#9670;&#160;</a></span>matrix() <span class="overload">[10/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">std::invocable auto</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00184">184</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  184</span>: <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>{other()} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="abea1bee894ce50acc260645ce92a21b8" name="abea1bee894ce50acc260645ce92a21b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abea1bee894ce50acc260645ce92a21b8">&#9670;&#160;</a></span>!Copyable()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::!Copyable </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">196</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  196</span>                                                        {</div>
<div class="line"><span class="lineno">  197</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="#a3d43f3ebeab72104b65bc49131d293fc">clone</a>();</div>
<div class="line"><span class="lineno">  198</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a3d43f3ebeab72104b65bc49131d293fc"><div class="ttname"><a href="#a3d43f3ebeab72104b65bc49131d293fc">fcarouge::matrix::clone</a></div><div class="ttdeci">constexpr std::generator&lt; Type &gt; clone() const</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00186">linalg.hpp:186</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac6248dacd7be4fb05540b8ab2956cb7b" name="ac6248dacd7be4fb05540b8ab2956cb7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6248dacd7be4fb05540b8ab2956cb7b">&#9670;&#160;</a></span>begin()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::begin </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00273">273</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  273</span>{ <span class="keywordflow">return</span> <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>.begin(); }</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00395">fcarouge::operator*()</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00378">fcarouge::operator*()</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00410">fcarouge::operator+()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00403">fcarouge::operator+()</a>.</p>
<div id="dynsection-2" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_ac6248dacd7be4fb05540b8ab2956cb7b_icgraph.svg" width="340" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3d43f3ebeab72104b65bc49131d293fc" name="a3d43f3ebeab72104b65bc49131d293fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d43f3ebeab72104b65bc49131d293fc">&#9670;&#160;</a></span>clone()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::generator&lt; Type &gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::clone </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00186">186</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  186</span>                                                                  {</div>
<div class="line"><span class="lineno">  187</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  188</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  189</span> </div>
<div class="line"><span class="lineno">  190</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  191</span> </div>
<div class="line"><span class="lineno">  192</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  193</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00378">fcarouge::operator*()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00138">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator=()</a>.</p>
<div id="dynsection-3" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a3d43f3ebeab72104b65bc49131d293fc_cgraph.svg" width="379" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-4" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a3d43f3ebeab72104b65bc49131d293fc_icgraph.svg" width="382" height="86"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a35e3b25e4af7bfcc97c5bdc3446a4c01" name="a35e3b25e4af7bfcc97c5bdc3446a4c01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35e3b25e4af7bfcc97c5bdc3446a4c01">&#9670;&#160;</a></span>end()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::end </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00274">274</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  274</span>{ <span class="keywordflow">return</span> <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>.end(); }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a45aa1fe0841174ac3cd300875f1bd622" name="a45aa1fe0841174ac3cd300875f1bd622"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45aa1fe0841174ac3cd300875f1bd622">&#9670;&#160;</a></span>explicit() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a21b64d2811192433795b124e140bbca2" name="a21b64d2811192433795b124e140bbca2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21b64d2811192433795b124e140bbca2">&#9670;&#160;</a></span>explicit() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00210">210</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  210</span>                                                                           {</div>
<div class="line"><span class="lineno">  211</span>    <span class="keyword">co_yield</span> std::ranges::elements_of(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>);</div>
<div class="line"><span class="lineno">  212</span>  }</div>
<div class="line"><span class="lineno">  213</span> </div>
<div class="line"><span class="lineno">  214</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> Type <a class="code hl_function" href="#acb50b9f741eb141a526e0271ea98d6c2">operator[]</a>(<span class="keyword">auto</span> index) <span class="keyword">const</span></div>
<div class="line"><span class="lineno">  215</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a> != 1 &amp;&amp; <a class="code hl_variable" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> == 1)</div>
<div class="line"><span class="lineno">  216</span>  {</div>
<div class="line"><span class="lineno">  217</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  218</span> </div>
<div class="line"><span class="lineno">  219</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  220</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  221</span> </div>
<div class="line"><span class="lineno">  222</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  223</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_acb50b9f741eb141a526e0271ea98d6c2"><div class="ttname"><a href="#acb50b9f741eb141a526e0271ea98d6c2">fcarouge::matrix::operator[]</a></div><div class="ttdeci">constexpr Type operator[](auto index) const</div><div class="ttdef"><b>Definition</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00225">linalg.hpp:225</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8faf72ffb586809e220a72311f55e047" name="a8faf72ffb586809e220a72311f55e047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8faf72ffb586809e220a72311f55e047">&#9670;&#160;</a></span>explicit() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00200">200</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  202</span>  {</div>
<div class="line"><span class="lineno">  203</span>    Type <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element</a>{*<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>.begin()};</div>
<div class="line"><span class="lineno">  204</span> </div>
<div class="line"><span class="lineno">  205</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(element);</div>
<div class="line"><span class="lineno">  206</span> </div>
<div class="line"><span class="lineno">  207</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#a0a85d05cb03c2d137111049dcff27575">element</a>;</div>
<div class="line"><span class="lineno">  208</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-5" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a8faf72ffb586809e220a72311f55e047_cgraph.svg" width="388" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa7e9a43560b35148793464e6db205ffd" name="aa7e9a43560b35148793464e6db205ffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7e9a43560b35148793464e6db205ffd">&#9670;&#160;</a></span>operator()() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto</td>          <td class="paramname"><span class="paramname"><em>index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00236">236</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  238</span>  {</div>
<div class="line"><span class="lineno">  239</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  240</span> </div>
<div class="line"><span class="lineno">  241</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  242</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  243</span> </div>
<div class="line"><span class="lineno">  244</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  245</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-6" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_aa7e9a43560b35148793464e6db205ffd_cgraph.svg" width="403" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a267410d17977190209f548b57ec2976c" name="a267410d17977190209f548b57ec2976c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a267410d17977190209f548b57ec2976c">&#9670;&#160;</a></span>operator()() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto</td>          <td class="paramname"><span class="paramname"><em>index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00247">247</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  249</span>  {</div>
<div class="line"><span class="lineno">  250</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  251</span> </div>
<div class="line"><span class="lineno">  252</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  253</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  254</span> </div>
<div class="line"><span class="lineno">  255</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  256</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-7" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_a267410d17977190209f548b57ec2976c_cgraph.svg" width="403" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="affe6fae4cb1cfbfb7a46b135e835361f" name="affe6fae4cb1cfbfb7a46b135e835361f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe6fae4cb1cfbfb7a46b135e835361f">&#9670;&#160;</a></span>operator()() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">auto</td>          <td class="paramname"><span class="paramname"><em>row</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto</td>          <td class="paramname"><span class="paramname"><em>column</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000041">Todo</a></b></dt><dd>Don't evaluate unless needed. How to do? Some kind of recursive genie recomposer? </dd></dl>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00260">260</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  260</span>                                                                              {</div>
<div class="line"><span class="lineno">  261</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  262</span> </div>
<div class="line"><span class="lineno">  263</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  264</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  265</span> </div>
<div class="line"><span class="lineno">  266</span>    <span class="keywordflow">return</span> elements[row * <a class="code hl_variable" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a> + column];</div>
<div class="line"><span class="lineno">  267</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-8" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_affe6fae4cb1cfbfb7a46b135e835361f_cgraph.svg" width="403" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a93634d9b719e38f5737ee6df3d90e2a4" name="a93634d9b719e38f5737ee6df3d90e2a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93634d9b719e38f5737ee6df3d90e2a4">&#9670;&#160;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00132">132</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  132</span>                                                           {</div>
<div class="line"><span class="lineno">  133</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = std::move(other.genie);</div>
<div class="line"><span class="lineno">  134</span>    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><span class="lineno">  135</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00276">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::genie</a>.</p>

</div>
</div>
<a id="aef867f6ed87d203b1805512580ce95e0" name="aef867f6ed87d203b1805512580ce95e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef867f6ed87d203b1805512580ce95e0">&#9670;&#160;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00138">138</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  138</span>                                                          {</div>
<div class="line"><span class="lineno">  139</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = other.clone();</div>
<div class="line"><span class="lineno">  140</span>    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><span class="lineno">  141</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00186">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::clone()</a>.</p>
<div id="dynsection-9" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_aef867f6ed87d203b1805512580ce95e0_cgraph.svg" width="600" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a807760a155f249bd3ba3529b21363cfc" name="a807760a155f249bd3ba3529b21363cfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a807760a155f249bd3ba3529b21363cfc">&#9670;&#160;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, false &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00149">149</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  149</span>                                                                               {</div>
<div class="line"><span class="lineno">  150</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = std::move(other.genie);</div>
<div class="line"><span class="lineno">  151</span>    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><span class="lineno">  152</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="ab3ac05d0aeb1057133c6432fb10e59ee" name="ab3ac05d0aeb1057133c6432fb10e59ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3ac05d0aeb1057133c6432fb10e59ee">&#9670;&#160;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, true &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00154">154</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  154</span>                                                                              {</div>
<div class="line"><span class="lineno">  155</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = other.clone();</div>
<div class="line"><span class="lineno">  156</span>    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><span class="lineno">  157</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="acb50b9f741eb141a526e0271ea98d6c2" name="acb50b9f741eb141a526e0271ea98d6c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb50b9f741eb141a526e0271ea98d6c2">&#9670;&#160;</a></span>operator[]()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Type <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">auto</td>          <td class="paramname"><span class="paramname"><em>index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00225">225</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  227</span>  {</div>
<div class="line"><span class="lineno">  228</span>    std::array&lt;Type, Row * Column&gt; elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  229</span> </div>
<div class="line"><span class="lineno">  230</span>    std::ranges::copy(<a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a>, elements.begin());</div>
<div class="line"><span class="lineno">  231</span>    <a class="code hl_variable" href="#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a>(elements);</div>
<div class="line"><span class="lineno">  232</span> </div>
<div class="line"><span class="lineno">  233</span>    <span class="keywordflow">return</span> elements[index];</div>
<div class="line"><span class="lineno">  234</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">fcarouge::make_generator()</a>.</p>
<div id="dynsection-10" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1matrix_acb50b9f741eb141a526e0271ea98d6c2_cgraph.svg" width="403" height="36"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab24112c8116a37f1feff0dbbe6ac9178" name="ab24112c8116a37f1feff0dbbe6ac9178"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24112c8116a37f1feff0dbbe6ac9178">&#9670;&#160;</a></span>Column</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, Column, Copyable &gt;::Column</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">196</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00118">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>.</p>

</div>
</div>
<a id="a345b32af8d533e28e162b7757e23d2ec" name="a345b32af8d533e28e162b7757e23d2ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a345b32af8d533e28e162b7757e23d2ec">&#9670;&#160;</a></span>genie</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aef4e1a401c270d709c1ebaf0a3ea4a91">generator</a> <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, <a class="el" href="#a0a995e0b4a122d37f327be9b065d8136">Row</a>, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::genie</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">mutable</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00276">276</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00132">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator=()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00364">fcarouge::operator==()</a>.</p>

</div>
</div>
<a id="a0a995e0b4a122d37f327be9b065d8136" name="a0a995e0b4a122d37f327be9b065d8136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a995e0b4a122d37f327be9b065d8136">&#9670;&#160;</a></span>Row</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1, bool Copyable = false&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a>&lt; Type, Row, <a class="el" href="#ab24112c8116a37f1feff0dbbe6ac9178">Column</a>, Copyable &gt;::Row</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00196">196</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00118">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/support/lazy/fcarouge/<a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
