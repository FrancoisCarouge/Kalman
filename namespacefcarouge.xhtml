<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.2.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacefcarouge.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#concepts">Concepts</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fcarouge Namespace Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Francois Carouge's projects namespace.  
<a href="namespacefcarouge.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefcarouge_1_1benchmark"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1benchmark.xhtml">benchmark</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1benchmark"><td class="mdescLeft">&#160;</td><td class="mdescRight">Benchmark implementation. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1internal"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1internal.xhtml">internal</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1internal"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation details. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1sample"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample.xhtml">sample</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1sample"><td class="mdescLeft">&#160;</td><td class="mdescRight">Examples, tutorials, demonstrators of the library. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1test"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1test.xhtml">test</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1test"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unit, integration, regression, and usage tests. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A generic Kalman filter.  <a href="classfcarouge_1_1kalman.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="concepts" name="concepts"></a>
Concepts</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptfcarouge_1_1arithmetic.xhtml">arithmetic</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptfcarouge_1_1algebraic.xhtml">algebraic</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Algebraic concept. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">concept &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="conceptfcarouge_1_1eigen.xhtml">eigen</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eigen3 algebraic concept. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Algebraic Types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p >Matrix. </p>
</div></td></tr>
<tr class="memitem:a91e1f8a82696aa85761b7c29666235e6"><td class="memTemplParams" colspan="2">template&lt;typename Type  = double, auto Row = 1, auto Column = 1&gt; </td></tr>
<tr class="memitem:a91e1f8a82696aa85761b7c29666235e6"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a91e1f8a82696aa85761b7c29666235e6">matrix</a> = Eigen::Matrix&lt; Type, Row, Column &gt;</td></tr>
<tr class="separator:a91e1f8a82696aa85761b7c29666235e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13c25e27a85ae315c7996927b7a3c28"><td class="memTemplParams" colspan="2">template&lt;typename Type  = double, auto Column = 1&gt; </td></tr>
<tr class="memitem:ac13c25e27a85ae315c7996927b7a3c28"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ac13c25e27a85ae315c7996927b7a3c28">row_vector</a> = Eigen::RowVector&lt; Type, Column &gt;</td></tr>
<tr class="memdesc:ac13c25e27a85ae315c7996927b7a3c28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compile-time sized Eigen3 row vector.  <a href="namespacefcarouge.xhtml#ac13c25e27a85ae315c7996927b7a3c28">More...</a><br /></td></tr>
<tr class="separator:ac13c25e27a85ae315c7996927b7a3c28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f496dc857f8b172efc57e3ba9bfdbf8"><td class="memTemplParams" colspan="2">template&lt;typename Type  = double, auto Row = 1&gt; </td></tr>
<tr class="memitem:a6f496dc857f8b172efc57e3ba9bfdbf8"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a> = Eigen::Vector&lt; Type, Row &gt;</td></tr>
<tr class="memdesc:a6f496dc857f8b172efc57e3ba9bfdbf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compile-time sized Eigen3 column vector.  <a href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">More...</a><br /></td></tr>
<tr class="separator:a6f496dc857f8b172efc57e3ba9bfdbf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memTemplParams" colspan="2">template&lt;std::ranges::range Range&gt; </td></tr>
<tr class="memitem:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memTemplItemLeft" align="right" valign="top">constexpr std::generator&lt; typename Range::value_type &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ae167596e2c65ae7024cbc80f5b5d1974">make_generator</a> (Range elements)</td></tr>
<tr class="separator:ae167596e2c65ae7024cbc80f5b5d1974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a34cda4cdb141fdaa3b43f3973585e4b1">make_generator</a> (Type element) -&gt; std::generator&lt; Type &gt;</td></tr>
<tr class="separator:a34cda4cdb141fdaa3b43f3973585e4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memTemplParams" colspan="2">template&lt;std::invocable L&gt; </td></tr>
<tr class="memitem:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a62fb05e2f569f36e8cac44a90ccbc106">operator==</a> (L lhs, L rhs)</td></tr>
<tr class="separator:a62fb05e2f569f36e8cac44a90ccbc106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memTemplParams" colspan="2">template&lt;std::invocable L, typename T &gt; </td></tr>
<tr class="memitem:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a47d78fa7b2fbab1fdec6f6e30d6b1da0">operator==</a> (L lhs, T rhs)</td></tr>
<tr class="separator:a47d78fa7b2fbab1fdec6f6e30d6b1da0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84939a609e68330c2689aff14d978311"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column, bool CopyableOrNot1, bool CopyableOrNot2&gt; </td></tr>
<tr class="memitem:a84939a609e68330c2689aff14d978311"><td class="memTemplItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a84939a609e68330c2689aff14d978311">operator==</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column, CopyableOrNot1 &gt; lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column, CopyableOrNot2 &gt; rhs)</td></tr>
<tr class="separator:a84939a609e68330c2689aff14d978311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f46009dfa013275132875c5be3ab85c"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Size&gt; </td></tr>
<tr class="memitem:a5f46009dfa013275132875c5be3ab85c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a5f46009dfa013275132875c5be3ab85c">operator*</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Size &gt; lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Size, 1 &gt; rhs)</td></tr>
<tr class="separator:a5f46009dfa013275132875c5be3ab85c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a0647c4efb9c02b9ea365aacec50e4ae0">operator*</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:a0647c4efb9c02b9ea365aacec50e4ae0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a214880fe1dfe8701212c14c9ece44013"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a214880fe1dfe8701212c14c9ece44013"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a214880fe1dfe8701212c14c9ece44013">operator+</a> (Type lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; rhs)</td></tr>
<tr class="separator:a214880fe1dfe8701212c14c9ece44013"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37839500158d123b7bdc6824a025f0bc"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a37839500158d123b7bdc6824a025f0bc"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a37839500158d123b7bdc6824a025f0bc">operator+</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; rhs)</td></tr>
<tr class="separator:a37839500158d123b7bdc6824a025f0bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a187a07dcf4d00a975909a9c2a7283b95"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column, auto Size&gt; </td></tr>
<tr class="memitem:a187a07dcf4d00a975909a9c2a7283b95"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a187a07dcf4d00a975909a9c2a7283b95">operator*</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Size &gt; &amp;lhs, const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Size, Column &gt; &amp;rhs)</td></tr>
<tr class="separator:a187a07dcf4d00a975909a9c2a7283b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f016f1b86f66fffb39dd5e6c4dd96ab"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a4f016f1b86f66fffb39dd5e6c4dd96ab"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a4f016f1b86f66fffb39dd5e6c4dd96ab">operator*</a> (arithmetic auto lhs, const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; rhs)</td></tr>
<tr class="separator:a4f016f1b86f66fffb39dd5e6c4dd96ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56e2559ee22855fd69532dc43fe038ad"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Column&gt; </td></tr>
<tr class="memitem:a56e2559ee22855fd69532dc43fe038ad"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a56e2559ee22855fd69532dc43fe038ad">operator*</a> (arithmetic auto lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, Column &gt; rhs)</td></tr>
<tr class="separator:a56e2559ee22855fd69532dc43fe038ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73759a941a3efd3355642460f4687a3"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:aa73759a941a3efd3355642460f4687a3"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#aa73759a941a3efd3355642460f4687a3">operator*=</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:aa73759a941a3efd3355642460f4687a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd2db4da220479f456ab712130ed255c"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:acd2db4da220479f456ab712130ed255c"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#acd2db4da220479f456ab712130ed255c">operator*</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:acd2db4da220479f456ab712130ed255c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a6887c11028ae91379ae3902bf983ec"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a6a6887c11028ae91379ae3902bf983ec"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a6a6887c11028ae91379ae3902bf983ec">operator+</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;lhs, const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;rhs)</td></tr>
<tr class="separator:a6a6887c11028ae91379ae3902bf983ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f99d04c239164bdf5ecb627cd9b614"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a05f99d04c239164bdf5ecb627cd9b614"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a05f99d04c239164bdf5ecb627cd9b614">operator+</a> (arithmetic auto lhs, <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; rhs)</td></tr>
<tr class="separator:a05f99d04c239164bdf5ecb627cd9b614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11a6f09387090b4241f56399c3e4960a"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a11a6f09387090b4241f56399c3e4960a"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a11a6f09387090b4241f56399c3e4960a">operator+</a> (<a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:a11a6f09387090b4241f56399c3e4960a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5db1b5cabde635b27f85fe3ddc3dcc9"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:ac5db1b5cabde635b27f85fe3ddc3dcc9"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ac5db1b5cabde635b27f85fe3ddc3dcc9">operator-</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;lhs, const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;rhs)</td></tr>
<tr class="separator:ac5db1b5cabde635b27f85fe3ddc3dcc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7e4a66b8fa71546907279397bb9971a"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:ab7e4a66b8fa71546907279397bb9971a"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ab7e4a66b8fa71546907279397bb9971a">operator-</a> (arithmetic auto lhs, const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; &amp;rhs)</td></tr>
<tr class="separator:ab7e4a66b8fa71546907279397bb9971a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2c572219d8e2ce56c12424b71489c59"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row&gt; </td></tr>
<tr class="memitem:ae2c572219d8e2ce56c12424b71489c59"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ae2c572219d8e2ce56c12424b71489c59">operator/</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt; &amp;lhs, arithmetic auto rhs)</td></tr>
<tr class="separator:ae2c572219d8e2ce56c12424b71489c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac922632c2da8269e8396756088ba9a1f"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:ac922632c2da8269e8396756088ba9a1f"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">transpose</a> (const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;lhs)</td></tr>
<tr class="separator:ac922632c2da8269e8396756088ba9a1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Functions</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p >A user-definable algebraic division solution.</p>
<p >Implemented for known libraries. User-definable in other cases. There exists several ways to find <code>X</code> in <code>X = lhs * rhs^-1</code> for different tradeoffs. The user provides their implementation. Often, matrix inversion is avoided by solving <code>X * rhs = lhs</code> for <code>rhs</code> through a decomposer. </p>
</div></td></tr>
<tr class="memitem:ae6a34b26f8067a57bfc5de22cb4b625a"><td class="memTemplParams" colspan="2">template&lt;typename Numerator , algebraic Denominator&gt; </td></tr>
<tr class="memitem:ae6a34b26f8067a57bfc5de22cb4b625a"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ae6a34b26f8067a57bfc5de22cb4b625a">operator/</a> (const Numerator &amp;lhs, const Denominator &amp;rhs) -&gt; <a class="el" href="namespacefcarouge.xhtml#acd64ab811e0773f298e29a93f825c992">quotient</a>&lt; Numerator, Denominator &gt;</td></tr>
<tr class="separator:ae6a34b26f8067a57bfc5de22cb4b625a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Deduction Guides</div></td></tr>
<tr class="memitem:a4833d152f612bead262723ae23039575"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a4833d152f612bead262723ae23039575"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a4833d152f612bead262723ae23039575">matrix</a> (Type) -&gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;</td></tr>
<tr class="separator:a4833d152f612bead262723ae23039575"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0175c0b371513180978bbdb30909c54"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:ac0175c0b371513180978bbdb30909c54"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ac0175c0b371513180978bbdb30909c54">matrix</a> (const Type(&amp;)[Row][Column]) -&gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;</td></tr>
<tr class="separator:ac0175c0b371513180978bbdb30909c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row&gt; </td></tr>
<tr class="memitem:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a36b1c08e7faa5e078cd8c56e4acd8a54">matrix</a> (const Type(&amp;)[Row]) -&gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt;</td></tr>
<tr class="separator:a36b1c08e7faa5e078cd8c56e4acd8a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff2f7c46a68129e9dece27181dce855"><td class="memTemplParams" colspan="2">template&lt;typename... Types, auto... Columns&gt; <br />
requires (std::conjunction_v&lt;std::is_same&lt;<a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">first_t</a>&lt;Types...&gt;, Types&gt;...&gt; &amp;&amp; ((Columns == <a class="el" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">first_v</a>&lt;Columns&gt;)&amp;&amp;... &amp;&amp; true))</td></tr>
<tr class="memitem:a1ff2f7c46a68129e9dece27181dce855"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a1ff2f7c46a68129e9dece27181dce855">matrix</a> (const Types(&amp;...rows)[Columns]) -&gt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; std::remove_cvref_t&lt; <a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">first_t</a>&lt; Types... &gt; &gt;, sizeof...(Columns),(Columns,...)&gt;</td></tr>
<tr class="separator:a1ff2f7c46a68129e9dece27181dce855"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a3b0c4f263f282cbb330a4ca6b5ad10d9">make_identity_generator</a></td></tr>
<tr class="separator:a3b0c4f263f282cbb330a4ca6b5ad10d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fe918283834c2c859a7325fc8d3a563"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a7fe918283834c2c859a7325fc8d3a563"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a7fe918283834c2c859a7325fc8d3a563">make_zero_generator</a></td></tr>
<tr class="separator:a7fe918283834c2c859a7325fc8d3a563"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Algebraic Named Values</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p >The identity matrix naive specialization. </p>
</div></td></tr>
<tr class="memitem:af5d9207021a8118ac46558fd9a453d6d"><td class="memTemplParams" colspan="2">template&lt;typename Type  = double&gt; </td></tr>
<tr class="memitem:af5d9207021a8118ac46558fd9a453d6d"><td class="memTemplItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#af5d9207021a8118ac46558fd9a453d6d">identity_v</a></td></tr>
<tr class="separator:af5d9207021a8118ac46558fd9a453d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3366ce166772e7a795df711ec8fd4e7"><td class="memTemplParams" colspan="2">template&lt;arithmetic Arithmetic&gt; </td></tr>
<tr class="memitem:ad3366ce166772e7a795df711ec8fd4e7"><td class="memTemplItemLeft" align="right" valign="top">constexpr Arithmetic&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#ad3366ce166772e7a795df711ec8fd4e7">identity_v&lt; Arithmetic &gt;</a> {1}</td></tr>
<tr class="memdesc:ad3366ce166772e7a795df711ec8fd4e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">The singleton identity matrix specialization.  <a href="namespacefcarouge.xhtml#ad3366ce166772e7a795df711ec8fd4e7">More...</a><br /></td></tr>
<tr class="separator:ad3366ce166772e7a795df711ec8fd4e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02138eddd50d93b33b26d70dfbd80edf"><td class="memTemplParams" colspan="2">template&lt;typename Type  = double&gt; </td></tr>
<tr class="memitem:a02138eddd50d93b33b26d70dfbd80edf"><td class="memTemplItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a02138eddd50d93b33b26d70dfbd80edf">zero_v</a></td></tr>
<tr class="memdesc:a02138eddd50d93b33b26d70dfbd80edf"><td class="mdescLeft">&#160;</td><td class="mdescRight">The zero matrix.  <a href="namespacefcarouge.xhtml#a02138eddd50d93b33b26d70dfbd80edf">More...</a><br /></td></tr>
<tr class="separator:a02138eddd50d93b33b26d70dfbd80edf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc0f52579fef5ea2023d3927a3b1a7f"><td class="memTemplParams" colspan="2">template&lt;arithmetic Arithmetic&gt; </td></tr>
<tr class="memitem:a8cc0f52579fef5ea2023d3927a3b1a7f"><td class="memTemplItemLeft" align="right" valign="top">constexpr Arithmetic&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a8cc0f52579fef5ea2023d3927a3b1a7f">zero_v&lt; Arithmetic &gt;</a> {0}</td></tr>
<tr class="memdesc:a8cc0f52579fef5ea2023d3927a3b1a7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The singleton zero matrix specialization.  <a href="namespacefcarouge.xhtml#a8cc0f52579fef5ea2023d3927a3b1a7f">More...</a><br /></td></tr>
<tr class="separator:a8cc0f52579fef5ea2023d3927a3b1a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86526ddb6bfec8982d096d3d47fae040"><td class="memTemplParams" colspan="2">template&lt;eigen Matrix&gt; </td></tr>
<tr class="memitem:a86526ddb6bfec8982d096d3d47fae040"><td class="memTemplItemLeft" align="right" valign="top">const auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a86526ddb6bfec8982d096d3d47fae040">identity_v&lt; Matrix &gt;</a> {Matrix::Identity()}</td></tr>
<tr class="separator:a86526ddb6bfec8982d096d3d47fae040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a906ad0e7a837c8935b27497a2e02f2c4"><td class="memTemplParams" colspan="2">template&lt;eigen Matrix&gt; </td></tr>
<tr class="memitem:a906ad0e7a837c8935b27497a2e02f2c4"><td class="memTemplItemLeft" align="right" valign="top">const auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a906ad0e7a837c8935b27497a2e02f2c4">zero_v&lt; Matrix &gt;</a> {Matrix::Zero()}</td></tr>
<tr class="memdesc:a906ad0e7a837c8935b27497a2e02f2c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">The zero matrix Eigen specialization.  <a href="namespacefcarouge.xhtml#a906ad0e7a837c8935b27497a2e02f2c4">More...</a><br /></td></tr>
<tr class="separator:a906ad0e7a837c8935b27497a2e02f2c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea35424b203a1ba2ab287785e36b753"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a1ea35424b203a1ba2ab287785e36b753"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a1ea35424b203a1ba2ab287785e36b753">identity_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</a></td></tr>
<tr class="separator:a1ea35424b203a1ba2ab287785e36b753"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e109425619816f11a1c78c3a9e59f6"><td class="memTemplParams" colspan="2">template&lt;typename Type , auto Row, auto Column&gt; </td></tr>
<tr class="memitem:a27e109425619816f11a1c78c3a9e59f6"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a27e109425619816f11a1c78c3a9e59f6">zero_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</a></td></tr>
<tr class="memdesc:a27e109425619816f11a1c78c3a9e59f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The zero matrix lazy specialization.  <a href="namespacefcarouge.xhtml#a27e109425619816f11a1c78c3a9e59f6">More...</a><br /></td></tr>
<tr class="separator:a27e109425619816f11a1c78c3a9e59f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader">Types</h2></td></tr>
<tr><td class="ititle" colspan="2"><p >Tuple-like pack type.</p>
<p >An alternative to tuple-like types. </p>
</td></tr>
<tr class="memitem:aa5a28afb4550bbcbd55d875351de6e27"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; </td></tr>
<tr class="memitem:aa5a28afb4550bbcbd55d875351de6e27"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> = internal::pack&lt; Types... &gt;</td></tr>
<tr class="separator:aa5a28afb4550bbcbd55d875351de6e27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af07a5637ebbb4bd8c0244134151732ca"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a> = <a class="el" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">internal::empty_pack</a></td></tr>
<tr class="memdesc:af07a5637ebbb4bd8c0244134151732ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tuple-like empty pack type.  <a href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">More...</a><br /></td></tr>
<tr class="separator:af07a5637ebbb4bd8c0244134151732ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6990cf6953bd2fa9b0a96aa36ad56210"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; </td></tr>
<tr class="memitem:a6990cf6953bd2fa9b0a96aa36ad56210"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">first_t</a> = <a class="el" href="namespacefcarouge_1_1internal.xhtml#aa0e52f8c40cdb0907d2439baf90741e6">internal::first_t</a>&lt; Types... &gt;</td></tr>
<tr class="memdesc:a6990cf6953bd2fa9b0a96aa36ad56210"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unpack the first type of the type template parameter pack.  <a href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">More...</a><br /></td></tr>
<tr class="separator:a6990cf6953bd2fa9b0a96aa36ad56210"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd64ab811e0773f298e29a93f825c992"><td class="memTemplParams" colspan="2">template&lt;typename Numerator , typename Denominator &gt; </td></tr>
<tr class="memitem:acd64ab811e0773f298e29a93f825c992"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#acd64ab811e0773f298e29a93f825c992">quotient</a> = <a class="el" href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">internal::quotient</a>&lt; Numerator, Denominator &gt;</td></tr>
<tr class="memdesc:acd64ab811e0773f298e29a93f825c992"><td class="mdescLeft">&#160;</td><td class="mdescRight">The matrix type satisfying <code>X * Row = Column</code>.  <a href="namespacefcarouge.xhtml#acd64ab811e0773f298e29a93f825c992">More...</a><br /></td></tr>
<tr class="separator:acd64ab811e0773f298e29a93f825c992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e0d4e00e05e1ca7701aa8dfc9681d77"><td class="memTemplParams" colspan="2">template&lt;auto... Values&gt; </td></tr>
<tr class="memitem:a1e0d4e00e05e1ca7701aa8dfc9681d77"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">first_v</a> {internal::first_v&lt;Values...&gt;}</td></tr>
<tr class="memdesc:a1e0d4e00e05e1ca7701aa8dfc9681d77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unpack the first value of the non-type template parameter pack.  <a href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">More...</a><br /></td></tr>
<tr class="separator:a1e0d4e00e05e1ca7701aa8dfc9681d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Francois Carouge's projects namespace. </p>
<p >The definitions and implementations of the library intended for public usage. Lowers the name conflict probability in large projects. Use using-declarations or namespace-alias-definition per your project guidelines. </p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="a6f496dc857f8b172efc57e3ba9bfdbf8" name="a6f496dc857f8b172efc57e3ba9bfdbf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f496dc857f8b172efc57e3ba9bfdbf8">&#9670;&nbsp;</a></span>column_vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::column_vector</a> = typedef <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt;Type, Row, decltype(Row){1}&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compile-time sized Eigen3 column vector. </p>
<p >Column vector.</p>
<p >Coroutine lazy column vector. </p>

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00066">66</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="af07a5637ebbb4bd8c0244134151732ca" name="af07a5637ebbb4bd8c0244134151732ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af07a5637ebbb4bd8c0244134151732ca">&#9670;&nbsp;</a></span>empty_pack</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">fcarouge::empty_pack</a> = typedef <a class="el" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">internal::empty_pack</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tuple-like empty pack type. </p>
<p >A <code>pack</code> type with no composed types. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00084">84</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="a6990cf6953bd2fa9b0a96aa36ad56210" name="a6990cf6953bd2fa9b0a96aa36ad56210"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6990cf6953bd2fa9b0a96aa36ad56210">&#9670;&nbsp;</a></span>first_t</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Types&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">fcarouge::first_t</a> = typedef <a class="el" href="namespacefcarouge_1_1internal.xhtml#aa0e52f8c40cdb0907d2439baf90741e6">internal::first_t</a>&lt;Types...&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unpack the first type of the type template parameter pack. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00087">87</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="a91e1f8a82696aa85761b7c29666235e6" name="a91e1f8a82696aa85761b7c29666235e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91e1f8a82696aa85761b7c29666235e6">&#9670;&nbsp;</a></span>matrix</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Row = 1, auto Column = 1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a> = typedef Eigen::Matrix&lt;Type, Row, Column&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00058">58</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="aa5a28afb4550bbcbd55d875351de6e27" name="aa5a28afb4550bbcbd55d875351de6e27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5a28afb4550bbcbd55d875351de6e27">&#9670;&nbsp;</a></span>pack</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Types&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a> = typedef internal::pack&lt;Types...&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00079">79</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="acd64ab811e0773f298e29a93f825c992" name="acd64ab811e0773f298e29a93f825c992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd64ab811e0773f298e29a93f825c992">&#9670;&nbsp;</a></span>quotient</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Numerator , typename Denominator &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#acd64ab811e0773f298e29a93f825c992">fcarouge::quotient</a> = typedef <a class="el" href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">internal::quotient</a>&lt;Numerator, Denominator&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The matrix type satisfying <code>X * Row = Column</code>. </p>
<p >The resulting type of a matrix division. The resulting matrix type has as many rows as the <code>Row</code> matrix, respectively for columns as the <code>Column</code> matrix. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00099">99</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="ac13c25e27a85ae315c7996927b7a3c28" name="ac13c25e27a85ae315c7996927b7a3c28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac13c25e27a85ae315c7996927b7a3c28">&#9670;&nbsp;</a></span>row_vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double, auto Column = 1&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacefcarouge.xhtml#ac13c25e27a85ae315c7996927b7a3c28">fcarouge::row_vector</a> = typedef <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt;Type, decltype(Column){1}, Column&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compile-time sized Eigen3 row vector. </p>
<p >Row vector.</p>
<p >Coroutine lazy row vector. </p>

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00062">62</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="ae167596e2c65ae7024cbc80f5b5d1974" name="ae167596e2c65ae7024cbc80f5b5d1974"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae167596e2c65ae7024cbc80f5b5d1974">&#9670;&nbsp;</a></span>make_generator() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::ranges::range Range&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::generator&lt; typename Range::value_type &gt; fcarouge::make_generator </td>
          <td>(</td>
          <td class="paramtype">Range&#160;</td>
          <td class="paramname"><em>elements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00067">67</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   67</span>                               {</div>
<div class="line"><span class="lineno">   68</span>  <span class="keywordflow">return</span> [](<span class="keyword">auto</span> elements_copy)</div>
<div class="line"><span class="lineno">   69</span>             -&gt; std::generator&lt;<span class="keyword">typename</span> <span class="keyword">decltype</span>(elements)::value_type&gt; {</div>
<div class="line"><span class="lineno">   70</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;&amp;element : elements_copy) { <span class="comment">// std::ranges::elements_of</span></div>
<div class="line"><span class="lineno">   71</span>      <span class="keyword">co_yield</span> element;</div>
<div class="line"><span class="lineno">   72</span>    }</div>
<div class="line"><span class="lineno">   73</span>  }(elements);</div>
<div class="line"><span class="lineno">   74</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00185">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::clone()</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00199">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::explicit()</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00164">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::matrix()</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00235">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator()()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00224">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::operator[]()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_ae167596e2c65ae7024cbc80f5b5d1974_icgraph.svg" width="627" height="266"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a34cda4cdb141fdaa3b43f3973585e4b1" name="a34cda4cdb141fdaa3b43f3973585e4b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34cda4cdb141fdaa3b43f3973585e4b1">&#9670;&nbsp;</a></span>make_generator() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::make_generator </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>element</em></td><td>)</td>
          <td> -&gt; std::generator&lt;Type&gt; </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00078">78</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   78</span>                                                                         {</div>
<div class="line"><span class="lineno">   79</span>  <span class="keywordflow">return</span> [](Type element_copy) -&gt; std::generator&lt;Type&gt; {</div>
<div class="line"><span class="lineno">   80</span>    <span class="keyword">co_yield</span> element_copy;</div>
<div class="line"><span class="lineno">   81</span>  }(element);</div>
<div class="line"><span class="lineno">   82</span>}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00360">operator==()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a34cda4cdb141fdaa3b43f3973585e4b1_icgraph.svg" width="371" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a36b1c08e7faa5e078cd8c56e4acd8a54" name="a36b1c08e7faa5e078cd8c56e4acd8a54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36b1c08e7faa5e078cd8c56e4acd8a54">&#9670;&nbsp;</a></span>matrix() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a> </td>
          <td>(</td>
          <td class="paramtype">const &#160;</td>
          <td class="paramname"><em>Type</em>(&amp;)[Row]</td><td>)</td>
          <td> -&gt;  <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ac0175c0b371513180978bbdb30909c54" name="ac0175c0b371513180978bbdb30909c54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0175c0b371513180978bbdb30909c54">&#9670;&nbsp;</a></span>matrix() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a> </td>
          <td>(</td>
          <td class="paramtype">const &#160;</td>
          <td class="paramname"><em>Type</em>(&amp;)[Row][Column]</td><td>)</td>
          <td> -&gt;  <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a1ff2f7c46a68129e9dece27181dce855" name="a1ff2f7c46a68129e9dece27181dce855"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ff2f7c46a68129e9dece27181dce855">&#9670;&nbsp;</a></span>matrix() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename... Types, auto... Columns&gt; <br />
requires (std::conjunction_v&lt;std::is_same&lt;<a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">first_t</a>&lt;Types...&gt;, Types&gt;...&gt; &amp;&amp; ((Columns == <a class="el" href="namespacefcarouge.xhtml#a1e0d4e00e05e1ca7701aa8dfc9681d77">first_v</a>&lt;Columns&gt;)&amp;&amp;... &amp;&amp; true))</div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a> </td>
          <td>(</td>
          <td class="paramtype">const &#160;</td>
          <td class="paramname"><em>Types</em>(&amp;...rows)[Columns]</td><td>)</td>
          <td> -&gt;  <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; std::remove_cvref_t&lt; <a class="el" href="namespacefcarouge.xhtml#a6990cf6953bd2fa9b0a96aa36ad56210">first_t</a>&lt; Types... &gt; &gt;, sizeof...(Columns),(Columns,...)&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4833d152f612bead262723ae23039575" name="a4833d152f612bead262723ae23039575"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4833d152f612bead262723ae23039575">&#9670;&nbsp;</a></span>matrix() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a> </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> -&gt;  <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a4f016f1b86f66fffb39dd5e6c4dd96ab" name="a4f016f1b86f66fffb39dd5e6c4dd96ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f016f1b86f66fffb39dd5e6c4dd96ab">&#9670;&nbsp;</a></span>operator*() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00217">217</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  218</span>                                                                            {</div>
<div class="line"><span class="lineno">  219</span>  <span class="keywordflow">return</span> lhs * rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0];</div>
<div class="line"><span class="lineno">  220</span>}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a24baa2c48b4606232abeab530ec019ce"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">fcarouge::matrix::data</a></div><div class="ttdeci">Type data[Row][Column]</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">linalg.hpp:149</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a56e2559ee22855fd69532dc43fe038ad" name="a56e2559ee22855fd69532dc43fe038ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56e2559ee22855fd69532dc43fe038ad">&#9670;&nbsp;</a></span>operator*() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, Column &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00223">223</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  224</span>                                                                           {</div>
<div class="line"><span class="lineno">  225</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, 1, Column&gt;</a> result;</div>
<div class="line"><span class="lineno">  226</span> </div>
<div class="line"><span class="lineno">  227</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  228</span>    result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j] = lhs * rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][j];</div>
<div class="line"><span class="lineno">  229</span>  }</div>
<div class="line"><span class="lineno">  230</span> </div>
<div class="line"><span class="lineno">  231</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  232</span>}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml">fcarouge::matrix</a></div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00114">linalg.hpp:114</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a187a07dcf4d00a975909a9c2a7283b95" name="a187a07dcf4d00a975909a9c2a7283b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a187a07dcf4d00a975909a9c2a7283b95">&#9670;&nbsp;</a></span>operator*() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, auto Size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Size &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Size, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00201">201</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  202</span>                                                 {</div>
<div class="line"><span class="lineno">  203</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result;</div>
<div class="line"><span class="lineno">  204</span> </div>
<div class="line"><span class="lineno">  205</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  206</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  207</span>      <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Size) k{0}; k &lt; Size; ++k) {</div>
<div class="line"><span class="lineno">  208</span>        result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] += lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][k] * rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[k][j];</div>
<div class="line"><span class="lineno">  209</span>      }</div>
<div class="line"><span class="lineno">  210</span>    }</div>
<div class="line"><span class="lineno">  211</span>  }</div>
<div class="line"><span class="lineno">  212</span> </div>
<div class="line"><span class="lineno">  213</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  214</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a0647c4efb9c02b9ea365aacec50e4ae0" name="a0647c4efb9c02b9ea365aacec50e4ae0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0647c4efb9c02b9ea365aacec50e4ae0">&#9670;&nbsp;</a></span>operator*() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00391">391</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  391</span>                                                              {</div>
<div class="line"><span class="lineno">  392</span>  <span class="keyword">auto</span> next{lhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a>()};</div>
<div class="line"><span class="lineno">  393</span>  <span class="keywordflow">for</span> (<span class="keyword">auto</span> k{Row * Column}; k &gt; 0; --k, ++next) {</div>
<div class="line"><span class="lineno">  394</span>    <span class="keyword">co_yield</span> *next *rhs;</div>
<div class="line"><span class="lineno">  395</span>  }</div>
<div class="line"><span class="lineno">  396</span>}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_ac6248dacd7be4fb05540b8ab2956cb7b"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">fcarouge::matrix::begin</a></div><div class="ttdeci">auto begin() const</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00272">linalg.hpp:272</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00272">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::begin()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a0647c4efb9c02b9ea365aacec50e4ae0_cgraph.svg" width="340" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="acd2db4da220479f456ab712130ed255c" name="acd2db4da220479f456ab712130ed255c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd2db4da220479f456ab712130ed255c">&#9670;&nbsp;</a></span>operator*() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00247">247</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  248</span>                                                                   {</div>
<div class="line"><span class="lineno">  249</span>  <span class="keywordflow">return</span> lhs *= rhs;</div>
<div class="line"><span class="lineno">  250</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a5f46009dfa013275132875c5be3ab85c" name="a5f46009dfa013275132875c5be3ab85c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f46009dfa013275132875c5be3ab85c">&#9670;&nbsp;</a></span>operator*() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt; fcarouge::operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Size &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Size, 1 &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00374">374</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  375</span>                                                                               {</div>
<div class="line"><span class="lineno">  376</span>  <span class="comment">// fix me?</span></div>
<div class="line"><span class="lineno">  377</span>  <span class="keyword">auto</span> next1{lhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a>()};</div>
<div class="line"><span class="lineno">  378</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {       <span class="comment">// chunk_by_rows</span></div>
<div class="line"><span class="lineno">  379</span>    matrix&lt;Type, Size, 1&gt; rhs_copy{rhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#a3d43f3ebeab72104b65bc49131d293fc">clone</a>()}; <span class="comment">// repeat_n</span></div>
<div class="line"><span class="lineno">  380</span>    <span class="keyword">auto</span> next2{rhs_copy.begin()};</div>
<div class="line"><span class="lineno">  381</span>    Type element{}; <span class="comment">// inner_product?</span></div>
<div class="line"><span class="lineno">  382</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Size) k{0}; k &lt; Size; ++k, ++next1, ++next2) {</div>
<div class="line"><span class="lineno">  383</span>      element += *next1 * *next2;</div>
<div class="line"><span class="lineno">  384</span>    }</div>
<div class="line"><span class="lineno">  385</span>    <span class="keyword">co_yield</span> element;</div>
<div class="line"><span class="lineno">  386</span>  }</div>
<div class="line"><span class="lineno">  387</span>}</div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a3d43f3ebeab72104b65bc49131d293fc"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a3d43f3ebeab72104b65bc49131d293fc">fcarouge::matrix::clone</a></div><div class="ttdeci">constexpr std::generator&lt; Type &gt; clone() const</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00185">linalg.hpp:185</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00272">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::begin()</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00185">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::clone()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a5f46009dfa013275132875c5be3ab85c_cgraph.svg" width="559" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa73759a941a3efd3355642460f4687a3" name="aa73759a941a3efd3355642460f4687a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa73759a941a3efd3355642460f4687a3">&#9670;&nbsp;</a></span>operator*=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto &amp; fcarouge::operator*= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00235">235</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  236</span>                                                       {</div>
<div class="line"><span class="lineno">  237</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  238</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  239</span>      lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] *= rhs;</div>
<div class="line"><span class="lineno">  240</span>    }</div>
<div class="line"><span class="lineno">  241</span>  }</div>
<div class="line"><span class="lineno">  242</span> </div>
<div class="line"><span class="lineno">  243</span>  <span class="keywordflow">return</span> lhs;</div>
<div class="line"><span class="lineno">  244</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a05f99d04c239164bdf5ecb627cd9b614" name="a05f99d04c239164bdf5ecb627cd9b614"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f99d04c239164bdf5ecb627cd9b614">&#9670;&nbsp;</a></span>operator+() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator+ </td>
          <td>(</td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00268">268</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  269</span>                                                                      {</div>
<div class="line"><span class="lineno">  270</span>  <span class="keywordflow">return</span> lhs + rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0];</div>
<div class="line"><span class="lineno">  271</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a6a6887c11028ae91379ae3902bf983ec" name="a6a6887c11028ae91379ae3902bf983ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a6887c11028ae91379ae3902bf983ec">&#9670;&nbsp;</a></span>operator+() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00254">254</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  255</span>                                                {</div>
<div class="line"><span class="lineno">  256</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result{lhs};</div>
<div class="line"><span class="lineno">  257</span> </div>
<div class="line"><span class="lineno">  258</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  259</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  260</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] += rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j];</div>
<div class="line"><span class="lineno">  261</span>    }</div>
<div class="line"><span class="lineno">  262</span>  }</div>
<div class="line"><span class="lineno">  263</span> </div>
<div class="line"><span class="lineno">  264</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  265</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="a11a6f09387090b4241f56399c3e4960a" name="a11a6f09387090b4241f56399c3e4960a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11a6f09387090b4241f56399c3e4960a">&#9670;&nbsp;</a></span>operator+() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00274">274</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  275</span>                                                                   {</div>
<div class="line"><span class="lineno">  276</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0] + rhs;</div>
<div class="line"><span class="lineno">  277</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a37839500158d123b7bdc6824a025f0bc" name="a37839500158d123b7bdc6824a025f0bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37839500158d123b7bdc6824a025f0bc">&#9670;&nbsp;</a></span>operator+() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; fcarouge::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00406">406</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  406</span>                                                                        {</div>
<div class="line"><span class="lineno">  407</span>  <span class="keyword">auto</span> next1{lhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a>()};</div>
<div class="line"><span class="lineno">  408</span>  <span class="keyword">auto</span> next2{rhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a>()};</div>
<div class="line"><span class="lineno">  409</span>  <span class="keywordflow">for</span> (<span class="keyword">auto</span> k{Row * Column}; k &gt; 0; --k, ++next1, ++next2) {</div>
<div class="line"><span class="lineno">  410</span>    <span class="keyword">co_yield</span> *next1 + *next2;</div>
<div class="line"><span class="lineno">  411</span>  }</div>
<div class="line"><span class="lineno">  412</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00272">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::begin()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a37839500158d123b7bdc6824a025f0bc_cgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a214880fe1dfe8701212c14c9ece44013" name="a214880fe1dfe8701212c14c9ece44013"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a214880fe1dfe8701212c14c9ece44013">&#9670;&nbsp;</a></span>operator+() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; fcarouge::operator+ </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00399">399</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  400</span>                                                                          {</div>
<div class="line"><span class="lineno">  401</span>  <span class="keyword">co_yield</span> lhs + *rhs.<a class="code hl_function" href="structfcarouge_1_1matrix.xhtml#ac6248dacd7be4fb05540b8ab2956cb7b">begin</a>();</div>
<div class="line"><span class="lineno">  402</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00272">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::begin()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a214880fe1dfe8701212c14c9ece44013_cgraph.svg" width="343" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab7e4a66b8fa71546907279397bb9971a" name="ab7e4a66b8fa71546907279397bb9971a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7e4a66b8fa71546907279397bb9971a">&#9670;&nbsp;</a></span>operator-() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator- </td>
          <td>(</td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, 1, 1 &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00295">295</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  296</span>                                                                             {</div>
<div class="line"><span class="lineno">  297</span>  <span class="keywordflow">return</span> lhs - rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[0][0];</div>
<div class="line"><span class="lineno">  298</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="ac5db1b5cabde635b27f85fe3ddc3dcc9" name="ac5db1b5cabde635b27f85fe3ddc3dcc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5db1b5cabde635b27f85fe3ddc3dcc9">&#9670;&nbsp;</a></span>operator-() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator- </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00281">281</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  282</span>                                                {</div>
<div class="line"><span class="lineno">  283</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, Column&gt;</a> result{lhs};</div>
<div class="line"><span class="lineno">  284</span> </div>
<div class="line"><span class="lineno">  285</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  286</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  287</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j] -= rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j];</div>
<div class="line"><span class="lineno">  288</span>    }</div>
<div class="line"><span class="lineno">  289</span>  }</div>
<div class="line"><span class="lineno">  290</span> </div>
<div class="line"><span class="lineno">  291</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  292</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="ae2c572219d8e2ce56c12424b71489c59" name="ae2c572219d8e2ce56c12424b71489c59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2c572219d8e2ce56c12424b71489c59">&#9670;&nbsp;</a></span>operator/() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator/ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, 1 &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">arithmetic auto&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00301">301</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  302</span>                                                                   {</div>
<div class="line"><span class="lineno">  303</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Row, 1&gt;</a> result{lhs};</div>
<div class="line"><span class="lineno">  304</span> </div>
<div class="line"><span class="lineno">  305</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  306</span>    result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][0] /= rhs;</div>
<div class="line"><span class="lineno">  307</span>  }</div>
<div class="line"><span class="lineno">  308</span> </div>
<div class="line"><span class="lineno">  309</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  310</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<a id="ae6a34b26f8067a57bfc5de22cb4b625a" name="ae6a34b26f8067a57bfc5de22cb4b625a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6a34b26f8067a57bfc5de22cb4b625a">&#9670;&nbsp;</a></span>operator/() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Numerator , algebraic Denominator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::operator/ </td>
          <td>(</td>
          <td class="paramtype">const Numerator &amp;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Denominator &amp;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; <a class="el" href="namespacefcarouge.xhtml#acd64ab811e0773f298e29a93f825c992">quotient</a>&lt;Numerator, Denominator&gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="kf_6x2x0_vehicle_location_8cpp-example.xhtml#a0">kf_6x2x0_vehicle_location.cpp</a>, and <a class="el" href="kf_8x4x0_deep_sort_bounding_box_8cpp-example.xhtml#a0">kf_8x4x0_deep_sort_bounding_box.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="update__linalg__xx0_8cpp_source.xhtml#l00055">55</a> of file <a class="el" href="update__linalg__xx0_8cpp_source.xhtml">update_linalg_xx0.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   56</span>                                                {</div>
<div class="line"><span class="lineno">   57</span>  <span class="keywordflow">return</span> rhs.transpose()</div>
<div class="line"><span class="lineno">   58</span>      .fullPivHouseholderQr()</div>
<div class="line"><span class="lineno">   59</span>      .solve(lhs.transpose())</div>
<div class="line"><span class="lineno">   60</span>      .transpose();</div>
<div class="line"><span class="lineno">   61</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a62fb05e2f569f36e8cac44a90ccbc106" name="a62fb05e2f569f36e8cac44a90ccbc106"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62fb05e2f569f36e8cac44a90ccbc106">&#9670;&nbsp;</a></span>operator==() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::invocable L&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool fcarouge::operator== </td>
          <td>(</td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00349">349</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  349</span>                                                        {</div>
<div class="line"><span class="lineno">  350</span>  <span class="keywordflow">return</span> lhs() == rhs();</div>
<div class="line"><span class="lineno">  351</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a47d78fa7b2fbab1fdec6f6e30d6b1da0" name="a47d78fa7b2fbab1fdec6f6e30d6b1da0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47d78fa7b2fbab1fdec6f6e30d6b1da0">&#9670;&nbsp;</a></span>operator==() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;std::invocable L, typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool fcarouge::operator== </td>
          <td>(</td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00353">353</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  353</span>                                                                    {</div>
<div class="line"><span class="lineno">  354</span>  <span class="keywordflow">return</span> lhs() == rhs;</div>
<div class="line"><span class="lineno">  355</span>}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a84939a609e68330c2689aff14d978311" name="a84939a609e68330c2689aff14d978311"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84939a609e68330c2689aff14d978311">&#9670;&nbsp;</a></span>operator==() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column, bool CopyableOrNot1, bool CopyableOrNot2&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool fcarouge::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column, CopyableOrNot1 &gt;&#160;</td>
          <td class="paramname"><em>lhs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column, CopyableOrNot2 &gt;&#160;</td>
          <td class="paramname"><em>rhs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00360">360</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  361</span>                                                          {</div>
<div class="line"><span class="lineno">  362</span>  std::array&lt;Type, Row * Column&gt; lhs_elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  363</span>  <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, lhs_elements.begin());</div>
<div class="line"><span class="lineno">  364</span>  lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a34cda4cdb141fdaa3b43f3973585e4b1">make_generator</a>(lhs_elements);</div>
<div class="line"><span class="lineno">  365</span> </div>
<div class="line"><span class="lineno">  366</span>  std::array&lt;Type, Row * Column&gt; rhs_elements; <span class="comment">// std::ranges::to</span></div>
<div class="line"><span class="lineno">  367</span>  <a class="code hl_variable" href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">std::ranges::copy</a>(rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a>, rhs_elements.begin());</div>
<div class="line"><span class="lineno">  368</span>  rhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">genie</a> = <a class="code hl_function" href="namespacefcarouge.xhtml#a34cda4cdb141fdaa3b43f3973585e4b1">make_generator</a>(rhs_elements);</div>
<div class="line"><span class="lineno">  369</span> </div>
<div class="line"><span class="lineno">  370</span>  <span class="keywordflow">return</span> lhs_elements == rhs_elements;</div>
<div class="line"><span class="lineno">  371</span>}</div>
<div class="ttc" id="a_l_i_c_e_n_s_e_8txt_xhtml_aaff024f9fd06471d3fb778f865b5b424"><div class="ttname"><a href="_l_i_c_e_n_s_e_8txt.xhtml#aaff024f9fd06471d3fb778f865b5b424">copy</a></div><div class="ttdeci">This is free and unencumbered software released into the public domain Anyone is free to copy</div><div class="ttdef"><b>Definition:</b> <a href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">LICENSE.txt:3</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a34cda4cdb141fdaa3b43f3973585e4b1"><div class="ttname"><a href="namespacefcarouge.xhtml#a34cda4cdb141fdaa3b43f3973585e4b1">fcarouge::make_generator</a></div><div class="ttdeci">constexpr auto make_generator(Type element) -&gt; std::generator&lt; Type &gt;</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00078">linalg.hpp:78</a></div></div>
<div class="ttc" id="astructfcarouge_1_1matrix_xhtml_a345b32af8d533e28e162b7757e23d2ec"><div class="ttname"><a href="structfcarouge_1_1matrix.xhtml#a345b32af8d533e28e162b7757e23d2ec">fcarouge::matrix::genie</a></div><div class="ttdeci">generator genie</div><div class="ttdef"><b>Definition:</b> <a href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00275">linalg.hpp:275</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="_l_i_c_e_n_s_e_8txt_source.xhtml#l00003">copy</a>, <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00275">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::genie</a>, and <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00078">make_generator()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a84939a609e68330c2689aff14d978311_cgraph.svg" width="371" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac922632c2da8269e8396756088ba9a1f" name="ac922632c2da8269e8396756088ba9a1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac922632c2da8269e8396756088ba9a1f">&#9670;&nbsp;</a></span>transpose()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::transpose </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &amp;&#160;</td>
          <td class="paramname"><em>lhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00314">314</a> of file <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  314</span>                                                {</div>
<div class="line"><span class="lineno">  315</span>  <a class="code hl_struct" href="structfcarouge_1_1matrix.xhtml">matrix&lt;Type, Column, Row&gt;</a> result;</div>
<div class="line"><span class="lineno">  316</span> </div>
<div class="line"><span class="lineno">  317</span>  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line"><span class="lineno">  318</span>    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line"><span class="lineno">  319</span>      result.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[j][i] = lhs.<a class="code hl_variable" href="structfcarouge_1_1matrix.xhtml#a24baa2c48b4606232abeab530ec019ce">data</a>[i][j];</div>
<div class="line"><span class="lineno">  320</span>    }</div>
<div class="line"><span class="lineno">  321</span>  }</div>
<div class="line"><span class="lineno">  322</span> </div>
<div class="line"><span class="lineno">  323</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><span class="lineno">  324</span>}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00149">fcarouge::matrix&lt; Type, Row, Column, Copyable &gt;::data</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a1e0d4e00e05e1ca7701aa8dfc9681d77" name="a1e0d4e00e05e1ca7701aa8dfc9681d77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e0d4e00e05e1ca7701aa8dfc9681d77">&#9670;&nbsp;</a></span>first_v</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;auto... Values&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto fcarouge::first_v {internal::first_v&lt;Values...&gt;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unpack the first value of the non-type template parameter pack. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00091">91</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="af5d9207021a8118ac46558fd9a453d6d" name="af5d9207021a8118ac46558fd9a453d6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d9207021a8118ac46558fd9a453d6d">&#9670;&nbsp;</a></span>identity_v</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type fcarouge::identity_v</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{internal::not_implemented&lt;Type&gt;{</div>
<div class="line">    <span class="stringliteral">&quot;Implement the linear algebra identity matrix for this type.&quot;</span>}}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00121">121</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="ad3366ce166772e7a795df711ec8fd4e7" name="ad3366ce166772e7a795df711ec8fd4e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3366ce166772e7a795df711ec8fd4e7">&#9670;&nbsp;</a></span>identity_v&lt; Arithmetic &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;arithmetic Arithmetic&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Arithmetic <a class="el" href="namespacefcarouge.xhtml#af5d9207021a8118ac46558fd9a453d6d">fcarouge::identity_v</a>&lt; Arithmetic &gt; {1}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The singleton identity matrix specialization. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00126">126</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="a86526ddb6bfec8982d096d3d47fae040" name="a86526ddb6bfec8982d096d3d47fae040"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86526ddb6bfec8982d096d3d47fae040">&#9670;&nbsp;</a></span>identity_v&lt; Matrix &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;eigen Matrix&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto <a class="el" href="namespacefcarouge.xhtml#af5d9207021a8118ac46558fd9a453d6d">fcarouge::identity_v</a>&lt; Matrix &gt; {Matrix::Identity()}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00073">73</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a1ea35424b203a1ba2ab287785e36b753" name="a1ea35424b203a1ba2ab287785e36b753"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ea35424b203a1ba2ab287785e36b753">&#9670;&nbsp;</a></span>identity_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt;Type, Row, Column&gt; <a class="el" href="namespacefcarouge.xhtml#af5d9207021a8118ac46558fd9a453d6d">fcarouge::identity_v</a>&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{[](<span class="keyword">auto</span>... args) {</div>
<div class="line">  matrix&lt;Type, Row, Column, true&gt; m{</div>
<div class="line">      make_identity_generator&lt;Type, Row, Column&gt;()};</div>
<div class="line">  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<span class="keyword">sizeof</span>...(args)) {</div>
<div class="line">    <span class="keywordflow">return</span> m(args...);</div>
<div class="line">  } <span class="keywordflow">else</span> {</div>
<div class="line">    <span class="keywordflow">return</span> m;</div>
<div class="line">  }</div>
<div class="line">}}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00326">326</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a3b0c4f263f282cbb330a4ca6b5ad10d9" name="a3b0c4f263f282cbb330a4ca6b5ad10d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b0c4f263f282cbb330a4ca6b5ad10d9">&#9670;&nbsp;</a></span>make_identity_generator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::make_identity_generator</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{[]() -&gt; std::generator&lt;Type&gt; {</div>
<div class="line">  <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Row) i{0}; i &lt; Row; ++i) {</div>
<div class="line">    <span class="keywordflow">for</span> (<span class="keyword">decltype</span>(Column) j{0}; j &lt; Column; ++j) {</div>
<div class="line">      <span class="keyword">co_yield</span> i == j;</div>
<div class="line">    }</div>
<div class="line">  }</div>
<div class="line">}}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00307">307</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a7fe918283834c2c859a7325fc8d3a563" name="a7fe918283834c2c859a7325fc8d3a563"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fe918283834c2c859a7325fc8d3a563">&#9670;&nbsp;</a></span>make_zero_generator</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::make_zero_generator</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{[]() -&gt; std::generator&lt;Type&gt; {</div>
<div class="line">  <span class="keywordflow">for</span> (<span class="keyword">auto</span> k{Row * Column}; k &gt; 0; --k) {</div>
<div class="line">    <span class="keyword">co_yield</span> 0.0;</div>
<div class="line">  }</div>
<div class="line">}}</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00316">316</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a02138eddd50d93b33b26d70dfbd80edf" name="a02138eddd50d93b33b26d70dfbd80edf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02138eddd50d93b33b26d70dfbd80edf">&#9670;&nbsp;</a></span>zero_v</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type  = double&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Type fcarouge::zero_v</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{internal::not_implemented&lt;Type&gt;{</div>
<div class="line">    <span class="stringliteral">&quot;Implement the linear algebra zero matrix for this type.&quot;</span>}}</div>
</div><!-- fragment -->
<p>The zero matrix. </p>
<p >User-defined. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00132">132</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="a8cc0f52579fef5ea2023d3927a3b1a7f" name="a8cc0f52579fef5ea2023d3927a3b1a7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8cc0f52579fef5ea2023d3927a3b1a7f">&#9670;&nbsp;</a></span>zero_v&lt; Arithmetic &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;arithmetic Arithmetic&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Arithmetic <a class="el" href="namespacefcarouge.xhtml#a02138eddd50d93b33b26d70dfbd80edf">fcarouge::zero_v</a>&lt; Arithmetic &gt; {0}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The singleton zero matrix specialization. </p>

<p class="definition">Definition at line <a class="el" href="utility_8hpp_source.xhtml#l00137">137</a> of file <a class="el" href="utility_8hpp_source.xhtml">utility.hpp</a>.</p>

</div>
</div>
<a id="a906ad0e7a837c8935b27497a2e02f2c4" name="a906ad0e7a837c8935b27497a2e02f2c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a906ad0e7a837c8935b27497a2e02f2c4">&#9670;&nbsp;</a></span>zero_v&lt; Matrix &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;eigen Matrix&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const auto <a class="el" href="namespacefcarouge.xhtml#a02138eddd50d93b33b26d70dfbd80edf">fcarouge::zero_v</a>&lt; Matrix &gt; {Matrix::Zero()}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The zero matrix Eigen specialization. </p>

<p class="definition">Definition at line <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00076">76</a> of file <a class="el" href="eigen_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
<a id="a27e109425619816f11a1c78c3a9e59f6" name="a27e109425619816f11a1c78c3a9e59f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27e109425619816f11a1c78c3a9e59f6">&#9670;&nbsp;</a></span>zero_v&lt; matrix&lt; Type, Row, Column &gt; &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type , auto Row, auto Column&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt;Type, Row, Column&gt; <a class="el" href="namespacefcarouge.xhtml#a02138eddd50d93b33b26d70dfbd80edf">fcarouge::zero_v</a>&lt; <a class="el" href="structfcarouge_1_1matrix.xhtml">matrix</a>&lt; Type, Row, Column &gt; &gt;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{[](<span class="keyword">auto</span>... args) {</div>
<div class="line">  matrix&lt;Type, Row, Column, true&gt; m{make_zero_generator&lt;Type, Row, Column&gt;()};</div>
<div class="line">  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<span class="keyword">sizeof</span>...(args)) {</div>
<div class="line">    <span class="keywordflow">return</span> m(args...);</div>
<div class="line">  } <span class="keywordflow">else</span> {</div>
<div class="line">    <span class="keywordflow">return</span> m;</div>
<div class="line">  }</div>
<div class="line">}}</div>
</div><!-- fragment -->
<p>The zero matrix lazy specialization. </p>
<p >The zero matrix naive specialization. </p>

<p class="definition">Definition at line <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml#l00338">338</a> of file <a class="el" href="lazy_2fcarouge_2linalg_8hpp_source.xhtml">linalg.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li>
    <li class="footer">Generated on Thu Jul 6 2023 01:57:52 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
