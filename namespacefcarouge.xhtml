<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman
   &#160;<span id="projectnumber">0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespacefcarouge.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">fcarouge Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Francois Carouge's projects namespace.  
<a href="namespacefcarouge.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacefcarouge_1_1benchmark"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1benchmark.xhtml">benchmark</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1benchmark"><td class="mdescLeft">&#160;</td><td class="mdescRight">Benchmark implementation. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1eigen"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1eigen.xhtml">eigen</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1internal"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1internal.xhtml">internal</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1internal"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation details. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1sample"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample.xhtml">sample</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1sample"><td class="mdescLeft">&#160;</td><td class="mdescRight">Examples, tutorials, demonstrators of the library. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacefcarouge_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1test.xhtml">test</a></td></tr>
<tr class="memdesc:namespacefcarouge_1_1test"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unit, integration, regression, and usage tests. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1transpose.xhtml">transpose</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1divide.xhtml">divide</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structfcarouge_1_1identity.xhtml">identity</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classfcarouge_1_1kalman.xhtml">kalman</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4dc9ea585453f05f12e9f765d08d545f"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">extrapolate_state</a> (const auto &amp;x, const auto &amp;f)</td></tr>
<tr class="separator:a4dc9ea585453f05f12e9f765d08d545f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba1ee7114d412e16f5368788b3ed133c"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#aba1ee7114d412e16f5368788b3ed133c">extrapolate_state</a> (const auto &amp;x, const auto &amp;f, const auto &amp;g, const auto &amp;u)</td></tr>
<tr class="separator:aba1ee7114d412e16f5368788b3ed133c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fa8ef3ebc122ecb5970fe5d5da5cb3d"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; class Transpose&gt; </td></tr>
<tr class="memitem:a9fa8ef3ebc122ecb5970fe5d5da5cb3d"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a9fa8ef3ebc122ecb5970fe5d5da5cb3d">extrapolate_covariance</a> (const auto &amp;p, const auto &amp;f, const auto &amp;q)</td></tr>
<tr class="separator:a9fa8ef3ebc122ecb5970fe5d5da5cb3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64c7abdbe0f3ab4923de70c86f602037"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize&gt; </td></tr>
<tr class="memitem:a64c7abdbe0f3ab4923de70c86f602037"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a64c7abdbe0f3ab4923de70c86f602037">predict</a> (auto &amp;x, auto &amp;p, const auto &amp;f, const auto &amp;q)</td></tr>
<tr class="separator:a64c7abdbe0f3ab4923de70c86f602037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1d214d789868b3303c570e6bc55d2fe"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize&gt; </td></tr>
<tr class="memitem:af1d214d789868b3303c570e6bc55d2fe"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#af1d214d789868b3303c570e6bc55d2fe">predict</a> (auto &amp;x, auto &amp;p, const auto &amp;f, const auto &amp;q, const auto &amp;g, const auto &amp;u)</td></tr>
<tr class="separator:af1d214d789868b3303c570e6bc55d2fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61a69029a3b95a26748d6bb35e6b33b6"><td class="memItemLeft" align="right" valign="top">auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">update_state</a> (const auto &amp;x, const auto &amp;k, const auto &amp;z, const auto &amp;h)</td></tr>
<tr class="separator:a61a69029a3b95a26748d6bb35e6b33b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61240a1a51b9bc2273b24f0459f4fc21"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Identity&gt; </td></tr>
<tr class="memitem:a61240a1a51b9bc2273b24f0459f4fc21"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a61240a1a51b9bc2273b24f0459f4fc21">update_covariance</a> (const auto &amp;p, const auto &amp;k, const auto &amp;h, const auto &amp;r)</td></tr>
<tr class="separator:a61240a1a51b9bc2273b24f0459f4fc21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afae063c524e1b8112db42713307a7ee3"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename, typename &gt; typename Divide&gt; </td></tr>
<tr class="memitem:afae063c524e1b8112db42713307a7ee3"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#afae063c524e1b8112db42713307a7ee3">weight_gain</a> (const auto &amp;p, const auto &amp;h, const auto &amp;r)</td></tr>
<tr class="separator:afae063c524e1b8112db42713307a7ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a276af45ca31e2b68b57a4b4015363984"><td class="memTemplParams" colspan="2">template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity&gt; </td></tr>
<tr class="memitem:a276af45ca31e2b68b57a4b4015363984"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge.xhtml#a276af45ca31e2b68b57a4b4015363984">update</a> (auto &amp;x, auto &amp;p, const auto &amp;h, const auto &amp;r, const auto &amp;z)</td></tr>
<tr class="separator:a276af45ca31e2b68b57a4b4015363984"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Francois Carouge's projects namespace. </p>
<p>The definitions and implementations of the library intended for public usage. Lowers the name conflict probability in large projects. Use using-declarations or namespace-alias-definition per your project guidelines. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="a9fa8ef3ebc122ecb5970fe5d5da5cb3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fa8ef3ebc122ecb5970fe5d5da5cb3d">&#9670;&nbsp;</a></span>extrapolate_covariance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; class Transpose&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::extrapolate_covariance </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>q</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00093">93</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">using</span> state_transition_f =</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(f)&gt;&gt;;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  Transpose&lt;state_transition_f&gt; transpose;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordflow">return</span> estimate_uncertainty_p{ f * p * transpose(f) + q };</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4dc9ea585453f05f12e9f765d08d545f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4dc9ea585453f05f12e9f765d08d545f">&#9670;&nbsp;</a></span>extrapolate_state() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::extrapolate_state </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00077">77</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordflow">return</span> State{ f * x };</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00106">predict()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a4dc9ea585453f05f12e9f765d08d545f_icgraph.svg" width="318" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aba1ee7114d412e16f5368788b3ed133c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba1ee7114d412e16f5368788b3ed133c">&#9670;&nbsp;</a></span>extrapolate_state() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::extrapolate_state </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>u</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00084">84</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">return</span> State{ f * x + g * u };</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a64c7abdbe0f3ab4923de70c86f602037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64c7abdbe0f3ab4923de70c86f602037">&#9670;&nbsp;</a></span>predict() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::predict </td>
          <td>(</td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>q</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00106">106</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#aba1ee7114d412e16f5368788b3ed133c">extrapolate_state</a>(x, f);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; symmetrize;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  p = symmetrize(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
<div class="ttc" id="anamespacefcarouge_xhtml_aba1ee7114d412e16f5368788b3ed133c"><div class="ttname"><a href="namespacefcarouge.xhtml#aba1ee7114d412e16f5368788b3ed133c">fcarouge::extrapolate_state</a></div><div class="ttdeci">auto extrapolate_state(const auto &amp;x, const auto &amp;f, const auto &amp;g, const auto &amp;u)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00084">kalman.hpp:84</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00077">extrapolate_state()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a64c7abdbe0f3ab4923de70c86f602037_cgraph.svg" width="318" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af1d214d789868b3303c570e6bc55d2fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1d214d789868b3303c570e6bc55d2fe">&#9670;&nbsp;</a></span>predict() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::predict </td>
          <td>(</td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>u</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00118">118</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#aba1ee7114d412e16f5368788b3ed133c">extrapolate_state</a>(x, f, g, u);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; symmetrize;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  p = symmetrize(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00077">extrapolate_state()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_af1d214d789868b3303c570e6bc55d2fe_cgraph.svg" width="318" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a276af45ca31e2b68b57a4b4015363984"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a276af45ca31e2b68b57a4b4015363984">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Symmetrize, template&lt; typename, typename &gt; typename Divide, template&lt; typename &gt; typename Identity&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void fcarouge::update </td>
          <td>(</td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>r</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00170">170</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span> k{ weight_gain&lt;Transpose, Divide&gt;(p, h, r) };</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">update_state</a>(x, k, z, h);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; symmetrize;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  p = symmetrize(update_covariance&lt;Transpose, Identity&gt;(p, k, h, r));</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="ttc" id="anamespacefcarouge_xhtml_a61a69029a3b95a26748d6bb35e6b33b6"><div class="ttname"><a href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">fcarouge::update_state</a></div><div class="ttdeci">auto update_state(const auto &amp;x, const auto &amp;k, const auto &amp;z, const auto &amp;h)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00129">kalman.hpp:129</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="kalman_8hpp_source.xhtml#l00129">update_state()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a276af45ca31e2b68b57a4b4015363984_cgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a61240a1a51b9bc2273b24f0459f4fc21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61240a1a51b9bc2273b24f0459f4fc21">&#9670;&nbsp;</a></span>update_covariance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename &gt; typename Identity&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::update_covariance </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00138">138</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">using</span> gain = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(k)&gt;&gt;;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  Transpose&lt;estimate_uncertainty_p&gt; transpose_p;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  Transpose&lt;gain&gt; transpose_k;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  Identity&lt;estimate_uncertainty_p&gt; i;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">return</span> estimate_uncertainty_p{ (i() - k * h) * p * transpose_p(i() - k * h) +</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                 k * r * transpose_k(k) };</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a61a69029a3b95a26748d6bb35e6b33b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61a69029a3b95a26748d6bb35e6b33b6">&#9670;&nbsp;</a></span>update_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::update_state </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>k</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00129">129</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">return</span> State{ x + k * (z - h * x) };</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="kalman_8hpp_source.xhtml#l00170">update()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespacefcarouge_a61a69029a3b95a26748d6bb35e6b33b6_icgraph.svg" width="330" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afae063c524e1b8112db42713307a7ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afae063c524e1b8112db42713307a7ee3">&#9670;&nbsp;</a></span>weight_gain()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;template&lt; typename &gt; typename Transpose, template&lt; typename, typename &gt; typename Divide&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">auto fcarouge::weight_gain </td>
          <td>(</td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const auto &amp;&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kalman_8hpp_source.xhtml#l00154">154</a> of file <a class="el" href="kalman_8hpp_source.xhtml">kalman.hpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">using</span> observation_h = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(h)&gt;&gt;;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">using</span> measurement_uncertainty_r =</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(r)&gt;&gt;;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">using</span> gain = std::invoke_result_t&lt;Transpose&lt;observation_h&gt;, observation_h&gt;;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  Transpose&lt;observation_h&gt; transpose_h;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  Divide&lt;gain, measurement_uncertainty_r&gt; divide;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> gain{ divide(p * transpose_h(h), h * p * transpose_h(h) + r) };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li>
    <li class="footer">Generated on Sun Apr 3 2022 04:55:30 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
