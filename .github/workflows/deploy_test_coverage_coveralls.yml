name: 'Deploy Code Coverage: Coveralls'

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master]
  schedule:
  - cron: '0 0 * * */5'

permissions:
  contents: read

jobs:
  build:
    permissions:
      checks: write # for coverallsapp/github-action to create new checks
      contents: read # for actions/checkout to fetch code
    runs-on: ubuntu-22.04
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
      with:
        egress-policy: audit
    - name: Checkout
      uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
    - name: 'Install'
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt upgrade
        sudo apt install g++-13 lcov
    - name: 'Configure'
      env:
        CXX: 'g++-13'
        CXXFLAGS: '-O0 -g --coverage -fno-inline -fno-exceptions'
        CC: 'gcc-13'
        CCFLAGS: '-O0 -g --coverage -fno-inline -fno-exceptions'
      run: cmake -S . -B 'build'
    - name: 'Build'
      run: cmake --build 'build' --verbose --parallel 4
    - name: 'Coverage: Base'
      run: |
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --capture --initial --directory . --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '*/benchmark/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '*/build/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '*/sample/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '*/source/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '*/test/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '/usr/*' --output-file base.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove base.info '10' --output-file base.info
    - name: 'Test'
      run: ctest --test-dir 'build' --tests-regex 'kalman' --verbose --parallel 4
    - name: 'Coverage: Test'
      run: |
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --capture --directory . --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '*/benchmark/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '*/build/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '*/sample/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '*/source/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '*/test/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '/usr/*' --output-file test.info
        lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --remove test.info '10' --output-file test.info
    - name: 'Coverage: Results'
      run: lcov --rc lcov_branch_coverage=1 --gcov-tool gcov-13 --rc lcov_branch_coverage=1 --add-tracefile base.info --add-tracefile test.info --output-file coverage.info
    - name: Coveralls
      uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0
      with:
        file: coverage.info
        format: lcov
        github-token: ${{ secrets.GITHUB_TOKEN }}
