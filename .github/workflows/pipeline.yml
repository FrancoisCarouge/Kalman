name: "Pipeline"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
  - cron: "0 0 * * *"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        config: ["Release", "Debug"]
        generator: ["Ninja", "Unix Makefiles"]
        exclude:
        - { os: "windows-latest", generator: "Unix Makefiles" }
    name: "${{ matrix.os }} / ${{ matrix.config }} / ${{ matrix.generator }}"
    runs-on: "${{ matrix.os }}"
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
    - name: "Tool: MSVC"
      if: ${{ matrix.os == 'windows-latest' }}
      uses: ilammy/msvc-dev-cmd@v1
    - name: "Tool: Ninja"
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.generator == 'Ninja' }}
      run: sudo apt install ninja-build
    - name: "Configure"
      run: cmake -S . -B "build" -G "${{ matrix.generator }}"
    - name: "Build"
      run: cmake --build "build" --config "${{ matrix.config }}" --verbose
    - name: "Test"
      run: ctest --test-dir "build" --config "${{ matrix.config }}" --tests-regex "kalman_(test|sample)" --verbose
    - name: "Install"
      run: cmake --install "build" --config "${{ matrix.config }}" --prefix "install" --verbose
    - name: "Package"
      run: cmake --build "build" --config "${{ matrix.config }}" --target "package" --verbose
    - name: "Package Source"
      run: cmake --build "build" --config "${{ matrix.config }}" --target "package_source" --verbose
