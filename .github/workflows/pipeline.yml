name: "Pipeline"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
  - cron: "0 0 * * *"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - { os: "ubuntu-latest", compiler: "clang++-15", generator: "Unix Makefiles", package: "clang-15"  }
        - { os: "ubuntu-latest", compiler: "clang++-16", generator: "Unix Makefiles", package: "clang-16"  }
        - { os: "ubuntu-latest", compiler: "g++-12", generator: "Unix Makefiles", package: "g++-12"  }
        - { os: "ubuntu-latest", compiler: "g++-13", generator: "Unix Makefiles", package: "g++-13"  }
        - { os: "windows-latest", compiler: "cl", generator: "Ninja", config: "Debug" }
        - { os: "windows-latest", compiler: "cl", generator: "Ninja", config: "Release" }
    name: "${{ matrix.os }} / ${{ matrix.compiler }} / ${{ matrix.generator }} / ${{ matrix.config }}"
    runs-on: "${{ matrix.os }}"
    steps:
    - name: "Checkout"
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    - name: "Tool: Microsoft Windows"
      uses: ilammy/msvc-dev-cmd@cec98b9d092141f74527d0afa6feb2af698cfe89 # v1.12.1
    - name: "Tool: Ubuntu"
      if: ${{ matrix.package == 'g++-12' ||
              matrix.package == 'g++-13' ||
              matrix.package == 'clang-15' }}
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt upgrade
        sudo apt install "${{ matrix.package }}"
    - name: "Tool: Clang 16"
      if: ${{ matrix.package == 'clang-16' }}
      run: |
        sudo apt update
        sudo apt upgrade
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all
    - name: "Configure"
      env:
        CXX: "${{ matrix.compiler }}"
      run: cmake -S . -B "build" -G "${{ matrix.generator }}"
    - name: "Build"
      run: cmake --build "build" --config "${{ matrix.config }}" --verbose --parallel 4
    - name: "Test"
      run: ctest --test-dir "build" --config "${{ matrix.config }}" --tests-regex "kalman_(test|sample|benchmark)" --verbose --parallel 4
    - name: "Install"
      run: cmake --install "build" --config "${{ matrix.config }}" --prefix "install" --verbose
    - name: "Package"
      run: cmake --build "build" --config "${{ matrix.config }}" --target "package" --verbose --parallel 4
    - name: "Package Source"
      run: cmake --build "build" --config "${{ matrix.config }}" --target "package_source" --verbose --parallel 4
