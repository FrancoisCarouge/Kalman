name: 'Pipeline'

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]
  schedule:
  - cron: '0 0 * * */5'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - { os: 'ubuntu-24.04', cxx: 'clang++-18', cc: 'clang-18', generator: 'Unix Makefiles', packages: 'clang-18'  }
        - { os: 'ubuntu-24.04', cxx: 'g++-14', cc: 'gcc-14', generator: 'Unix Makefiles', packages: 'g++-14'  }
        - { os: 'windows-2022', cxx: 'cl', cc: 'cl', generator: 'Ninja', config: 'Debug' }
        - { os: 'windows-2022', cxx: 'cl', cc: 'cl', generator: 'Ninja', config: 'Release' }
    name: '${{ matrix.os }} / ${{ matrix.cxx }} / ${{ matrix.generator }} / ${{ matrix.config }}'
    runs-on: '${{ matrix.os }}'
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
      with:
        egress-policy: audit
    - name: 'Checkout'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: 'Install: MSVC'
      uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0
    - name: 'Configure'
      env:
        CXX: '${{ matrix.cxx }}'
        CC: '${{ matrix.cc }}'
      run: cmake -S . -B 'build' -G '${{ matrix.generator }}'
    - name: 'Build'
      run: cmake --build 'build' --config '${{ matrix.config }}' --verbose --parallel 4
    - name: 'Test'
      run: ctest --test-dir 'build' --build-config '${{ matrix.config }}' --timeout 2 --tests-regex 'kalman' --verbose --parallel 4
    - name: 'Install'
      run: cmake --install 'build' --config '${{ matrix.config }}' --prefix 'install' --verbose
    - name: 'Package'
      run: cmake --build 'build' --target 'package' --verbose --parallel 4
