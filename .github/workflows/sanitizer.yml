name: 'Sanitizer'

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]
  schedule:
  - cron: '0 0 * * */5'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        sanitizer:
        - name: 'Address'
          cpp_flags: '-g -O0 -fsanitize=address'
          run_flags: 'ASAN_OPTIONS=verbosity=2:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1'
        - name: 'Leak'
          cpp_flags: '-g -O0 -fsanitize=leak'
          run_flags: 'LSAN_OPTIONS=verbosity=2'
        - name: 'Thread'
          cpp_flags: '-g -O0 -fsanitize=thread'
          run_flags: 'TSAN_OPTIONS=verbosity=2'
        - name: 'Undefined'
          cpp_flags: '-g -O0 -fsanitize=undefined'
          run_flags: 'UBSAN_OPTIONS=verbosity=2'
    name: '${{ matrix.sanitizer.name }}'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    env:
      CXXFLAGS: '${{ matrix.sanitizer.cpp_flags }}'
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit
    - name: 'Checkout'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: 'Configure'
      env:
        CXX: 'g++-14'
        CC: 'gcc-14'
      run: cmake -S . -B 'build'
    - name: 'Build'
      run: cmake --build 'build' --verbose --parallel 4
    - name: 'Test'
      run: ${{ matrix.sanitizer.run_flags }} ctest --test-dir 'build' --timeout 5 --tests-regex 'kalman_(test|sample)' --verbose --parallel 4
