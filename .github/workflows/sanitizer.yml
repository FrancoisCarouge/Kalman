name: "Sanitizer"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
  - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        sanitizer:
        - name: "Address"
          cpp_flags: "-g -O0 -fsanitize=address"
          run_flags: "ASAN_OPTIONS=verbosity=2:strict_string_checks=1:detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1"
        - name: "Leak"
          cpp_flags: "-g -O0 -fsanitize=leak"
          run_flags: "LSAN_OPTIONS=verbosity=2"
        - name: "Thread"
          cpp_flags: "-g -O0 -fsanitize=thread"
          run_flags: "TSAN_OPTIONS=verbosity=2"
        - name: "Undefined"
          cpp_flags: "-g -O0 -fsanitize=undefined"
          run_flags: "UBSAN_OPTIONS=verbosity=2"
    name: "${{ matrix.sanitizer.name }}"
    runs-on: ubuntu-latest
    env:
      CXXFLAGS: "${{ matrix.sanitizer.cpp_flags }}"
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
      with:
        egress-policy: audit

    - name: "Checkout"
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
    - name: "Configure"
      env:
        CXX: "g++-12"
      run: cmake -S . -B "build"
    - name: "Build"
      run: cmake --build "build" --verbose --parallel 4
    - name: "Test"
      run: ${{ matrix.sanitizer.run_flags }} ctest --test-dir "build" --tests-regex "kalman_(test|sample)" --verbose --parallel 4
