<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.5.1</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structfcarouge_1_1indexed_1_1matrix.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="structfcarouge_1_1indexed_1_1matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Indexed matrix.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Private Member Types</div></td></tr>
<tr><td colspan="2"><div class="groupText"><dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000034">Todo</a></b></dt><dd>Privatize this section. </dd></dl>
</div></td></tr>
<tr class="memitem:a8b3caabb83f1e4b36f87627af89bd702" id="r_a8b3caabb83f1e4b36f87627af89bd702"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8b3caabb83f1e4b36f87627af89bd702">underlying</a> = <a class="el" href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">underlying_t</a>&lt;Matrix&gt;</td></tr>
<tr class="memdesc:a8b3caabb83f1e4b36f87627af89bd702"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of the element's underlying storage.  <br /></td></tr>
<tr class="separator:a8b3caabb83f1e4b36f87627af89bd702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Types</div></td></tr>
<tr class="memitem:a10bf8982f5711ee8ace2dc6348194cf8" id="r_a10bf8982f5711ee8ace2dc6348194cf8"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10bf8982f5711ee8ace2dc6348194cf8">row_indexes</a> = RowIndexes</td></tr>
<tr class="memdesc:a10bf8982f5711ee8ace2dc6348194cf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The tuple with the row components of the indexes.  <br /></td></tr>
<tr class="separator:a10bf8982f5711ee8ace2dc6348194cf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac45899f5688c7cbb2345d74c36cf566" id="r_aac45899f5688c7cbb2345d74c36cf566"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac45899f5688c7cbb2345d74c36cf566">column_indexes</a> = ColumnIndexes</td></tr>
<tr class="memdesc:aac45899f5688c7cbb2345d74c36cf566"><td class="mdescLeft">&#160;</td><td class="mdescRight">The tuple with the column components of the indexes.  <br /></td></tr>
<tr class="separator:aac45899f5688c7cbb2345d74c36cf566"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5037e1095055c87efa8fe9ec5e5519f" id="r_aa5037e1095055c87efa8fe9ec5e5519f"><td class="memTemplParams" colspan="2">template&lt;std::size_t RowIndex, std::size_t ColumnIndex&gt; </td></tr>
<tr class="memitem:aa5037e1095055c87efa8fe9ec5e5519f"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a> = <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>, RowIndex, ColumnIndex&gt;</td></tr>
<tr class="memdesc:aa5037e1095055c87efa8fe9ec5e5519f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of the element at the given matrix indexes position.  <br /></td></tr>
<tr class="separator:aa5037e1095055c87efa8fe9ec5e5519f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Private Member Functions</div></td></tr>
<tr class="memitem:a05f1a2a28da177120bf5b3b2d7d2e2a8" id="r_a05f1a2a28da177120bf5b3b2d7d2e2a8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a05f1a2a28da177120bf5b3b2d7d2e2a8">matrix</a> (const Matrix &amp;other)</td></tr>
<tr class="separator:a05f1a2a28da177120bf5b3b2d7d2e2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Functions</div></td></tr>
<tr class="memitem:a961babc884168f5958d6a41a67e6cd9c" id="r_a961babc884168f5958d6a41a67e6cd9c"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a961babc884168f5958d6a41a67e6cd9c">matrix</a> ()=default</td></tr>
<tr class="separator:a961babc884168f5958d6a41a67e6cd9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb2b9757a13fe56845b8341c97d4120b" id="r_adb2b9757a13fe56845b8341c97d4120b"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adb2b9757a13fe56845b8341c97d4120b">matrix</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other)=default</td></tr>
<tr class="separator:adb2b9757a13fe56845b8341c97d4120b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab31fcca43d93d2cb30ee7dd657ff2d8" id="r_aab31fcca43d93d2cb30ee7dd657ff2d8"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab31fcca43d93d2cb30ee7dd657ff2d8">operator=</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other)=default</td></tr>
<tr class="separator:aab31fcca43d93d2cb30ee7dd657ff2d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b238d94c643c5ee749fae955e43d41" id="r_ac7b238d94c643c5ee749fae955e43d41"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7b238d94c643c5ee749fae955e43d41">matrix</a> (<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:ac7b238d94c643c5ee749fae955e43d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6c56fa45f43cde7a8d49e854602b230" id="r_aa6c56fa45f43cde7a8d49e854602b230"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa6c56fa45f43cde7a8d49e854602b230">operator=</a> (<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:aa6c56fa45f43cde7a8d49e854602b230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada3b2d2d61f670a3829f07ac05ceb810" id="r_ada3b2d2d61f670a3829f07ac05ceb810"><td class="memTemplParams" colspan="2">template&lt;kalman_internal::algebraic OtherMatrix&gt; </td></tr>
<tr class="memitem:ada3b2d2d61f670a3829f07ac05ceb810"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ada3b2d2d61f670a3829f07ac05ceb810">matrix</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;other)</td></tr>
<tr class="separator:ada3b2d2d61f670a3829f07ac05ceb810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca230ed8fb4681ae06f68d7a8784d59" id="r_a3ca230ed8fb4681ae06f68d7a8784d59"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3ca230ed8fb4681ae06f68d7a8784d59">matrix</a> (const <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; 0, 0 &gt;(&amp;elements)[<a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt; RowIndexes &gt; *<a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt; ColumnIndexes &gt;])</td></tr>
<tr class="separator:a3ca230ed8fb4681ae06f68d7a8784d59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44bddf3783dd97f849f83e9b975fbffc" id="r_a44bddf3783dd97f849f83e9b975fbffc"><td class="memTemplParams" colspan="2">template&lt;kalman_internal::arithmetic Type&gt; <br />
requires singleton&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;</td></tr>
<tr class="memitem:a44bddf3783dd97f849f83e9b975fbffc"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a44bddf3783dd97f849f83e9b975fbffc">matrix</a> (const Type &amp;value)</td></tr>
<tr class="separator:a44bddf3783dd97f849f83e9b975fbffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036724133c861d73b44fc8115aff2a94" id="r_a036724133c861d73b44fc8115aff2a94"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; <br />
requires uniform&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;</td></tr>
<tr class="memitem:a036724133c861d73b44fc8115aff2a94"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a036724133c861d73b44fc8115aff2a94">matrix</a> (std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; row_list)</td></tr>
<tr class="separator:a036724133c861d73b44fc8115aff2a94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a585593c99406c287069fd5722e98a4b3" id="r_a585593c99406c287069fd5722e98a4b3"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; <br />
requires row&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; (not column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;) &amp;&amp; same_size&lt;ColumnIndexes, std::tuple&lt;Types...&gt;&gt;</td></tr>
<tr class="memitem:a585593c99406c287069fd5722e98a4b3"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a585593c99406c287069fd5722e98a4b3">matrix</a> (const Types &amp;...values)</td></tr>
<tr class="separator:a585593c99406c287069fd5722e98a4b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c2c2d3895fcd49eb21b2854ea58229" id="r_ae6c2c2d3895fcd49eb21b2854ea58229"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; <br />
requires column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; (not row&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;) &amp;&amp; same_size&lt;RowIndexes, std::tuple&lt;Types...&gt;&gt;</td></tr>
<tr class="memitem:ae6c2c2d3895fcd49eb21b2854ea58229"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ae6c2c2d3895fcd49eb21b2854ea58229">matrix</a> (const Types &amp;...values)</td></tr>
<tr class="separator:ae6c2c2d3895fcd49eb21b2854ea58229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe443c568bb91e261cbe83018a65947d" id="r_afe443c568bb91e261cbe83018a65947d"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe443c568bb91e261cbe83018a65947d">explicit</a> (false) operator <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; 0</td></tr>
<tr class="separator:afe443c568bb91e261cbe83018a65947d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa45b4efc013359081fa287fabf03aecd" id="r_aa45b4efc013359081fa287fabf03aecd"><td class="memItemLeft" align="right" valign="top">constexpr &amp;constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa45b4efc013359081fa287fabf03aecd">operator[]</a> (this auto &amp;&amp;self, std::size_t index) uniform&lt; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &gt; &amp;&amp;one_dimension&lt; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &gt;</td></tr>
<tr class="separator:aa45b4efc013359081fa287fabf03aecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1386e65537f53ebc77017aa0ed8190c5" id="r_a1386e65537f53ebc77017aa0ed8190c5"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1386e65537f53ebc77017aa0ed8190c5">operator[]</a> (this auto &amp;&amp;self, std::size_t row, std::size_t column)</td></tr>
<tr class="separator:a1386e65537f53ebc77017aa0ed8190c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a47084485ea26bc81e356110e4d2be2" id="r_a7a47084485ea26bc81e356110e4d2be2"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7a47084485ea26bc81e356110e4d2be2">operator()</a> (this auto &amp;&amp;self, std::size_t index)</td></tr>
<tr class="separator:a7a47084485ea26bc81e356110e4d2be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af566217829c395858d9c6d5f8951307b" id="r_af566217829c395858d9c6d5f8951307b"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af566217829c395858d9c6d5f8951307b">operator()</a> (this auto &amp;&amp;self, std::size_t row, std::size_t column)</td></tr>
<tr class="separator:af566217829c395858d9c6d5f8951307b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa987ecc78d523318128c178db115128a" id="r_aa987ecc78d523318128c178db115128a"><td class="memTemplParams" colspan="2">template&lt;std::size_t Row, std::size_t Column&gt; <br />
requires in_range&lt;Row, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;RowIndexes&gt;&gt; &amp;&amp; in_range&lt;Column, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:aa987ecc78d523318128c178db115128a"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; Row, Column &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aa987ecc78d523318128c178db115128a">at</a> ()</td></tr>
<tr class="separator:aa987ecc78d523318128c178db115128a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c3a1388b29319a8c11171dbe04bdd62" id="r_a0c3a1388b29319a8c11171dbe04bdd62"><td class="memTemplParams" colspan="2">template&lt;std::size_t Index&gt; <br />
requires column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; in_range&lt;Index, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;RowIndexes&gt;&gt;</td></tr>
<tr class="memitem:a0c3a1388b29319a8c11171dbe04bdd62"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; Index, 0 &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a0c3a1388b29319a8c11171dbe04bdd62">at</a> ()</td></tr>
<tr class="separator:a0c3a1388b29319a8c11171dbe04bdd62"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Private Member Variables</div></td></tr>
<tr class="memitem:afe3f85237b8320e3ee8bf0de633f2209" id="r_afe3f85237b8320e3ee8bf0de633f2209"><td class="memItemLeft" align="right" valign="top">Matrix&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a></td></tr>
<tr class="separator:afe3f85237b8320e3ee8bf0de633f2209"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public Member Variables</div></td></tr>
<tr class="memitem:af54a6f995c8a6849a6955472939f2fc2" id="r_af54a6f995c8a6849a6955472939f2fc2"><td class="memItemLeft" align="right" valign="top">static constexpr std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af54a6f995c8a6849a6955472939f2fc2">rows</a> {<a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;<a class="el" href="#a10bf8982f5711ee8ace2dc6348194cf8">row_indexes</a>&gt;}</td></tr>
<tr class="memdesc:af54a6f995c8a6849a6955472939f2fc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">The count of rows.  <br /></td></tr>
<tr class="separator:af54a6f995c8a6849a6955472939f2fc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6c96a982783c79d0ce8c94c9bb4fb7b" id="r_ac6c96a982783c79d0ce8c94c9bb4fb7b"><td class="memItemLeft" align="right" valign="top">static constexpr std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6c96a982783c79d0ce8c94c9bb4fb7b">columns</a></td></tr>
<tr class="memdesc:ac6c96a982783c79d0ce8c94c9bb4fb7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The count of rows.  <br /></td></tr>
<tr class="separator:ac6c96a982783c79d0ce8c94c9bb4fb7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;kalman_internal::algebraic Matrix, typename RowIndexes, typename ColumnIndexes&gt;<br />
struct fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;</div><p>Indexed matrix. </p>
<p>Compose a linear algebra backend matrix into an indexed matrix. Row and column indexes provide each element's index type.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Matrix</td><td>The underlying linear algebra matrix. </td></tr>
    <tr><td class="paramname">RowIndexes</td><td>The packed types of the row indexes. </td></tr>
    <tr><td class="paramname">ColumnIndexes</td><td>The packed types of the column indexes.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Type safety cannot be guaranteed at compilation time without index safety. The index can either be non-type template parameters or strong types overloadings. Converting a runtime index to a dependent template type is not possible. A proxy reference could be used to allow traditional assignment syntax but the runtime check and extra indirection are not interesting tradeoffs. A template call operator can be used for getting a type safe value but impractical syntax for setting. Without index safety, the accepted tradeoff is a templated index <code>at&lt;i, j&gt;()</code> method.</dd>
<dd>
Deduction guides are tricky because a given element type comes from a row and column index to be deduced. </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00152">152</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aac45899f5688c7cbb2345d74c36cf566" name="aac45899f5688c7cbb2345d74c36cf566"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac45899f5688c7cbb2345d74c36cf566">&#9670;&#160;</a></span>column_indexes</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::column_indexes = ColumnIndexes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The tuple with the column components of the indexes. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00186">186</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<a id="aa5037e1095055c87efa8fe9ec5e5519f" name="aa5037e1095055c87efa8fe9ec5e5519f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5037e1095055c87efa8fe9ec5e5519f">&#9670;&#160;</a></span>element</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t RowIndex, std::size_t ColumnIndex&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::element = <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>, RowIndex, ColumnIndex&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The type of the element at the given matrix indexes position. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00190">190</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<a id="a10bf8982f5711ee8ace2dc6348194cf8" name="a10bf8982f5711ee8ace2dc6348194cf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10bf8982f5711ee8ace2dc6348194cf8">&#9670;&#160;</a></span>row_indexes</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::row_indexes = RowIndexes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The tuple with the row components of the indexes. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00183">183</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<a id="a8b3caabb83f1e4b36f87627af89bd702" name="a8b3caabb83f1e4b36f87627af89bd702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b3caabb83f1e4b36f87627af89bd702">&#9670;&#160;</a></span>underlying</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::underlying = <a class="el" href="namespacefcarouge_1_1indexed.xhtml#a3dedee0afdc6e0f5295c316569484956">underlying_t</a>&lt;Matrix&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The type of the element's underlying storage. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00159">159</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a05f1a2a28da177120bf5b3b2d7d2e2a8" name="a05f1a2a28da177120bf5b3b2d7d2e2a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f1a2a28da177120bf5b3b2d7d2e2a8">&#9670;&#160;</a></span>matrix() <span class="overload">[1/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Matrix &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000035">Todo</a></b></dt><dd>Can this be removed altogether? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00167">167</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  167</span>: <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other} {}</div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_afe3f85237b8320e3ee8bf0de633f2209"><div class="ttname"><a href="#afe3f85237b8320e3ee8bf0de633f2209">fcarouge::indexed::matrix::data</a></div><div class="ttdeci">Matrix data</div><div class="ttdef"><b>Definition</b> <a href="indexed_8hpp_source.xhtml#l00174">indexed.hpp:174</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a961babc884168f5958d6a41a67e6cd9c" name="a961babc884168f5958d6a41a67e6cd9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a961babc884168f5958d6a41a67e6cd9c">&#9670;&#160;</a></span>matrix() <span class="overload">[2/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb2b9757a13fe56845b8341c97d4120b" name="adb2b9757a13fe56845b8341c97d4120b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb2b9757a13fe56845b8341c97d4120b">&#9670;&#160;</a></span>matrix() <span class="overload">[3/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7b238d94c643c5ee749fae955e43d41" name="ac7b238d94c643c5ee749fae955e43d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7b238d94c643c5ee749fae955e43d41">&#9670;&#160;</a></span>matrix() <span class="overload">[4/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada3b2d2d61f670a3829f07ac05ceb810" name="ada3b2d2d61f670a3829f07ac05ceb810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada3b2d2d61f670a3829f07ac05ceb810">&#9670;&#160;</a></span>matrix() <span class="overload">[5/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;kalman_internal::algebraic OtherMatrix&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000037">Todo</a></b></dt><dd>Requires evaluated types of Matrix and OtherMatrix are identical? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00221">221</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  223</span>      : <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other.data} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a3ca230ed8fb4681ae06f68d7a8784d59" name="a3ca230ed8fb4681ae06f68d7a8784d59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ca230ed8fb4681ae06f68d7a8784d59">&#9670;&#160;</a></span>matrix() <span class="overload">[6/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; 0, 0 &gt;(&amp;)</td>          <td class="paramname"><span class="paramname"><em>elements</em></span>[kalman_internal::size&lt; RowIndexes &gt; *kalman_internal::size&lt; ColumnIndexes &gt;]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00225">225</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  229</span>      : <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{elements} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a44bddf3783dd97f849f83e9b975fbffc" name="a44bddf3783dd97f849f83e9b975fbffc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44bddf3783dd97f849f83e9b975fbffc">&#9670;&#160;</a></span>matrix() <span class="overload">[7/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;kalman_internal::arithmetic Type&gt; <br />
requires singleton&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Type &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00233">233</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  233</span>                                                      {</div>
<div class="line"><span class="lineno">  234</span>    <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, 0) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  235</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1element__traits_xhtml_a8d479a35602790f3dff1ac6975b58748"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">fcarouge::indexed::element_traits::to_underlying</a></div><div class="ttdeci">static constexpr Underlying to_underlying(Type value)</div><div class="ttdef"><b>Definition</b> <a href="indexed_8hpp_source.xhtml#l00117">indexed.hpp:117</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00117">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-1" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_a44bddf3783dd97f849f83e9b975fbffc_cgraph.svg" width="372" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a036724133c861d73b44fc8115aff2a94" name="a036724133c861d73b44fc8115aff2a94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a036724133c861d73b44fc8115aff2a94">&#9670;&#160;</a></span>matrix() <span class="overload">[8/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename Type &gt; <br />
requires uniform&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt;</td>          <td class="paramname"><span class="paramname"><em>row_list</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000038">Todo</a></b></dt><dd>Verify the list sizes at runtime? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00239">239</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  242</span>  {</div>
<div class="line"><span class="lineno">  243</span>    <span class="keywordflow">for</span> (std::size_t i{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;row : row_list) {</div>
<div class="line"><span class="lineno">  244</span>      <span class="keywordflow">for</span> (std::size_t j{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;value : row) {</div>
<div class="line"><span class="lineno">  245</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(i, j) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  246</span>        ++j;</div>
<div class="line"><span class="lineno">  247</span>      }</div>
<div class="line"><span class="lineno">  248</span>      ++i;</div>
<div class="line"><span class="lineno">  249</span>    }</div>
<div class="line"><span class="lineno">  250</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00117">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-2" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_a036724133c861d73b44fc8115aff2a94_cgraph.svg" width="372" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a585593c99406c287069fd5722e98a4b3" name="a585593c99406c287069fd5722e98a4b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a585593c99406c287069fd5722e98a4b3">&#9670;&#160;</a></span>matrix() <span class="overload">[9/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename... Types&gt; <br />
requires row&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; (not column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;) &amp;&amp; same_size&lt;ColumnIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Types &amp;...</td>          <td class="paramname"><span class="paramname"><em>values</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000039">Todo</a></b></dt><dd><p class="startdd">Combine the two constructors in ome? </p>
<p class="interdd">Verify if the types are the same, or assignable, for nicer error? </p>
<p class="enddd">Rewrite with a fold expression over the pack? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00258">258</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  258</span>                                                           {</div>
<div class="line"><span class="lineno">  259</span>    std::tuple value_pack{values...};</div>
<div class="line"><span class="lineno">  260</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">kalman_internal::for_constexpr&lt;0, kalman_internal::size&lt;ColumnIndexes&gt;</a>, 1&gt;(</div>
<div class="line"><span class="lineno">  261</span>        [<span class="keyword">this</span>, &amp;value_pack](<span class="keyword">auto</span> <a class="code hl_typedef" href="namespacefcarouge.xhtml#a0480c6f84be0a01264da3eb984c103e1">position</a>) {</div>
<div class="line"><span class="lineno">  262</span>          <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><span class="lineno">  263</span>          <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><span class="lineno">  264</span>          <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>[<a class="code hl_typedef" href="namespacefcarouge.xhtml#a0480c6f84be0a01264da3eb984c103e1">position</a>] =</div>
<div class="line"><span class="lineno">  265</span>              <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  266</span>        });</div>
<div class="line"><span class="lineno">  267</span>  }</div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a6baba1af637abe5f76f3b5184d0ff3c6"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">fcarouge::kalman_internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00395">utility.hpp:395</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a0480c6f84be0a01264da3eb984c103e1"><div class="ttname"><a href="namespacefcarouge.xhtml#a0480c6f84be0a01264da3eb984c103e1">fcarouge::position</a></div><div class="ttdeci">mp_units::quantity_point&lt; mp_units::isq::length[m]&gt; position</div><div class="ttdef"><b>Definition</b> <a href="unit_8hpp_source.xhtml#l00068">unit.hpp:68</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, <a class="el" href="utility_8hpp_source.xhtml#l00395">fcarouge::kalman_internal::for_constexpr()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00117">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-3" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_a585593c99406c287069fd5722e98a4b3_cgraph.svg" width="588" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae6c2c2d3895fcd49eb21b2854ea58229" name="ae6c2c2d3895fcd49eb21b2854ea58229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6c2c2d3895fcd49eb21b2854ea58229">&#9670;&#160;</a></span>matrix() <span class="overload">[10/10]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename... Types&gt; <br />
requires column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; (not row&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt;) &amp;&amp; same_size&lt;RowIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Types &amp;...</td>          <td class="paramname"><span class="paramname"><em>values</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00272">272</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  272</span>                                                  {</div>
<div class="line"><span class="lineno">  273</span>    std::tuple value_pack{values...};</div>
<div class="line"><span class="lineno">  274</span>    <a class="code hl_function" href="namespacefcarouge_1_1kalman__internal.xhtml#a6baba1af637abe5f76f3b5184d0ff3c6">kalman_internal::for_constexpr&lt;0, kalman_internal::size&lt;RowIndexes&gt;</a>, 1&gt;(</div>
<div class="line"><span class="lineno">  275</span>        [<span class="keyword">this</span>, &amp;value_pack](<span class="keyword">auto</span> <a class="code hl_typedef" href="namespacefcarouge.xhtml#a0480c6f84be0a01264da3eb984c103e1">position</a>) {</div>
<div class="line"><span class="lineno">  276</span>          <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><span class="lineno">  277</span>          <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><span class="lineno">  278</span>          <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>[<a class="code hl_typedef" href="namespacefcarouge.xhtml#a0480c6f84be0a01264da3eb984c103e1">position</a>] =</div>
<div class="line"><span class="lineno">  279</span>              <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  280</span>        });</div>
<div class="line"><span class="lineno">  281</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, <a class="el" href="utility_8hpp_source.xhtml#l00395">fcarouge::kalman_internal::for_constexpr()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00117">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-4" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_ae6c2c2d3895fcd49eb21b2854ea58229_cgraph.svg" width="588" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa987ecc78d523318128c178db115128a" name="aa987ecc78d523318128c178db115128a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa987ecc78d523318128c178db115128a">&#9670;&#160;</a></span>at() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t Row, std::size_t Column&gt; <br />
requires in_range&lt;Row, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;RowIndexes&gt;&gt; &amp;&amp; in_range&lt;Column, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; Row, Column &gt; &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00321">321</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  321</span>                                                            {</div>
<div class="line"><span class="lineno">  322</span>    <span class="keywordflow">return</span> element_traits&lt;underlying, element&lt;Row, Column&gt;&gt;::from_underlying(</div>
<div class="line"><span class="lineno">  323</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Row}, std::size_t{Column}));</div>
<div class="line"><span class="lineno">  324</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="a0c3a1388b29319a8c11171dbe04bdd62" name="a0c3a1388b29319a8c11171dbe04bdd62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c3a1388b29319a8c11171dbe04bdd62">&#9670;&#160;</a></span>at() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t Index&gt; <br />
requires column&lt;<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&gt; &amp;&amp; in_range&lt;Index, 0, <a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;RowIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#aa5037e1095055c87efa8fe9ec5e5519f">element</a>&lt; Index, 0 &gt; &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00329">329</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  329</span>                                                         {</div>
<div class="line"><span class="lineno">  330</span>    <span class="keywordflow">return</span> element_traits&lt;underlying, element&lt;Index, 0&gt;&gt;::from_underlying(</div>
<div class="line"><span class="lineno">  331</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Index}));</div>
<div class="line"><span class="lineno">  332</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="afe443c568bb91e261cbe83018a65947d" name="afe443c568bb91e261cbe83018a65947d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe443c568bb91e261cbe83018a65947d">&#9670;&#160;</a></span>explicit()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00174">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="a7a47084485ea26bc81e356110e4d2be2" name="a7a47084485ea26bc81e356110e4d2be2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a47084485ea26bc81e356110e4d2be2">&#9670;&#160;</a></span>operator()() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00304">304</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  307</span>  {</div>
<div class="line"><span class="lineno">  308</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index);</div>
<div class="line"><span class="lineno">  309</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="af566217829c395858d9c6d5f8951307b" name="af566217829c395858d9c6d5f8951307b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af566217829c395858d9c6d5f8951307b">&#9670;&#160;</a></span>operator()() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>row</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>column</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00312">312</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  314</span>  {</div>
<div class="line"><span class="lineno">  315</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(row, column);</div>
<div class="line"><span class="lineno">  316</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aab31fcca43d93d2cb30ee7dd657ff2d8" name="aab31fcca43d93d2cb30ee7dd657ff2d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab31fcca43d93d2cb30ee7dd657ff2d8">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6c56fa45f43cde7a8d49e854602b230" name="aa6c56fa45f43cde7a8d49e854602b230"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6c56fa45f43cde7a8d49e854602b230">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa45b4efc013359081fa287fabf03aecd" name="aa45b4efc013359081fa287fabf03aecd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa45b4efc013359081fa287fabf03aecd">&#9670;&#160;</a></span>operator[]() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">&amp;constexpr auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;) &amp;&amp;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00290">290</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  293</span>  {</div>
<div class="line"><span class="lineno">  294</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index);</div>
<div class="line"><span class="lineno">  295</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a1386e65537f53ebc77017aa0ed8190c5" name="a1386e65537f53ebc77017aa0ed8190c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1386e65537f53ebc77017aa0ed8190c5">&#9670;&#160;</a></span>operator[]() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>row</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>column</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00298">298</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  300</span>  {</div>
<div class="line"><span class="lineno">  301</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(row, column);</div>
<div class="line"><span class="lineno">  302</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ac6c96a982783c79d0ce8c94c9bb4fb7b" name="ac6c96a982783c79d0ce8c94c9bb4fb7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6c96a982783c79d0ce8c94c9bb4fb7b">&#9670;&#160;</a></span>columns</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::columns</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">      <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size&lt;column_indexes&gt;</a>}</div>
<div class="ttc" id="anamespacefcarouge_1_1kalman__internal_xhtml_a185d15024c6842a0f6faad97ce898221"><div class="ttname"><a href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">fcarouge::kalman_internal::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00425">utility.hpp:425</a></div></div>
</div><!-- fragment -->
<p>The count of rows. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00201">201</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  201</span>                                           {</div>
<div class="line"><span class="lineno">  202</span>      <a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size&lt;column_indexes&gt;</a>};</div>
</div><!-- fragment -->
</div>
</div>
<a id="afe3f85237b8320e3ee8bf0de633f2209" name="afe3f85237b8320e3ee8bf0de633f2209"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe3f85237b8320e3ee8bf0de633f2209">&#9670;&#160;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Matrix <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00174">174</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="indexed_8hpp_source.xhtml#l00321">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at()</a>, <a class="el" href="#afe443c568bb91e261cbe83018a65947d">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::explicit()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00233">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00258">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00239">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00386">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00360">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00377">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00401">fcarouge::indexed::operator+()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00418">fcarouge::indexed::operator-()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00444">fcarouge::indexed::operator/()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00434">fcarouge::indexed::operator/()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00352">fcarouge::indexed::operator==()</a>.</p>

</div>
</div>
<a id="af54a6f995c8a6849a6955472939f2fc2" name="af54a6f995c8a6849a6955472939f2fc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af54a6f995c8a6849a6955472939f2fc2">&#9670;&#160;</a></span>rows</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;kalman_internal::algebraic Matrix, typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::rows {<a class="el" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size</a>&lt;<a class="el" href="#a10bf8982f5711ee8ace2dc6348194cf8">row_indexes</a>&gt;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The count of rows. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00198">198</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  198</span>{<a class="code hl_variable" href="namespacefcarouge_1_1kalman__internal.xhtml#a185d15024c6842a0f6faad97ce898221">kalman_internal::size&lt;row_indexes&gt;</a>};</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/support/indexed/fcarouge/<a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1indexed.xhtml">indexed</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
