<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structfcarouge_1_1indexed_1_1matrix.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structfcarouge_1_1indexed_1_1matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Indexed matrix.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac4fe70f72b6c5b01124418fda6209253" id="r_ac4fe70f72b6c5b01124418fda6209253"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac4fe70f72b6c5b01124418fda6209253">underlying</a></td></tr>
<tr class="memdesc:ac4fe70f72b6c5b01124418fda6209253"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of the element's underlying storage.  <br /></td></tr>
<tr class="separator:ac4fe70f72b6c5b01124418fda6209253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae653674ca7890f27508815fa347c9668" id="r_ae653674ca7890f27508815fa347c9668"><td class="memTemplParams" colspan="2">template&lt;std::size_t RowIndex, std::size_t ColumnIndex&gt; </td></tr>
<tr class="memitem:ae653674ca7890f27508815fa347c9668"><td class="memTemplItemLeft" align="right" valign="top">using&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a></td></tr>
<tr class="memdesc:ae653674ca7890f27508815fa347c9668"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of the element at the given matrix indexes position.  <br /></td></tr>
<tr class="separator:ae653674ca7890f27508815fa347c9668"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a961babc884168f5958d6a41a67e6cd9c" id="r_a961babc884168f5958d6a41a67e6cd9c"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a961babc884168f5958d6a41a67e6cd9c">matrix</a> ()=default</td></tr>
<tr class="separator:a961babc884168f5958d6a41a67e6cd9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb2b9757a13fe56845b8341c97d4120b" id="r_adb2b9757a13fe56845b8341c97d4120b"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adb2b9757a13fe56845b8341c97d4120b">matrix</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other)=default</td></tr>
<tr class="separator:adb2b9757a13fe56845b8341c97d4120b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab31fcca43d93d2cb30ee7dd657ff2d8" id="r_aab31fcca43d93d2cb30ee7dd657ff2d8"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab31fcca43d93d2cb30ee7dd657ff2d8">operator=</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other)=default</td></tr>
<tr class="separator:aab31fcca43d93d2cb30ee7dd657ff2d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b238d94c643c5ee749fae955e43d41" id="r_ac7b238d94c643c5ee749fae955e43d41"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7b238d94c643c5ee749fae955e43d41">matrix</a> (<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:ac7b238d94c643c5ee749fae955e43d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6c56fa45f43cde7a8d49e854602b230" id="r_aa6c56fa45f43cde7a8d49e854602b230"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa6c56fa45f43cde7a8d49e854602b230">operator=</a> (<a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other)=default</td></tr>
<tr class="separator:aa6c56fa45f43cde7a8d49e854602b230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada3b2d2d61f670a3829f07ac05ceb810" id="r_ada3b2d2d61f670a3829f07ac05ceb810"><td class="memTemplParams" colspan="2">template&lt;typename OtherMatrix &gt; </td></tr>
<tr class="memitem:ada3b2d2d61f670a3829f07ac05ceb810"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ada3b2d2d61f670a3829f07ac05ceb810">matrix</a> (const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;other)</td></tr>
<tr class="separator:ada3b2d2d61f670a3829f07ac05ceb810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f1a2a28da177120bf5b3b2d7d2e2a8" id="r_a05f1a2a28da177120bf5b3b2d7d2e2a8"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a05f1a2a28da177120bf5b3b2d7d2e2a8">matrix</a> (const Matrix &amp;other)</td></tr>
<tr class="separator:a05f1a2a28da177120bf5b3b2d7d2e2a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04181f915d415aeb488a96dbf5b313d5" id="r_a04181f915d415aeb488a96dbf5b313d5"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04181f915d415aeb488a96dbf5b313d5">matrix</a> (const std::tuple_element_t&lt; 0, ColumnIndexes &gt;(&amp;elements)[<a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt; ColumnIndexes &gt;])</td></tr>
<tr class="separator:a04181f915d415aeb488a96dbf5b313d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb3bb371cdbb6b9b5a26d92de0788f4d" id="r_afb3bb371cdbb6b9b5a26d92de0788f4d"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb3bb371cdbb6b9b5a26d92de0788f4d">matrix</a> (const std::tuple_element_t&lt; 0, RowIndexes &gt;(&amp;elements)[<a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt; RowIndexes &gt;])</td></tr>
<tr class="separator:afb3bb371cdbb6b9b5a26d92de0788f4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4901f1895efe491a0ff59d7e2deb7bd2" id="r_a4901f1895efe491a0ff59d7e2deb7bd2"><td class="memTemplParams" colspan="2">template&lt;typename OtherMatrix &gt; <br />
requires singleton&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; requires(OtherMatrix value) { value.data(0, 0); }</td></tr>
<tr class="memitem:a4901f1895efe491a0ff59d7e2deb7bd2"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a4901f1895efe491a0ff59d7e2deb7bd2">matrix</a> (const OtherMatrix &amp;value)</td></tr>
<tr class="separator:a4901f1895efe491a0ff59d7e2deb7bd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3b3e5dce07b486575687a84da4db84a" id="r_ae3b3e5dce07b486575687a84da4db84a"><td class="memTemplParams" colspan="2">template&lt;arithmetic Type&gt; <br />
requires singleton&lt;RowIndexes, ColumnIndexes&gt;</td></tr>
<tr class="memitem:ae3b3e5dce07b486575687a84da4db84a"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ae3b3e5dce07b486575687a84da4db84a">matrix</a> (const Type &amp;value)</td></tr>
<tr class="separator:ae3b3e5dce07b486575687a84da4db84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5521826aede4edded92c57c364ec1ca3" id="r_a5521826aede4edded92c57c364ec1ca3"><td class="memTemplParams" colspan="2">template&lt;typename Type &gt; <br />
requires uniform&lt;RowIndexes, ColumnIndexes&gt;</td></tr>
<tr class="memitem:a5521826aede4edded92c57c364ec1ca3"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a5521826aede4edded92c57c364ec1ca3">matrix</a> (std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; rows)</td></tr>
<tr class="separator:a5521826aede4edded92c57c364ec1ca3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbf1b9511f5057781ce891906f36ad3a" id="r_afbf1b9511f5057781ce891906f36ad3a"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; <br />
requires row&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; (not column&lt;RowIndexes, ColumnIndexes&gt;) &amp;&amp; equal_size&lt;ColumnIndexes, std::tuple&lt;Types...&gt;&gt;</td></tr>
<tr class="memitem:afbf1b9511f5057781ce891906f36ad3a"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#afbf1b9511f5057781ce891906f36ad3a">matrix</a> (const Types &amp;...values)</td></tr>
<tr class="separator:afbf1b9511f5057781ce891906f36ad3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeadaae4300bfd9f1922be14460ef2653" id="r_aeadaae4300bfd9f1922be14460ef2653"><td class="memTemplParams" colspan="2">template&lt;typename... Types&gt; <br />
requires column&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; (not row&lt;RowIndexes, ColumnIndexes&gt;) &amp;&amp; equal_size&lt;RowIndexes, std::tuple&lt;Types...&gt;&gt;</td></tr>
<tr class="memitem:aeadaae4300bfd9f1922be14460ef2653"><td class="memTemplItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aeadaae4300bfd9f1922be14460ef2653">matrix</a> (const Types &amp;...values)</td></tr>
<tr class="separator:aeadaae4300bfd9f1922be14460ef2653"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe443c568bb91e261cbe83018a65947d" id="r_afe443c568bb91e261cbe83018a65947d"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe443c568bb91e261cbe83018a65947d">explicit</a> (false) operator <a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a>&lt; 0</td></tr>
<tr class="separator:afe443c568bb91e261cbe83018a65947d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af907644c90d6e24cbafb294f872f1f6e" id="r_af907644c90d6e24cbafb294f872f1f6e"><td class="memItemLeft" align="right" valign="top">constexpr &amp;constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af907644c90d6e24cbafb294f872f1f6e">operator[]</a> (this auto &amp;&amp;self, std::size_t index) column&lt; RowIndexes</td></tr>
<tr class="separator:af907644c90d6e24cbafb294f872f1f6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27404e05a772acebce348c1fd1aa0047" id="r_a27404e05a772acebce348c1fd1aa0047"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a27404e05a772acebce348c1fd1aa0047">operator[]</a> (this auto &amp;&amp;self, std::size_t index)</td></tr>
<tr class="separator:a27404e05a772acebce348c1fd1aa0047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0dfbb539682f0cedde5b97ee76fb034" id="r_ad0dfbb539682f0cedde5b97ee76fb034"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad0dfbb539682f0cedde5b97ee76fb034">operator[]</a> (this auto &amp;&amp;self, std::size_t row, std::size_t column)</td></tr>
<tr class="separator:ad0dfbb539682f0cedde5b97ee76fb034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b2c79039f766fcf8a232365a6bc4d57" id="r_a3b2c79039f766fcf8a232365a6bc4d57"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b2c79039f766fcf8a232365a6bc4d57">operator()</a> (this auto &amp;&amp;self, std::size_t index)</td></tr>
<tr class="separator:a3b2c79039f766fcf8a232365a6bc4d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28a40366c05b915caa9dd7ae5d9a4bd1" id="r_a28a40366c05b915caa9dd7ae5d9a4bd1"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28a40366c05b915caa9dd7ae5d9a4bd1">operator()</a> (this auto &amp;&amp;self, std::size_t index)</td></tr>
<tr class="separator:a28a40366c05b915caa9dd7ae5d9a4bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af379683792fb4a1d4bd421874e55a104" id="r_af379683792fb4a1d4bd421874e55a104"><td class="memItemLeft" align="right" valign="top">constexpr auto &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af379683792fb4a1d4bd421874e55a104">operator()</a> (this auto &amp;&amp;self, std::size_t row, std::size_t column)</td></tr>
<tr class="separator:af379683792fb4a1d4bd421874e55a104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49ab5a637798a9152c84be57c765600c" id="r_a49ab5a637798a9152c84be57c765600c"><td class="memTemplParams" colspan="2">template&lt;std::size_t Row, std::size_t Column&gt; <br />
requires in_range&lt;Row, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;RowIndexes&gt;&gt; &amp;&amp; in_range&lt;Column, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;ColumnIndexes&gt;&gt;</td></tr>
<tr class="memitem:a49ab5a637798a9152c84be57c765600c"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a>&lt; Row, Column &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a49ab5a637798a9152c84be57c765600c">at</a> ()</td></tr>
<tr class="separator:a49ab5a637798a9152c84be57c765600c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab40f44141c0cfb4c483eef88970d4a7" id="r_aab40f44141c0cfb4c483eef88970d4a7"><td class="memTemplParams" colspan="2">template&lt;std::size_t Index&gt; <br />
requires column&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; in_range&lt;Index, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;RowIndexes&gt;&gt;</td></tr>
<tr class="memitem:aab40f44141c0cfb4c483eef88970d4a7"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a>&lt; Index, 0 &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#aab40f44141c0cfb4c483eef88970d4a7">at</a> ()</td></tr>
<tr class="separator:aab40f44141c0cfb4c483eef88970d4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a5df098f15861d0aeae99dac28fec7a4a" id="r_a5df098f15861d0aeae99dac28fec7a4a"><td class="memItemLeft" align="right" valign="top">constexpr &amp;constexpr auto ColumnIndexes &amp;&amp;not row&lt; RowIndexes, ColumnIndexes &gt; &amp;&amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5df098f15861d0aeae99dac28fec7a4a">uniform&lt; RowIndexes, ColumnIndexes &gt;</a></td></tr>
<tr class="separator:a5df098f15861d0aeae99dac28fec7a4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe3f85237b8320e3ee8bf0de633f2209" id="r_afe3f85237b8320e3ee8bf0de633f2209"><td class="memItemLeft" align="right" valign="top">Matrix&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a></td></tr>
<tr class="separator:afe3f85237b8320e3ee8bf0de633f2209"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Matrix, typename RowIndexes, typename ColumnIndexes&gt;<br />
struct fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;</div><p>Indexed matrix. </p>
<p>Compose a linear algebra backend matrix into an indexed matrix. Row and column indexes provide each element's index type.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Matrix</td><td>The underlying linear algebra matrix. </td></tr>
    <tr><td class="paramname">RowIndexes</td><td>The packed types of the row indexes. </td></tr>
    <tr><td class="paramname">ColumnIndexes</td><td>The packed types of the column indexes.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Type safety cannot be guaranteed at compilation time without index safety. The index can either be non-type template parameters or strong types overloadings. Converting a runtime index to a dependent template type is not possible. A proxy reference could be used to allow traditional assignment syntax but the runtime check and extra indirection are not interesting tradeoffs. A template call operator can be used for getting a type safe value but impractical syntax for setting. Without index safety, the accepted tradeoff is a templated index <code>at&lt;i, j&gt;()</code> method.</dd>
<dd>
Deduction guides are tricky because a given element type comes from a row and column index to be deduced. </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00143">143</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ae653674ca7890f27508815fa347c9668" name="ae653674ca7890f27508815fa347c9668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae653674ca7890f27508815fa347c9668">&#9670;&#160;</a></span>element</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t RowIndex, std::size_t ColumnIndex&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::element</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"> <a class="code hl_typedef" href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">product&lt;std::tuple_element_t&lt;RowIndex, RowIndexes&gt;</a>,</div>
<div class="line">                          std::tuple_element_t&lt;ColumnIndex, ColumnIndexes&gt;&gt;</div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae572d5a48afe03765d8e55617ea78689"><div class="ttname"><a href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">fcarouge::product</a></div><div class="ttdeci">internal::product&lt; Lhs, Rhs &gt; product</div><div class="ttdoc">The deduced result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00207">utility.hpp:207</a></div></div>
</div><!-- fragment -->
<p>The type of the element at the given matrix indexes position. </p>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00152">152</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<a id="ac4fe70f72b6c5b01124418fda6209253" name="ac4fe70f72b6c5b01124418fda6209253"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4fe70f72b6c5b01124418fda6209253">&#9670;&#160;</a></span>underlying</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::underlying</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"> </div>
<div class="line">      std::remove_cvref_t&lt;decltype(std::declval&lt;Matrix&gt;()(0, 0))&gt;</div>
</div><!-- fragment -->
<p>The type of the element's underlying storage. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000038">Todo</a></b></dt><dd>Privatize? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00147">147</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a961babc884168f5958d6a41a67e6cd9c" name="a961babc884168f5958d6a41a67e6cd9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a961babc884168f5958d6a41a67e6cd9c">&#9670;&#160;</a></span>matrix() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="adb2b9757a13fe56845b8341c97d4120b" name="adb2b9757a13fe56845b8341c97d4120b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb2b9757a13fe56845b8341c97d4120b">&#9670;&#160;</a></span>matrix() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac7b238d94c643c5ee749fae955e43d41" name="ac7b238d94c643c5ee749fae955e43d41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7b238d94c643c5ee749fae955e43d41">&#9670;&#160;</a></span>matrix() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ada3b2d2d61f670a3829f07ac05ceb810" name="ada3b2d2d61f670a3829f07ac05ceb810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada3b2d2d61f670a3829f07ac05ceb810">&#9670;&#160;</a></span>matrix() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename OtherMatrix &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000039">Todo</a></b></dt><dd>Requires evaluated types of Matrix and OtherMatrix are identical? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00167">167</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  169</span>      : <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other.data} {}</div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_afe3f85237b8320e3ee8bf0de633f2209"><div class="ttname"><a href="#afe3f85237b8320e3ee8bf0de633f2209">fcarouge::indexed::matrix::data</a></div><div class="ttdeci">Matrix data</div><div class="ttdef"><b>Definition</b> <a href="indexed_8hpp_source.xhtml#l00320">indexed.hpp:320</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a05f1a2a28da177120bf5b3b2d7d2e2a8" name="a05f1a2a28da177120bf5b3b2d7d2e2a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f1a2a28da177120bf5b3b2d7d2e2a8">&#9670;&#160;</a></span>matrix() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Matrix &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000040">Todo</a></b></dt><dd>Can this be removed along the evaluate? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00172">172</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  172</span>: <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a04181f915d415aeb488a96dbf5b313d5" name="a04181f915d415aeb488a96dbf5b313d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04181f915d415aeb488a96dbf5b313d5">&#9670;&#160;</a></span>matrix() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const std::tuple_element_t&lt; 0, ColumnIndexes &gt;</td>          <td class="paramname"><span class="paramname"><em></em></span>( &amp;elements)[size&lt; ColumnIndexes &gt;]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000041">Todo</a></b></dt><dd>Fix the array constructors: the parameter type needs to be the indexes product. </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00176">176</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  181</span>      : <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{elements} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="afb3bb371cdbb6b9b5a26d92de0788f4d" name="afb3bb371cdbb6b9b5a26d92de0788f4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb3bb371cdbb6b9b5a26d92de0788f4d">&#9670;&#160;</a></span>matrix() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const std::tuple_element_t&lt; 0, RowIndexes &gt;</td>          <td class="paramname"><span class="paramname"><em></em></span>( &amp;elements)[size&lt; RowIndexes &gt;]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00183">183</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  189</span>      : <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>{elements} {}</div>
</div><!-- fragment -->
</div>
</div>
<a id="a4901f1895efe491a0ff59d7e2deb7bd2" name="a4901f1895efe491a0ff59d7e2deb7bd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4901f1895efe491a0ff59d7e2deb7bd2">&#9670;&#160;</a></span>matrix() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename OtherMatrix &gt; <br />
requires singleton&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; requires(OtherMatrix value) { value.data(0, 0); }</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const OtherMatrix &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00194">194</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  194</span>                                                             {</div>
<div class="line"><span class="lineno">  195</span>    <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a> = value.data;</div>
<div class="line"><span class="lineno">  196</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="ae3b3e5dce07b486575687a84da4db84a" name="ae3b3e5dce07b486575687a84da4db84a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3b3e5dce07b486575687a84da4db84a">&#9670;&#160;</a></span>matrix() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;arithmetic Type&gt; <br />
requires singleton&lt;RowIndexes, ColumnIndexes&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Type &amp;</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00200">200</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  200</span>                                                      {</div>
<div class="line"><span class="lineno">  201</span>    <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, 0) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  202</span>  }</div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1element__traits_xhtml_a8d479a35602790f3dff1ac6975b58748"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">fcarouge::indexed::element_traits::to_underlying</a></div><div class="ttdeci">static constexpr Underlying to_underlying(Type value)</div><div class="ttdef"><b>Definition</b> <a href="indexed_8hpp_source.xhtml#l00109">indexed.hpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00109">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-1" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_ae3b3e5dce07b486575687a84da4db84a_cgraph.svg" width="372" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a5521826aede4edded92c57c364ec1ca3" name="a5521826aede4edded92c57c364ec1ca3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5521826aede4edded92c57c364ec1ca3">&#9670;&#160;</a></span>matrix() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename Type &gt; <br />
requires uniform&lt;RowIndexes, ColumnIndexes&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt;</td>          <td class="paramname"><span class="paramname"><em>rows</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000042">Todo</a></b></dt><dd>Verify the list sizes at runtime? </dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00206">206</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  209</span>  {</div>
<div class="line"><span class="lineno">  210</span>    <span class="keywordflow">for</span> (std::size_t i{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;row : rows) {</div>
<div class="line"><span class="lineno">  211</span>      <span class="keywordflow">for</span> (std::size_t j{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;value : row) {</div>
<div class="line"><span class="lineno">  212</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(i, j) = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, Type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  213</span>        ++j;</div>
<div class="line"><span class="lineno">  214</span>      }</div>
<div class="line"><span class="lineno">  215</span>      ++i;</div>
<div class="line"><span class="lineno">  216</span>    }</div>
<div class="line"><span class="lineno">  217</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00109">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-2" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_a5521826aede4edded92c57c364ec1ca3_cgraph.svg" width="372" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="afbf1b9511f5057781ce891906f36ad3a" name="afbf1b9511f5057781ce891906f36ad3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbf1b9511f5057781ce891906f36ad3a">&#9670;&#160;</a></span>matrix() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename... Types&gt; <br />
requires row&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; (not column&lt;RowIndexes, ColumnIndexes&gt;) &amp;&amp; equal_size&lt;ColumnIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Types &amp;...</td>          <td class="paramname"><span class="paramname"><em>values</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000043">Todo</a></b></dt><dd><p class="startdd">Combine the two constructors in ome? </p>
<p class="interdd">Verify if the types are the same, or assignable, for nicer error? </p>
<p class="enddd">Rewrite with a fold expression over the pack? </p>
</dd></dl>

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00226">226</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  226</span>                                                           {</div>
<div class="line"><span class="lineno">  227</span>    std::tuple value_pack{values...};</div>
<div class="line"><span class="lineno">  228</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;ColumnIndexes&gt;</a>, 1&gt;([<span class="keyword">this</span>,</div>
<div class="line"><span class="lineno">  229</span>                                              &amp;value_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">  230</span>      <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><span class="lineno">  231</span>      <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><span class="lineno">  232</span>      <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  233</span>    });</div>
<div class="line"><span class="lineno">  234</span>  }</div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5ad0022b969a210b7261d0158bc1dd7b"><div class="ttname"><a href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">fcarouge::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00223">utility.hpp:223</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, <a class="el" href="utility_8hpp_source.xhtml#l00223">fcarouge::for_constexpr()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00109">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-3" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_afbf1b9511f5057781ce891906f36ad3a_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="aeadaae4300bfd9f1922be14460ef2653" name="aeadaae4300bfd9f1922be14460ef2653"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeadaae4300bfd9f1922be14460ef2653">&#9670;&#160;</a></span>matrix() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;typename... Types&gt; <br />
requires column&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; (not row&lt;RowIndexes, ColumnIndexes&gt;) &amp;&amp; equal_size&lt;RowIndexes, std::tuple&lt;Types...&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix </td>
          <td>(</td>
          <td class="paramtype">const Types &amp;...</td>          <td class="paramname"><span class="paramname"><em>values</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00240">240</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  240</span>                                                  {</div>
<div class="line"><span class="lineno">  241</span>    std::tuple value_pack{values...};</div>
<div class="line"><span class="lineno">  242</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;RowIndexes&gt;</a>, 1&gt;([<span class="keyword">this</span>, &amp;value_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">  243</span>      <span class="keyword">auto</span> value{std::get&lt;position&gt;(value_pack)};</div>
<div class="line"><span class="lineno">  244</span>      <span class="keyword">using </span>type = std::remove_cvref_t&lt;<span class="keyword">decltype</span>(value)&gt;;</div>
<div class="line"><span class="lineno">  245</span>      <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = <a class="code hl_function" href="structfcarouge_1_1indexed_1_1element__traits.xhtml#a8d479a35602790f3dff1ac6975b58748">element_traits&lt;underlying, type&gt;::to_underlying</a>(value);</div>
<div class="line"><span class="lineno">  246</span>    });</div>
<div class="line"><span class="lineno">  247</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>, <a class="el" href="utility_8hpp_source.xhtml#l00223">fcarouge::for_constexpr()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00109">fcarouge::indexed::element_traits&lt; Underlying, Type &gt;::to_underlying()</a>.</p>
<div id="dynsection-4" onclick="return dynsection.toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="structfcarouge_1_1indexed_1_1matrix_aeadaae4300bfd9f1922be14460ef2653_cgraph.svg" width="100%" height="400"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a49ab5a637798a9152c84be57c765600c" name="a49ab5a637798a9152c84be57c765600c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49ab5a637798a9152c84be57c765600c">&#9670;&#160;</a></span>at() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t Row, std::size_t Column&gt; <br />
requires in_range&lt;Row, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;RowIndexes&gt;&gt; &amp;&amp; in_range&lt;Column, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;ColumnIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a>&lt; Row, Column &gt; &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00307">307</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  307</span>                                                            {</div>
<div class="line"><span class="lineno">  308</span>    <span class="keywordflow">return</span> element_traits&lt;underlying, element&lt;Row, Column&gt;&gt;::from_underlying(</div>
<div class="line"><span class="lineno">  309</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Row}, std::size_t{Column}));</div>
<div class="line"><span class="lineno">  310</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="aab40f44141c0cfb4c483eef88970d4a7" name="aab40f44141c0cfb4c483eef88970d4a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab40f44141c0cfb4c483eef88970d4a7">&#9670;&#160;</a></span>at() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<div class="memtemplate">
template&lt;std::size_t Index&gt; <br />
requires column&lt;RowIndexes, ColumnIndexes&gt; &amp;&amp; in_range&lt;Index, 0, <a class="el" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size</a>&lt;RowIndexes&gt;&gt;</div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="#ae653674ca7890f27508815fa347c9668">element</a>&lt; Index, 0 &gt; &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00315">315</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  315</span>                                                         {</div>
<div class="line"><span class="lineno">  316</span>    <span class="keywordflow">return</span> element_traits&lt;underlying, element&lt;Index, 0&gt;&gt;::from_underlying(</div>
<div class="line"><span class="lineno">  317</span>        <a class="code hl_variable" href="#afe3f85237b8320e3ee8bf0de633f2209">data</a>(std::size_t{Index}, 0));</div>
<div class="line"><span class="lineno">  318</span>  }</div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="afe443c568bb91e261cbe83018a65947d" name="afe443c568bb91e261cbe83018a65947d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe443c568bb91e261cbe83018a65947d">&#9670;&#160;</a></span>explicit()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::explicit </td>
          <td>(</td>
          <td class="paramtype">false</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="reference">References <a class="el" href="indexed_8hpp_source.xhtml#l00320">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</a>.</p>

</div>
</div>
<a id="a3b2c79039f766fcf8a232365a6bc4d57" name="a3b2c79039f766fcf8a232365a6bc4d57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b2c79039f766fcf8a232365a6bc4d57">&#9670;&#160;</a></span>operator()() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00280">280</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  285</span>  {</div>
<div class="line"><span class="lineno">  286</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index, 0);</div>
<div class="line"><span class="lineno">  287</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="a28a40366c05b915caa9dd7ae5d9a4bd1" name="a28a40366c05b915caa9dd7ae5d9a4bd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28a40366c05b915caa9dd7ae5d9a4bd1">&#9670;&#160;</a></span>operator()() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00289">289</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  293</span>  {</div>
<div class="line"><span class="lineno">  294</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(0, index);</div>
<div class="line"><span class="lineno">  295</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="af379683792fb4a1d4bd421874e55a104" name="af379683792fb4a1d4bd421874e55a104"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af379683792fb4a1d4bd421874e55a104">&#9670;&#160;</a></span>operator()() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>row</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>column</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00298">298</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  300</span>  {</div>
<div class="line"><span class="lineno">  301</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(row, column);</div>
<div class="line"><span class="lineno">  302</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="aab31fcca43d93d2cb30ee7dd657ff2d8" name="aab31fcca43d93d2cb30ee7dd657ff2d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab31fcca43d93d2cb30ee7dd657ff2d8">&#9670;&#160;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aa6c56fa45f43cde7a8d49e854602b230" name="aa6c56fa45f43cde7a8d49e854602b230"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6c56fa45f43cde7a8d49e854602b230">&#9670;&#160;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a27404e05a772acebce348c1fd1aa0047" name="a27404e05a772acebce348c1fd1aa0047"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27404e05a772acebce348c1fd1aa0047">&#9670;&#160;</a></span>operator[]() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00265">265</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  269</span>  {</div>
<div class="line"><span class="lineno">  270</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(0, index);</div>
<div class="line"><span class="lineno">  271</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<a id="af907644c90d6e24cbafb294f872f1f6e" name="af907644c90d6e24cbafb294f872f1f6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af907644c90d6e24cbafb294f872f1f6e">&#9670;&#160;</a></span>operator[]() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">&amp;constexpr auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>index</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad0dfbb539682f0cedde5b97ee76fb034" name="ad0dfbb539682f0cedde5b97ee76fb034"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0dfbb539682f0cedde5b97ee76fb034">&#9670;&#160;</a></span>operator[]() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto &amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">this auto &amp;&amp;</td>          <td class="paramname"><span class="paramname"><em>self</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>row</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t</td>          <td class="paramname"><span class="paramname"><em>column</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00274">274</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">  276</span>  {</div>
<div class="line"><span class="lineno">  277</span>    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(row, column);</div>
<div class="line"><span class="lineno">  278</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="afe3f85237b8320e3ee8bf0de633f2209" name="afe3f85237b8320e3ee8bf0de633f2209"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe3f85237b8320e3ee8bf0de633f2209">&#9670;&#160;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Matrix <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00320">320</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="indexed_8hpp_source.xhtml#l00307">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::at()</a>, <a class="el" href="#afe443c568bb91e261cbe83018a65947d">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::explicit()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00194">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00200">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00226">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00206">fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;::matrix()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00371">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00346">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00356">fcarouge::indexed::operator*()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00395">fcarouge::indexed::operator+()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00385">fcarouge::indexed::operator+()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00403">fcarouge::indexed::operator-()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00413">fcarouge::indexed::operator-()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00430">fcarouge::indexed::operator/()</a>, <a class="el" href="indexed_8hpp_source.xhtml#l00421">fcarouge::indexed::operator/()</a>, and <a class="el" href="indexed_8hpp_source.xhtml#l00338">fcarouge::indexed::operator==()</a>.</p>

</div>
</div>
<a id="a5df098f15861d0aeae99dac28fec7a4a" name="a5df098f15861d0aeae99dac28fec7a4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df098f15861d0aeae99dac28fec7a4a">&#9670;&#160;</a></span>uniform&lt; RowIndexes, ColumnIndexes &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Matrix , typename RowIndexes , typename ColumnIndexes &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">&amp;constexpr auto ColumnIndexes&amp;&amp; not row&lt;RowIndexes, ColumnIndexes&gt;&amp;&amp; <a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a>&lt; Matrix, RowIndexes, ColumnIndexes &gt;::uniform&lt; RowIndexes, ColumnIndexes &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    <span class="keywordflow">return</span> std::forward&lt;decltype(self)&gt;(self).data(index, 0)</div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="indexed_8hpp_source.xhtml#l00259">259</a> of file <a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/support/indexed/fcarouge/<a class="el" href="indexed_8hpp_source.xhtml">indexed.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1indexed.xhtml">indexed</a></li><li class="navelem"><a class="el" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
