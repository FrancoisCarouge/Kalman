<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: sample/kf_6x2x0_vehicle_location.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kf__6x2x0__vehicle__location_8cpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kf_6x2x0_vehicle_location.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kf__6x2x0__vehicle__location_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="kalman_8hpp.xhtml">fcarouge/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Eigen/Eigen&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;cmath&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a> {</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml">    9</a></span><span class="keyword">namespace </span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a21c0182ce3045b919c4a7f2b84ef733d">   11</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, auto Size&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a21c0182ce3045b919c4a7f2b84ef733d">vector</a> = Eigen::Vector&lt;Type, Size&gt;;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml">   13</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml">divide</a> final {</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Numerator, <span class="keyword">typename</span> Denominator&gt;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml#a83d3ee7d57a0873c726eecb6353ba046">   16</a></span>  <a class="code hl_function" href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml#a83d3ee7d57a0873c726eecb6353ba046">operator()</a>(<span class="keyword">const</span> Numerator &amp;numerator, <span class="keyword">const</span> Denominator &amp;denominator)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keyword">using </span>result =</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>        <span class="keyword">typename</span> Eigen::Matrix&lt;typename std::decay_t&lt;Numerator&gt;::Scalar,</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>                               std::decay_t&lt;Numerator&gt;::RowsAtCompileTime,</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>                               std::decay_t&lt;Denominator&gt;::RowsAtCompileTime&gt;;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keywordflow">return</span> result{denominator.transpose()</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>                      .fullPivHouseholderQr()</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>                      .solve(numerator.transpose())</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>                      .transpose()</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>                      .eval()};</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  }</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>};</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a687f6b66de7a823dd4a43e9d571bcaef">   49</a></span>[[maybe_unused]] <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a687f6b66de7a823dd4a43e9d571bcaef">kf_6x2x0_vehicle_location</a>{[] {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="comment">// A 6x2x0 filter, constant acceleration dynamic model, no control.</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keyword">using </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> = <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman&lt;vector&lt;double, 6&gt;</a>, <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a21c0182ce3045b919c4a7f2b84ef733d">vector&lt;double, 2&gt;</a>, void, <a class="code hl_struct" href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml">divide</a>&gt;;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="comment">// Initialization</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="comment">// The state is chosen to be the position, velocity, acceleration in the XY</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="comment">// plane: [px, vx, ax, py, vy, ay]. We don&#39;t know the vehicle location; we</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="comment">// will set initial position, velocity and acceleration to 0.</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>(0., 0., 0., 0., 0., 0.);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="comment">// Since our initial state vector is a guess, we will set a very high estimate</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="comment">// uncertainty. The high estimate uncertainty results in a high Kalman Gain,</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="comment">// giving a high weight to the measurement.</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1d1f1dacf69723b9a2027df00faa44d7">kalman::estimate_uncertainty</a>{{500, 0, 0, 0, 0, 0},</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>                                        {0, 500, 0, 0, 0, 0},</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                                        {0, 0, 500, 0, 0, 0},</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>                                        {0, 0, 0, 500, 0, 0},</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>                                        {0, 0, 0, 0, 500, 0},</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>                                        {0, 0, 0, 0, 0, 500}});</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="comment">// Prediction</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="comment">// The process noise matrix Q would be:</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aba3d1735b4c0ee10bfa6b2dfa2266ad7">kalman::process_uncertainty</a> q{</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      {0.25, 0.5, 0.5, 0, 0, 0}, {0.5, 1, 1, 0, 0, 0}, {0.5, 1, 1, 0, 0, 0},</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      {0, 0, 0, 0.25, 0.5, 0.5}, {0, 0, 0, 0.5, 1, 1}, {0, 0, 0, 0.5, 1, 1}};</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  q *= 0.2 * 0.2;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">q</a>(std::move(q));</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="comment">// The state transition matrix F would be:</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a052507ea7e38da8fbbc78e3bf04c96b2">kalman::state_transition</a>{{1, 1, 0.5, 0, 0, 0},</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>                                    {0, 1, 1, 0, 0, 0},</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>                                    {0, 0, 1, 0, 0, 0},</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>                                    {0, 0, 0, 1, 1, 0.5},</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>                                    {0, 0, 0, 0, 1, 1},</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>                                    {0, 0, 0, 0, 0, 1}});</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="comment">// Now we can predict the next state based on the initialization values.</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3898db7da690aec04fa4621727d4bf56">predict</a>();</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="comment">// Measure and Update</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="comment">// The dimension of zn is 2x1 and the dimension of xn is 6x1. Therefore the</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="comment">// dimension of the observation matrix H shall be 2x6.</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aadb2093697f3eb6b26b80d0f1af5fbed">kalman::output_model</a>{{1, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0}});</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="comment">// Assume that the x and y measurements are uncorrelated, i.e. error in the x</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="comment">// coordinate measurement doesn&#39;t depend on the error in the y coordinate</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="comment">// measurement. In real-life applications, the measurement uncertainty can</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="comment">// differ between measurements. In many systems the measurement uncertainty</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="comment">// depends on the measurement SNR (signal-to-noise ratio), angle between</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="comment">// sensor (or sensors) and target, signal frequency and many other parameters.</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="comment">// For the sake of the example simplicity, we will assume a constant</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="comment">// measurement uncertainty: R1 = R2...Rn-1 = Rn = R The measurement error</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="comment">// standard deviation: σxm = σym = 3m. The variance 9.</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0b119b5d090c39ddf0a5aaafbeeb8f6c">kalman::output_uncertainty</a>{{9, 0}, {0, 9}});</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="comment">// The measurement values: z1 = [-393.66, 300.4]</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2697eb6865282a481107ec3aa4d42af5">update</a>(-393.66, 300.4);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3898db7da690aec04fa4621727d4bf56">predict</a>();</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="comment">// And so on, run a step of the filter, predicting and updating, every</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="comment">// measurements period: Δt = 1s (constant, built-in).</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">const</span> <span class="keyword">auto</span> step{[&amp;filter](<span class="keywordtype">double</span> position_x, <span class="keywordtype">double</span> position_y) {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2697eb6865282a481107ec3aa4d42af5">update</a>(position_x, position_y);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3898db7da690aec04fa4621727d4bf56">predict</a>();</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  }};</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  step(-375.93, 301.78);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="comment">// Verify the example estimated state at 0.1% accuracy.</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[0] / -277.8) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[1] / 148.3) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[2] / 94.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[3] / 249.8) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[4] / -85.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[5] / -63.6) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  step(-351.04, 295.1);</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  step(-328.96, 305.19);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  step(-299.35, 301.06);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  step(-273.36, 302.05);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  step(-245.89, 300);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  step(-222.58, 303.57);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  step(-198.03, 296.33);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  step(-174.17, 297.65);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  step(-146.32, 297.41);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  step(-123.72, 299.61);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  step(-103.47, 299.6);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  step(-78.23, 302.39);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  step(-52.63, 295.04);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  step(-23.34, 300.09);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  step(25.96, 294.72);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  step(49.72, 298.61);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  step(76.94, 294.64);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  step(95.38, 284.88);</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  step(119.83, 272.82);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  step(144.01, 264.93);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  step(161.84, 251.46);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  step(180.56, 241.27);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  step(201.42, 222.98);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  step(222.62, 203.73);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  step(239.4, 184.1);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  step(252.51, 166.12);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  step(266.26, 138.71);</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  step(271.75, 119.71);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  step(277.4, 100.41);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  step(294.12, 79.76);</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  step(301.23, 50.62);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  step(291.8, 32.99);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  step(299.89, 2.14);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[0] / 298.5) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[1] / -1.65) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[2] / -1.9) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[3] / -22.5) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[4] / -26.1) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">x</a>()[5] / -0.64) &lt; 0.006 &amp;&amp;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>         <span class="stringliteral">&quot;The state estimates expected at 0.6% accuracy.&quot;</span>);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  assert(std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(0, 0) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(0, 1) / 4.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(0, 2) / 0.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(1, 1) / 2.4) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(2, 2) / 0.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>         std::abs(1 - filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">p</a>()(3, 3) / 11.25) &lt; 0.001 &amp;&amp;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>         <span class="stringliteral">&quot;At this point, the position uncertainty px = py = 5, which means &quot;</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>         <span class="stringliteral">&quot;that the standard deviation of the prediction is square root of 5m.&quot;</span>);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="comment">// As you can see, the Kalman Filter tracks the vehicle quite well. However,</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="comment">// when the vehicle starts the turning maneuver, the estimates are not so</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="comment">// accurate. After a while, the Kalman Filter accuracy improves. While the</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <span class="comment">// vehicle travels along the straight line, the acceleration is constant and</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="comment">// equal to zero. However, during the turn maneuver, the vehicle experiences</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="comment">// acceleration due to the circular motion - the angular acceleration.</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="comment">// Although the angular acceleration is constant, the angular acceleration</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="comment">// projection on the x and y axes is not constant, therefore ax and ay are not</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="comment">// constant. Our Kalman Filter is designed for a constant acceleration model.</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="comment">// Nevertheless, it succeeds in tracking maneuvering vehicle due to a properly</span></div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="comment">// chosen σa parameter. I would like to encourage the readers to implement</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="comment">// this example in software and see how different values of σa of R influence</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="comment">// the actual Kalman Filter accuracy, Kalman Gain convergence, and estimation</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="comment">// uncertainty.</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>}()};</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>} <span class="comment">// namespace fcarouge::sample</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter for C++23.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00171">kalman.hpp:171</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a052507ea7e38da8fbbc78e3bf04c96b2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a052507ea7e38da8fbbc78e3bf04c96b2">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00225">kalman.hpp:225</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0b119b5d090c39ddf0a5aaafbeeb8f6c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0b119b5d090c39ddf0a5aaafbeeb8f6c">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00220">kalman.hpp:220</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1d1f1dacf69723b9a2027df00faa44d7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1d1f1dacf69723b9a2027df00faa44d7">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00214">kalman.hpp:214</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a20e4a128994e061d95c7cc8547edeae2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a20e4a128994e061d95c7cc8547edeae2">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; const process_uncertainty &amp;</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00872">kalman.hpp:872</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2697eb6865282a481107ec3aa4d42af5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2697eb6865282a481107ec3aa4d42af5">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01144">kalman.hpp:1144</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a321ed407a09472e739e593efd9d89dd7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a321ed407a09472e739e593efd9d89dd7">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; const estimate_uncertainty &amp;</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00838">kalman.hpp:838</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3898db7da690aec04fa4621727d4bf56"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3898db7da690aec04fa4621727d4bf56">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01162">kalman.hpp:1162</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a70e5dcb292b21eb58a81edf2b50bdf98"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a70e5dcb292b21eb58a81edf2b50bdf98">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; const output_model &amp;</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00998">kalman.hpp:998</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a97aceea287d6f047b294f556db529baa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a97aceea287d6f047b294f556db529baa">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; const state_transition &amp;</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00956">kalman.hpp:956</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aadb2093697f3eb6b26b80d0f1af5fbed"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aadb2093697f3eb6b26b80d0f1af5fbed">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00230">kalman.hpp:230</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aba3d1735b4c0ee10bfa6b2dfa2266ad7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aba3d1735b4c0ee10bfa6b2dfa2266ad7">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00217">kalman.hpp:217</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac1f06b20e6494b0301d5b2ab8e4214b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac1f06b20e6494b0301d5b2ab8e4214b3">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; const state &amp;</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00768">kalman.hpp:768</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afd422d2d0b9bdf85ffc00df9ae380be3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afd422d2d0b9bdf85ffc00df9ae380be3">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; const output_uncertainty &amp;</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00914">kalman.hpp:914</a></div></div>
<div class="ttc" id="akalman_8hpp_xhtml"><div class="ttname"><a href="kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The main Kalman filter class.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_xhtml_a21c0182ce3045b919c4a7f2b84ef733d"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a21c0182ce3045b919c4a7f2b84ef733d">fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Size &gt; vector</div><div class="ttdef"><b>Definition:</b> <a href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00011">kf_6x2x0_vehicle_location.cpp:11</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_xhtml_a687f6b66de7a823dd4a43e9d571bcaef"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03.xhtml#a687f6b66de7a823dd4a43e9d571bcaef">fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::kf_6x2x0_vehicle_location</a></div><div class="ttdeci">auto kf_6x2x0_vehicle_location</div><div class="ttdef"><b>Definition:</b> <a href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00049">kf_6x2x0_vehicle_location.cpp:49</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1sample.xhtml">fcarouge::sample</a></div><div class="ttdoc">Examples, tutorials, demonstrators of the library.</div></div>
<div class="ttc" id="astructfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide_xhtml"><div class="ttname"><a href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml">fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::divide</a></div><div class="ttdef"><b>Definition:</b> <a href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00013">kf_6x2x0_vehicle_location.cpp:13</a></div></div>
<div class="ttc" id="astructfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide_xhtml_a83d3ee7d57a0873c726eecb6353ba046"><div class="ttname"><a href="structfcarouge_1_1sample_1_1anonymous__namespace_02kf__6x2x0__vehicle__location_8cpp_03_1_1divide.xhtml#a83d3ee7d57a0873c726eecb6353ba046">fcarouge::sample::anonymous_namespace{kf_6x2x0_vehicle_location.cpp}::divide::operator()</a></div><div class="ttdeci">constexpr auto operator()(const Numerator &amp;numerator, const Denominator &amp;denominator) const</div><div class="ttdef"><b>Definition:</b> <a href="kf__6x2x0__vehicle__location_8cpp_source.xhtml#l00016">kf_6x2x0_vehicle_location.cpp:16</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_c29eeb5af533606caea8a09e66794740.xhtml">sample</a></li><li class="navelem"><a class="el" href="kf__6x2x0__vehicle__location_8cpp.xhtml">kf_6x2x0_vehicle_location.cpp</a></li>
    <li class="footer">Generated on Mon Nov 21 2022 02:28:37 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
