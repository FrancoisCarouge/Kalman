<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: std::formatter&lt; fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos070a7274636525b38c0e4419c7b19891.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos02dce59d3db32e07cf2f6bb94e7a0b77.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">std::formatter&lt; fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="format_8hpp_source.xhtml">format.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for std::formatter&lt; fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transposec8126cd7c8a89b9eb9e1519226e8063.svg" width="212" height="162"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a08d0c4d0c455b251b2e1d54e202c33b3"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos070a7274636525b38c0e4419c7b19891.xhtml#a08d0c4d0c455b251b2e1d54e202c33b3">parse</a> (std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</td></tr>
<tr class="separator:a08d0c4d0c455b251b2e1d54e202c33b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8fe2b76ebc565ff8ffb46f214cddd35"><td class="memTemplParams" colspan="2">template&lt;typename OutputIt &gt; </td></tr>
<tr class="memitem:ad8fe2b76ebc565ff8ffb46f214cddd35"><td class="memTemplItemLeft" align="right" valign="top">auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos070a7274636525b38c0e4419c7b19891.xhtml#ad8fe2b76ebc565ff8ffb46f214cddd35">format</a> (const <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt; &amp;filter, std::basic_format_context&lt; OutputIt, Char &gt; &amp;format_context) -&gt; OutputIt</td></tr>
<tr class="separator:ad8fe2b76ebc565ff8ffb46f214cddd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename State, typename Output, typename Input, typename Transpose, typename Symmetrize, typename Divide, typename Identity, typename UpdateTypes, typename PredictionTypes, typename Char&gt;<br />
struct std::formatter&lt; fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt;</div>
<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00057">57</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad8fe2b76ebc565ff8ffb46f214cddd35" name="ad8fe2b76ebc565ff8ffb46f214cddd35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8fe2b76ebc565ff8ffb46f214cddd35">&#9670;&nbsp;</a></span>format()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename UpdateTypes , typename PredictionTypes , typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIt &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">auto std::formatter&lt; <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt; &amp;&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIt, Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>format_context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> -&gt; OutputIt
  </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>P2585 may be useful in simplifying and standardizing the support. </dd></dl>

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00068">68</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    format_context.advance_to(</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>        format_to(format_context.out(), R<span class="stringliteral">&quot;({{&quot;f&quot;: {}, )&quot;, filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9f9048640ddd90cd1169f739ed787aa8">f</a>()));</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (not std::is_same_v&lt;Input, void&gt;) {</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      format_context.advance_to(</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>          format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;g&quot;: {}, )&quot;, filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad83e86fe9487d8bf0b69f6b32c665a98">g</a>()));</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span><span class="stringliteral">    }</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="stringliteral">    format_context.advance_to(format_to(format_context.out(),</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="stringliteral">                                        R</span><span class="stringliteral">&quot;(&quot;h&quot;: {}, &quot;k&quot;: {}, &quot;p&quot;: {}, )&quot;,</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="stringliteral">                                        filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa1b7bdfd0003fada764bdff943d4b844">h</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9be5fe520d542131af481d239c5a924c">k</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a868e7283042616c9fd32ea86745c3ec4">p</a>()));</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span><span class="stringliteral">    <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a>&lt;</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><span class="stringliteral">        std::size_t{ 0 }, fcarouge::internal::repack_s&lt;PredictionTypes&gt;, 1&gt;(</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="stringliteral">        [&amp;format_context, &amp;filter](</span><span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>          format_context.advance_to(format_to(</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>              format_context.out(), R<span class="stringliteral">&quot;(&quot;prediction_{}&quot;: {}, )&quot;,</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="stringliteral">              std::size_t{ position }, filter.template predict&lt;position&gt;()));</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="stringliteral">        });</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="stringliteral">    format_context.advance_to(format_to(format_context.out(),</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="stringliteral">                                        R</span><span class="stringliteral">&quot;(&quot;q&quot;: {}, &quot;r&quot;: {}, &quot;s&quot;: {}, )&quot;,</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="stringliteral">                                        filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a080eaccb34518fef7cc0c54df8f73256">q</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a313170cbaab37277331127b200168da2">r</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2ba7c68ea0f157085f5710f35797d499">s</a>()));</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (not std::is_same_v&lt;Input, void&gt;) {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      format_context.advance_to(</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>          format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;u&quot;: {}, )&quot;, filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8f6e201d2a84545a598a93e0691b5c25">u</a>()));</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="stringliteral">    }</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="stringliteral">    <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a>&lt;</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="stringliteral">        std::size_t{ 0 }, fcarouge::internal::repack_s&lt;UpdateTypes&gt;, 1&gt;(</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="stringliteral">        [&amp;format_context, &amp;filter](</span><span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>          format_context.advance_to(format_to(</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>              format_context.out(), R<span class="stringliteral">&quot;(&quot;update_{}&quot;: {}, )&quot;,</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="stringliteral">              std::size_t{ position }, filter.template update&lt;position&gt;()));</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="stringliteral">        });</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="stringliteral">    format_context.advance_to(format_to(format_context.out(),</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="stringliteral">                                        R</span><span class="stringliteral">&quot;(&quot;x&quot;: {}, &quot;y&quot;: {}, &quot;z&quot;: {}}})&quot;,</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="stringliteral">                                        filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7da73fc2bef3808cb47836bf9e8208e5">x</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a111c882bc52c97a207789cc5db6aacf3">y</a>(), filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abaa0de7e5f1ad089a9d7842add690431">z</a>()));</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="stringliteral"></span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="stringliteral">    </span><span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  }</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a080eaccb34518fef7cc0c54df8f73256"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a080eaccb34518fef7cc0c54df8f73256">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01016">kalman.hpp:1016</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a111c882bc52c97a207789cc5db6aacf3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a111c882bc52c97a207789cc5db6aacf3">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; innovation</div><div class="ttdoc">Returns the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01287">kalman.hpp:1287</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2ba7c68ea0f157085f5710f35797d499"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2ba7c68ea0f157085f5710f35797d499">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; innovation_uncertainty</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01298">kalman.hpp:1298</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a313170cbaab37277331127b200168da2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a313170cbaab37277331127b200168da2">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01067">kalman.hpp:1067</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7da73fc2bef3808cb47836bf9e8208e5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7da73fc2bef3808cb47836bf9e8208e5">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00909">kalman.hpp:909</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a868e7283042616c9fd32ea86745c3ec4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a868e7283042616c9fd32ea86745c3ec4">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00985">kalman.hpp:985</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8f6e201d2a84545a598a93e0691b5c25"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8f6e201d2a84545a598a93e0691b5c25">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; input requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the last control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00973">kalman.hpp:973</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9be5fe520d542131af481d239c5a924c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9be5fe520d542131af481d239c5a924c">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; gain</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01276">kalman.hpp:1276</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9f9048640ddd90cd1169f739ed787aa8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9f9048640ddd90cd1169f739ed787aa8">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01119">kalman.hpp:1119</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa1b7bdfd0003fada764bdff943d4b844"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa1b7bdfd0003fada764bdff943d4b844">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01171">kalman.hpp:1171</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abaa0de7e5f1ad089a9d7842add690431"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abaa0de7e5f1ad089a9d7842add690431">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; output</div><div class="ttdoc">Returns the last observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00962">kalman.hpp:962</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad83e86fe9487d8bf0b69f6b32c665a98"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad83e86fe9487d8bf0b69f6b32c665a98">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01223">kalman.hpp:1223</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4c0bbc15a41d76dd2b4b23d8566fba57"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00070">utility.hpp:70</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="utility_8hpp_source.xhtml#l00070">fcarouge::internal::for_constexpr()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos070a7274636525b38c0e4419c7b19891_ad8fe2b76ebc565ff8ffb46f214cddd35_cgraph.svg" width="396" height="96"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a08d0c4d0c455b251b2e1d54e202c33b3" name="a08d0c4d0c455b251b2e1d54e202c33b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08d0c4d0c455b251b2e1d54e202c33b3">&#9670;&nbsp;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename State , typename Output , typename Input , typename Transpose , typename Symmetrize , typename Divide , typename Identity , typename UpdateTypes , typename PredictionTypes , typename Char &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; <a class="el" href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a>&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt;::parse </td>
          <td>(</td>
          <td class="paramtype">std::basic_format_parse_context&lt; Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>parse_context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>include/fcarouge/internal/<a class="el" href="format_8hpp_source.xhtml">format.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>std</b></li><li class="navelem"><a class="el" href="structstd_1_1formatter_3_01fcarouge_1_1kalman_3_01_state_00_01_output_00_01_input_00_01_transpos070a7274636525b38c0e4419c7b19891.xhtml">formatter&lt; fcarouge::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt;, Char &gt;</a></li>
    <li class="footer">Generated on Mon Aug 22 2022 01:54:46 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
