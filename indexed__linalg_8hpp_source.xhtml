<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.12.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/support/indexed/fcarouge/indexed_linalg.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.12.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('indexed__linalg_8hpp_source.xhtml',''); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">indexed_linalg.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="indexed__linalg_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.4.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INDEXED_LINALG_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INDEXED_LINALG_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;<a class="code" href="utility_8hpp.xhtml">fcarouge/utility.hpp</a>&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;format&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;initializer_list&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml">   55</a></span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1indexed.xhtml">fcarouge::indexed</a> {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">template</span> &lt;std::size_t RowIndex, <span class="keyword">typename</span> RowIndexes, std::size_t ColumnIndex,</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">   60</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">product&lt;std::tuple_element_t&lt;RowIndex, RowIndexes&gt;</a>,</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>                          std::tuple_element_t&lt;ColumnIndex, ColumnIndexes&gt;&gt;;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="foldopen" id="foldopen00075" data-start="{" data-end="};">
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml">   75</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">   76</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">matrix</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">   78</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">matrix</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">   80</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">   82</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">matrix</a>(<a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">   84</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">operator=</a>(<a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a> &amp;&amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OtherMatrix&gt;</div>
<div class="foldopen" id="foldopen00087" data-start="{" data-end="}">
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">   87</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">matrix</a>(</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;OtherMatrix, RowIndexes, ColumnIndexes&gt;</a> &amp;other)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>      : <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>} {}</div>
</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae5c9133569272d4be0ebaebff0af51a4">   91</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae5c9133569272d4be0ebaebff0af51a4">matrix</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;other) : <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>{other} {}</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">template</span> &lt;arithmetic Type&gt;</div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="}">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a6571729cf099af1e9d21641f23aa7a69">   94</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a6571729cf099af1e9d21641f23aa7a69">matrix</a>(</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>      std::initializer_list&lt;std::initializer_list&lt;Type&gt;&gt; rows) {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <span class="keywordflow">for</span> (std::size_t i{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;row : rows) {</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      <span class="keywordflow">for</span> (std::size_t j{0}; <span class="keyword">const</span> <span class="keyword">auto</span> &amp;element : row) {</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(i, j) = element;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>        ++j;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>      }</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>      ++i;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  }</div>
</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> != 1 &amp;&amp;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>             <span class="keyword">sizeof</span>...(Types) == <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a>)</div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a051d3e4dba78958f5605ce5c920dbf91">  108</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a051d3e4dba78958f5605ce5c920dbf91">matrix</a>(<span class="keyword">const</span> Types &amp;...elements) {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    std::tuple element_pack{elements...};</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;RowIndexes&gt;</a>, 1&gt;([<span class="keyword">this</span>, &amp;element_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>      <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = std::get&lt;position&gt;(element_pack);</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    });</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  }</div>
</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> != 1 &amp;&amp;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>             <span class="keyword">sizeof</span>...(Types) == <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a>)</div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ace7c7708cfec414fff6191c84c265e1e">  118</a></span>  <span class="keyword">explicit</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ace7c7708cfec414fff6191c84c265e1e">matrix</a>(<span class="keyword">const</span> Types &amp;...elements) {</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    std::tuple element_pack{elements...};</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <a class="code hl_function" href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">for_constexpr&lt;0, size&lt;ColumnIndexes&gt;</a>, 1&gt;(</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>        [<span class="keyword">this</span>, &amp;element_pack](<span class="keyword">auto</span> position) {</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>          <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>[position] = std::get&lt;position&gt;(element_pack);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>        });</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  }</div>
</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#adbf69ba017e75f3f94998a1b77dbba20">  126</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span>(<span class="keyword">false</span>)</div>
<div class="foldopen" id="foldopen00127" data-start="{" data-end="}">
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a7f084192d67c6e48c4b832fb94860128">  127</a></span>  <span class="keyword">operator</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>() <span class="keyword">const</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  {</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, 0)};</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  }</div>
</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00134" data-start="{" data-end="}">
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aef6b9b016be3ff047fcc194e000cd928">  134</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aef6b9b016be3ff047fcc194e000cd928">operator[]</a>(std::size_t index)</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> != 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  {</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(index, 0);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  }</div>
</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="foldopen" id="foldopen00140" data-start="{" data-end="}">
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a74f5b911497823f68c3e339453841b60">  140</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a74f5b911497823f68c3e339453841b60">operator[]</a>(std::size_t index) <span class="keyword">const</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> != 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(index, 0);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  }</div>
</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afdddde712f1a5e85d3e02f02f0d3e663">  146</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afdddde712f1a5e85d3e02f02f0d3e663">operator[]</a>(std::size_t index)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  {</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, index);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  }</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a9c9c4f7e62dfc384abe5432958b864e0">  152</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a9c9c4f7e62dfc384abe5432958b864e0">operator[]</a>(std::size_t index) <span class="keyword">const</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, index);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  }</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="foldopen" id="foldopen00158" data-start="{" data-end="}">
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#abdb04b0a42b226a638a7fdbca70eddb8">  158</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#abdb04b0a42b226a638a7fdbca70eddb8">operator[]</a>(std::size_t row,</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>                                                  std::size_t column) {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(row, column);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  }</div>
</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;</div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a97614de28771cc2f71b84f5c397294a1">  164</a></span>  <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a97614de28771cc2f71b84f5c397294a1">operator[]</a>(std::size_t row, std::size_t column)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(row, column);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  }</div>
</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="foldopen" id="foldopen00168" data-start="{" data-end="}">
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a63ea03b5ecb9b014b95427944b77c1d1">  168</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a63ea03b5ecb9b014b95427944b77c1d1">operator()</a>(std::size_t index)</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> != 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  {</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(index, 0);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  }</div>
</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="foldopen" id="foldopen00174" data-start="{" data-end="}">
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac186899ef9fa1dbaa9fb75387e20f9b4">  174</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac186899ef9fa1dbaa9fb75387e20f9b4">operator()</a>(std::size_t index) <span class="keyword">const</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> != 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  {</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(index, 0);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  }</div>
</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="foldopen" id="foldopen00180" data-start="{" data-end="}">
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aee7a32584c3f36fa4f56c24eb524ebe8">  180</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aee7a32584c3f36fa4f56c24eb524ebe8">operator()</a>(std::size_t index)</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  {</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, index);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  }</div>
</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="foldopen" id="foldopen00186" data-start="{" data-end="}">
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa3f8e895f6bd9b95f541ec7d7555a0de">  186</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa3f8e895f6bd9b95f541ec7d7555a0de">operator()</a>(std::size_t index) <span class="keyword">const</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  {</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0, index);</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  }</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="foldopen" id="foldopen00192" data-start="{" data-end="}">
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a0c6c62c07aa2f6b70198fd526f5ed103">  192</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> &amp;<a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a0c6c62c07aa2f6b70198fd526f5ed103">operator()</a>(std::size_t row,</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>                                                  std::size_t column) {</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(row, column);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  }</div>
</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">const</span> <span class="keyword">auto</span> &amp;</div>
<div class="foldopen" id="foldopen00198" data-start="{" data-end="}">
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a47cd45ecf764df8c283d5f2df9f368d7">  198</a></span>  <a class="code hl_function" href="structfcarouge_1_1indexed_1_1matrix.xhtml#a47cd45ecf764df8c283d5f2df9f368d7">operator()</a>(std::size_t row, std::size_t column)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(row, column);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  }</div>
</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno"><a class="line" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">  202</a></span>  Matrix <a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>};</div>
</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... ColumnIndexes&gt;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#af3a6049a52c6cb96d8bcbd57b9f84125">  207</a></span><span class="keyword">using </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">indexed_row_vector</a> =</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, std::tuple&lt;int&gt;</a>, std::tuple&lt;ColumnIndexes...&gt;&gt;;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span>... RowIndexes&gt;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a6a70b0b4558bc573e8816f4c59ea91f0">  212</a></span><span class="keyword">using </span><a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">indexed_column_vector</a> =</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix</a>&lt;Matrix, std::tuple&lt;RowIndexes...&gt;, std::tuple&lt;int&gt;&gt;;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">bool</span></div>
<div class="foldopen" id="foldopen00222" data-start="{" data-end="}">
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">  222</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">operator==</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>           <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> == rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>}</div>
</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>          <span class="keyword">typename</span> ColumnIndexes, <span class="keyword">typename</span> Indexes&gt;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00230" data-start="{" data-end="}">
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">  230</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, Indexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, Indexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;product&lt;Matrix1, Matrix2&gt;</a>&gt;, RowIndexes, ColumnIndexes&gt;{</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>      lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> * rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>}</div>
</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00240" data-start="{" data-end="}">
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">  240</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">operator+</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix1&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> +</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>                                                              rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>}</div>
</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00250" data-start="{" data-end="}">
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a48f9f1164a7f175982534336bae464ef">  250</a></span><span class="keyword">operator</span>+(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0) + rhs};</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>}</div>
</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00259" data-start="{" data-end="}">
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">  259</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">operator-</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix1&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> -</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>                                                              rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>}</div>
</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00269" data-start="{" data-end="}">
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a06a71ed17d345686262e82cd6d74b7ef">  269</a></span><span class="keyword">operator</span>-(Scalar lhs, <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{lhs - rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0)};</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>}</div>
</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00278" data-start="{" data-end="}">
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a4f0ad58f8a1a965b334d1fc09130f9f1">  278</a></span><span class="keyword">operator</span>*(Scalar lhs, <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{lhs * rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0)};</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>}</div>
</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00285" data-start="{" data-end="}">
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#af2491a79b6a321f5f8890f3b1f8f0377">  285</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(Scalar lhs, <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs * rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>}</div>
</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00293" data-start="{" data-end="}">
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ac9968aef067da8f2a348ea0f3124f927">  293</a></span><span class="keyword">operator</span>*(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0) * rhs};</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>}</div>
</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00300" data-start="{" data-end="}">
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#ac0551e9efa1af2b91988881bebf4eaca">  300</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">operator*</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> * rhs};</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>}</div>
</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix1, <span class="keyword">typename</span> Matrix2, <span class="keyword">typename</span> RowIndexes1,</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>          <span class="keyword">typename</span> RowIndexes2, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00307" data-start="{" data-end="}">
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">  307</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">operator/</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix1, RowIndexes1, ColumnIndexes&gt;</a> &amp;lhs,</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>          <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix2, RowIndexes2, ColumnIndexes&gt;</a> &amp;rhs) {</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;divide&lt;Matrix1, Matrix2&gt;</a>&gt;, RowIndexes1, RowIndexes2&gt;{</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>      lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> / rhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>};</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>}</div>
</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00316" data-start="{" data-end="}">
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#addd8a1c7956caebecaa0fd4e92a3c7f4">  316</a></span><a class="code hl_function" href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">operator/</a>(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;evaluate&lt;Matrix&gt;</a>, RowIndexes, ColumnIndexes&gt;{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a> / rhs};</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>}</div>
</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span><span class="keyword">template</span> &lt;<a class="code hl_concept" href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a> Scalar, <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes,</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>          <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;RowIndexes&gt;</a> == 1 &amp;&amp; <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>[[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="foldopen" id="foldopen00324" data-start="{" data-end="}">
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1indexed.xhtml#a9875b33c0d2d401eb73cc2873327a135">  324</a></span><span class="keyword">operator</span>/(<span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;lhs, Scalar rhs) {</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>  <span class="keywordflow">return</span> <a class="code hl_typedef" href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">element_t&lt;0, RowIndexes, 0, ColumnIndexes&gt;</a>{lhs.<a class="code hl_variable" href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">data</a>(0) / rhs};</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>}</div>
</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>} <span class="comment">// namespace fcarouge::indexed</span></div>
</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes,</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>          <span class="keyword">typename</span> Char&gt;</div>
<div class="foldopen" id="foldopen00333" data-start="{" data-end="};">
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml">  333</a></span><span class="keyword">struct </span>std::formatter&lt;</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>    <a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a>::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;, Char&gt; {</div>
<div class="foldopen" id="foldopen00335" data-start="{" data-end="}">
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">  335</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">parse</a>(std::basic_format_parse_context&lt;Char&gt; &amp;parse_context) {</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  }</div>
</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00340" data-start="{" data-end="}">
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">  340</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">format</a>(</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>      -&gt; OutputIterator {</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>    <span class="keywordflow">for</span> (std::size_t i{0}; i &lt; fcarouge::size&lt;RowIndexes&gt;; ++i) {</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>      <span class="keywordflow">if</span> (i &gt; 0) {</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>      }</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span> </div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>      <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>        <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>          format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>        }</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span> </div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>        format_context.advance_to(</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>            std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(i, j)));</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>      }</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>      format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>    }</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span> </div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span> </div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  }</div>
</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00371" data-start="{" data-end="}">
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a85bb89489b747886979ba5857a1c9d4b">  371</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a85bb89489b747886979ba5857a1c9d4b">format</a>(</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size&lt;RowIndexes&gt;</a> == 1 &amp;&amp;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>             <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size&lt;ColumnIndexes&gt;</a> != 1)</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  {</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;[&quot;</span>));</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    <span class="keywordflow">for</span> (std::size_t j{0}; j &lt; fcarouge::size&lt;ColumnIndexes&gt;; ++j) {</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>      <span class="keywordflow">if</span> (j &gt; 0) {</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>        format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;, &quot;</span>));</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>      }</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>      format_context.advance_to(</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>          std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(0, j)));</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>    }</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span> </div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>    format_context.advance_to(std::format_to(format_context.out(), <span class="stringliteral">&quot;]&quot;</span>));</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>  }</div>
</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span> </div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> OutputIterator&gt;</div>
<div class="foldopen" id="foldopen00395" data-start="{" data-end="}">
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno"><a class="line" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#ad868fda7b8d9ce4fe9a7d01f5836ec88">  395</a></span>  <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#ad868fda7b8d9ce4fe9a7d01f5836ec88">format</a>(</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>      <span class="keyword">const</span> <a class="code hl_struct" href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;</a> &amp;value,</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>      std::basic_format_context&lt;OutputIterator, Char&gt; &amp;format_context) <span class="keyword">const</span></div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>      -&gt; OutputIterator</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>    <span class="keyword">requires</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size&lt;RowIndexes&gt;</a> == 1 &amp;&amp;</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>             <a class="code hl_variable" href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size&lt;ColumnIndexes&gt;</a> == 1)</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  {</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>    format_context.advance_to(</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>        std::format_to(format_context.out(), <span class="stringliteral">&quot;{}&quot;</span>, value.data(0, 0)));</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span> </div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>    <span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>  }</div>
</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>};</div>
</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> IndexedMatrix,</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>          <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="foldopen" id="foldopen00415" data-start="{" data-end="};">
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml">  415</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1evaluater.xhtml">evaluater</a>&lt;IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt; {</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno"><a class="line" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">  416</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">operator()</a>() const</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>      -&gt; IndexedMatrix&lt;<a class="code hl_typedef" href="namespacefcarouge.xhtml#acd5b06c86fbc7f4790315e50578d4e13">evaluate</a>&lt;Matrix&gt;, RowIndexes, ColumnIndexes&gt;;</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>};</div>
</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span> </div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>template &lt;template &lt;typename, typename, typename&gt; typename IndexedMatrix,</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>          typename Matrix, typename RowIndexes, typename ColumnIndexes&gt;</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>  requires requires(IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt; m) {</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>    m.data;</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  }</div>
<div class="foldopen" id="foldopen00426" data-start="{" data-end="};">
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml">  426</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1transposer.xhtml">transposer</a>&lt;IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt; {</div>
<div class="foldopen" id="foldopen00427" data-start="{" data-end="}">
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">  427</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">operator()</a>(</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>      <span class="keyword">const</span> IndexedMatrix&lt;Matrix, RowIndexes, ColumnIndexes&gt; &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>    <span class="keywordflow">return</span> IndexedMatrix&lt;evaluate&lt;transpose&lt;Matrix&gt;&gt;, ColumnIndexes,</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>                         RowIndexes&gt;{<a class="code hl_function" href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">t</a>(value.data)};</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>  }</div>
</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>};</div>
</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span> </div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span> </div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span><span class="keyword">inline</span> indexed::matrix&lt;<span class="keyword">decltype</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#ab1c0921e3b3af3a11420cfe30e308aa7">identity&lt;Matrix&gt;</a>), RowIndexes, ColumnIndexes&gt;</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>    <a class="code hl_variable" href="namespacefcarouge.xhtml#ab1c0921e3b3af3a11420cfe30e308aa7">identity</a>&lt;indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;{</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>        <a class="code hl_variable" href="namespacefcarouge.xhtml#ab1c0921e3b3af3a11420cfe30e308aa7">identity&lt;Matrix&gt;</a>};</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span> </div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> RowIndexes, <span class="keyword">typename</span> ColumnIndexes&gt;</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span><span class="keyword">inline</span> indexed::matrix&lt;<span class="keyword">decltype</span>(<a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero&lt;Matrix&gt;</a>), RowIndexes, ColumnIndexes&gt;</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>    <a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero</a>&lt;indexed::matrix&lt;Matrix, RowIndexes, ColumnIndexes&gt;&gt;{<a class="code hl_variable" href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">zero&lt;Matrix&gt;</a>};</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span> </div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span> </div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INDEXED_LINALG_HPP</span></div>
<div class="ttc" id="aconceptfcarouge_1_1arithmetic_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1arithmetic.xhtml">fcarouge::arithmetic</a></div><div class="ttdoc">Arithmetic concept.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00066">utility.hpp:66</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml">fcarouge::indexed</a></div><div class="ttdef"><b>Definition</b> <a href="#l00055">indexed_linalg.hpp:55</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a3c37385157c36fd9b3ec3727334e043e"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a3c37385157c36fd9b3ec3727334e043e">fcarouge::indexed::operator+</a></div><div class="ttdeci">constexpr auto operator+(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00240">indexed_linalg.hpp:240</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a3e05e1bd31102e3c7d4cfb83f1461f55"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a3e05e1bd31102e3c7d4cfb83f1461f55">fcarouge::indexed::operator-</a></div><div class="ttdeci">constexpr auto operator-(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00259">indexed_linalg.hpp:259</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_a9e6b0c78471624650df2c8d1c084b78b"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#a9e6b0c78471624650df2c8d1c084b78b">fcarouge::indexed::operator/</a></div><div class="ttdeci">constexpr auto operator/(const matrix&lt; Matrix1, RowIndexes1, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes2, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00307">indexed_linalg.hpp:307</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_aa8199abf2d777c2e4657fe578f730b81"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#aa8199abf2d777c2e4657fe578f730b81">fcarouge::indexed::operator*</a></div><div class="ttdeci">constexpr auto operator*(const matrix&lt; Matrix1, RowIndexes, Indexes &gt; &amp;lhs, const matrix&lt; Matrix2, Indexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00230">indexed_linalg.hpp:230</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_abe6bce60ee39e4e437143c1684cf4f4e"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#abe6bce60ee39e4e437143c1684cf4f4e">fcarouge::indexed::element_t</a></div><div class="ttdeci">product&lt; std::tuple_element_t&lt; RowIndex, RowIndexes &gt;, std::tuple_element_t&lt; ColumnIndex, ColumnIndexes &gt; &gt; element_t</div><div class="ttdef"><b>Definition</b> <a href="#l00060">indexed_linalg.hpp:60</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1indexed_xhtml_ad2615f4227ab85ccb64b2be969b3a887"><div class="ttname"><a href="namespacefcarouge_1_1indexed.xhtml#ad2615f4227ab85ccb64b2be969b3a887">fcarouge::indexed::operator==</a></div><div class="ttdeci">constexpr bool operator==(const matrix&lt; Matrix1, RowIndexes, ColumnIndexes &gt; &amp;lhs, const matrix&lt; Matrix2, RowIndexes, ColumnIndexes &gt; &amp;rhs)</div><div class="ttdef"><b>Definition</b> <a href="#l00222">indexed_linalg.hpp:222</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5ad0022b969a210b7261d0158bc1dd7b"><div class="ttname"><a href="namespacefcarouge.xhtml#a5ad0022b969a210b7261d0158bc1dd7b">fcarouge::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdoc">Compile-time for loop.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00223">utility.hpp:223</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a5d1b555b919a51d9ef29849f6e86b48a"><div class="ttname"><a href="namespacefcarouge.xhtml#a5d1b555b919a51d9ef29849f6e86b48a">fcarouge::t</a></div><div class="ttdeci">auto t(const Type &amp;value)</div><div class="ttdoc">Transpose helper function.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00187">utility.hpp:187</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ab1c0921e3b3af3a11420cfe30e308aa7"><div class="ttname"><a href="namespacefcarouge.xhtml#ab1c0921e3b3af3a11420cfe30e308aa7">fcarouge::identity</a></div><div class="ttdeci">constexpr Type identity</div><div class="ttdoc">The identity matrix.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00247">utility.hpp:247</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac4cffefdda8c01a267ce2700c6acb903"><div class="ttname"><a href="namespacefcarouge.xhtml#ac4cffefdda8c01a267ce2700c6acb903">fcarouge::size</a></div><div class="ttdeci">constexpr std::size_t size</div><div class="ttdoc">Size of tuple-like types.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00237">utility.hpp:237</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_acd5b06c86fbc7f4790315e50578d4e13"><div class="ttname"><a href="namespacefcarouge.xhtml#acd5b06c86fbc7f4790315e50578d4e13">fcarouge::evaluate</a></div><div class="ttdeci">std::invoke_result_t&lt; evaluater&lt; Type &gt; &gt; evaluate</div><div class="ttdoc">Evaluater helper type.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00163">utility.hpp:163</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ae572d5a48afe03765d8e55617ea78689"><div class="ttname"><a href="namespacefcarouge.xhtml#ae572d5a48afe03765d8e55617ea78689">fcarouge::product</a></div><div class="ttdeci">internal::product&lt; Lhs, Rhs &gt; product</div><div class="ttdoc">The deduced result type of the product.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00207">utility.hpp:207</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aef6fb6c8a265d85709b951506123a5f1"><div class="ttname"><a href="namespacefcarouge.xhtml#aef6fb6c8a265d85709b951506123a5f1">fcarouge::zero</a></div><div class="ttdeci">constexpr Type zero</div><div class="ttdoc">The zero matrix.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00266">utility.hpp:266</a></div></div>
<div class="ttc" id="astructfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4_xhtml_a9d8cc0bf801b4addcb53b6e63a96e4be"><div class="ttname"><a href="structfcarouge_1_1evaluater_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a9d8cc0bf801b4addcb53b6e63a96e4be">fcarouge::evaluater&lt; IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()() const -&gt; IndexedMatrix&lt; evaluate&lt; Matrix &gt;, RowIndexes, ColumnIndexes &gt;</div></div>
<div class="ttc" id="astructfcarouge_1_1evaluater_xhtml"><div class="ttname"><a href="structfcarouge_1_1evaluater.xhtml">fcarouge::evaluater</a></div><div class="ttdoc">Linear algebra evaluater override expression lazy evaluation specialization point.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00158">utility.hpp:158</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml">fcarouge::indexed::matrix</a></div><div class="ttdoc">Indexed matrix.</div><div class="ttdef"><b>Definition</b> <a href="#l00075">indexed_linalg.hpp:75</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a051d3e4dba78958f5605ce5c920dbf91"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a051d3e4dba78958f5605ce5c920dbf91">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Types &amp;...elements)</div><div class="ttdef"><b>Definition</b> <a href="#l00108">indexed_linalg.hpp:108</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a0c6c62c07aa2f6b70198fd526f5ed103"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a0c6c62c07aa2f6b70198fd526f5ed103">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr auto &amp; operator()(std::size_t row, std::size_t column)</div><div class="ttdef"><b>Definition</b> <a href="#l00192">indexed_linalg.hpp:192</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a47cd45ecf764df8c283d5f2df9f368d7"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a47cd45ecf764df8c283d5f2df9f368d7">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr const auto &amp; operator()(std::size_t row, std::size_t column) const</div><div class="ttdef"><b>Definition</b> <a href="#l00198">indexed_linalg.hpp:198</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a63ea03b5ecb9b014b95427944b77c1d1"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a63ea03b5ecb9b014b95427944b77c1d1">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr auto &amp; operator()(std::size_t index)</div><div class="ttdef"><b>Definition</b> <a href="#l00168">indexed_linalg.hpp:168</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a6571729cf099af1e9d21641f23aa7a69"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a6571729cf099af1e9d21641f23aa7a69">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(std::initializer_list&lt; std::initializer_list&lt; Type &gt; &gt; rows)</div><div class="ttdef"><b>Definition</b> <a href="#l00094">indexed_linalg.hpp:94</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a74f5b911497823f68c3e339453841b60"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a74f5b911497823f68c3e339453841b60">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr const auto &amp; operator[](std::size_t index) const</div><div class="ttdef"><b>Definition</b> <a href="#l00140">indexed_linalg.hpp:140</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a961babc884168f5958d6a41a67e6cd9c"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a961babc884168f5958d6a41a67e6cd9c">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix()=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a97614de28771cc2f71b84f5c397294a1"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a97614de28771cc2f71b84f5c397294a1">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr const auto &amp; operator[](std::size_t row, std::size_t column) const</div><div class="ttdef"><b>Definition</b> <a href="#l00164">indexed_linalg.hpp:164</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_a9c9c4f7e62dfc384abe5432958b864e0"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#a9c9c4f7e62dfc384abe5432958b864e0">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr const auto &amp; operator[](std::size_t index) const</div><div class="ttdef"><b>Definition</b> <a href="#l00152">indexed_linalg.hpp:152</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aa3f8e895f6bd9b95f541ec7d7555a0de"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa3f8e895f6bd9b95f541ec7d7555a0de">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr const auto &amp; operator()(std::size_t index) const</div><div class="ttdef"><b>Definition</b> <a href="#l00186">indexed_linalg.hpp:186</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aa6c56fa45f43cde7a8d49e854602b230"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aa6c56fa45f43cde7a8d49e854602b230">fcarouge::indexed::matrix::operator=</a></div><div class="ttdeci">constexpr matrix &amp; operator=(matrix &amp;&amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aab31fcca43d93d2cb30ee7dd657ff2d8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aab31fcca43d93d2cb30ee7dd657ff2d8">fcarouge::indexed::matrix::operator=</a></div><div class="ttdeci">constexpr matrix &amp; operator=(const matrix &amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_abdb04b0a42b226a638a7fdbca70eddb8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#abdb04b0a42b226a638a7fdbca70eddb8">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr auto &amp; operator[](std::size_t row, std::size_t column)</div><div class="ttdef"><b>Definition</b> <a href="#l00158">indexed_linalg.hpp:158</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ac186899ef9fa1dbaa9fb75387e20f9b4"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac186899ef9fa1dbaa9fb75387e20f9b4">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr const auto &amp; operator()(std::size_t index) const</div><div class="ttdef"><b>Definition</b> <a href="#l00174">indexed_linalg.hpp:174</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ac7b238d94c643c5ee749fae955e43d41"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ac7b238d94c643c5ee749fae955e43d41">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(matrix &amp;&amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ace7c7708cfec414fff6191c84c265e1e"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ace7c7708cfec414fff6191c84c265e1e">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const Types &amp;...elements)</div><div class="ttdef"><b>Definition</b> <a href="#l00118">indexed_linalg.hpp:118</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ada3b2d2d61f670a3829f07ac05ceb810"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ada3b2d2d61f670a3829f07ac05ceb810">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const matrix&lt; OtherMatrix, RowIndexes, ColumnIndexes &gt; &amp;other)</div><div class="ttdef"><b>Definition</b> <a href="#l00087">indexed_linalg.hpp:87</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_adb2b9757a13fe56845b8341c97d4120b"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#adb2b9757a13fe56845b8341c97d4120b">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const matrix &amp;other)=default</div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_ae5c9133569272d4be0ebaebff0af51a4"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#ae5c9133569272d4be0ebaebff0af51a4">fcarouge::indexed::matrix::matrix</a></div><div class="ttdeci">constexpr matrix(const auto &amp;other)</div><div class="ttdef"><b>Definition</b> <a href="#l00091">indexed_linalg.hpp:91</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aee7a32584c3f36fa4f56c24eb524ebe8"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aee7a32584c3f36fa4f56c24eb524ebe8">fcarouge::indexed::matrix::operator()</a></div><div class="ttdeci">constexpr auto &amp; operator()(std::size_t index)</div><div class="ttdef"><b>Definition</b> <a href="#l00180">indexed_linalg.hpp:180</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_aef6b9b016be3ff047fcc194e000cd928"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#aef6b9b016be3ff047fcc194e000cd928">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr auto &amp; operator[](std::size_t index)</div><div class="ttdef"><b>Definition</b> <a href="#l00134">indexed_linalg.hpp:134</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_afdddde712f1a5e85d3e02f02f0d3e663"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#afdddde712f1a5e85d3e02f02f0d3e663">fcarouge::indexed::matrix::operator[]</a></div><div class="ttdeci">constexpr auto &amp; operator[](std::size_t index)</div><div class="ttdef"><b>Definition</b> <a href="#l00146">indexed_linalg.hpp:146</a></div></div>
<div class="ttc" id="astructfcarouge_1_1indexed_1_1matrix_xhtml_afe3f85237b8320e3ee8bf0de633f2209"><div class="ttname"><a href="structfcarouge_1_1indexed_1_1matrix.xhtml#afe3f85237b8320e3ee8bf0de633f2209">fcarouge::indexed::matrix::data</a></div><div class="ttdeci">Matrix data</div><div class="ttdef"><b>Definition</b> <a href="#l00202">indexed_linalg.hpp:202</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4_xhtml_a6a30615c98ddf9e6c7b9fb292fe94b10"><div class="ttname"><a href="structfcarouge_1_1transposer_3_01_indexed_matrix_3_01_matrix_00_01_row_indexes_00_01_column_indexes_01_4_01_4.xhtml#a6a30615c98ddf9e6c7b9fb292fe94b10">fcarouge::transposer&lt; IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &gt;::operator()</a></div><div class="ttdeci">constexpr auto operator()(const IndexedMatrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value) const</div><div class="ttdef"><b>Definition</b> <a href="#l00427">indexed_linalg.hpp:427</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transposer_xhtml"><div class="ttname"><a href="structfcarouge_1_1transposer.xhtml">fcarouge::transposer</a></div><div class="ttdoc">Linear algebra transposer specialization point.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00166">utility.hpp:166</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_a22ccf9a43345e00fa844932355833178"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a22ccf9a43345e00fa844932355833178">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::parse</a></div><div class="ttdeci">constexpr auto parse(std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</div><div class="ttdef"><b>Definition</b> <a href="#l00335">indexed_linalg.hpp:335</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_a85bb89489b747886979ba5857a1c9d4b"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#a85bb89489b747886979ba5857a1c9d4b">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(fcarouge::size&lt; RowIndexes &gt;==1 &amp;&amp;fcarouge::size&lt; ColumnIndexes &gt; !=1)</div><div class="ttdef"><b>Definition</b> <a href="#l00371">indexed_linalg.hpp:371</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_ad868fda7b8d9ce4fe9a7d01f5836ec88"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#ad868fda7b8d9ce4fe9a7d01f5836ec88">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator requires(fcarouge::size&lt; RowIndexes &gt;==1 &amp;&amp;fcarouge::size&lt; ColumnIndexes &gt;==1)</div><div class="ttdef"><b>Definition</b> <a href="#l00395">indexed_linalg.hpp:395</a></div></div>
<div class="ttc" id="astructstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c_xhtml_afe0524a0509e8ae2a48c06d3e944c3ae"><div class="ttname"><a href="structstd_1_1formatter_3_01fcarouge_1_1indexed_1_1matrix_3_01_matrix_00_01_row_indexes_00_01_col36c9e4b79d59cbc823769fd6d46acb8c.xhtml#afe0524a0509e8ae2a48c06d3e944c3ae">std::formatter&lt; fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt;, Char &gt;::format</a></div><div class="ttdeci">constexpr auto format(const fcarouge::indexed::matrix&lt; Matrix, RowIndexes, ColumnIndexes &gt; &amp;value, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</div><div class="ttdef"><b>Definition</b> <a href="#l00340">indexed_linalg.hpp:340</a></div></div>
<div class="ttc" id="autility_8hpp_xhtml"><div class="ttname"><a href="utility_8hpp.xhtml">utility.hpp</a></div><div class="ttdoc">The collection of utilities supporting the library.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5815af820a9cc9481f1d0990a0d60286.xhtml">support</a></li><li class="navelem"><a class="el" href="dir_1621ce20bb0f106b02cf49e2771a1732.xhtml">indexed</a></li><li class="navelem"><a class="el" href="dir_e336bd576f52f793a6c73d300cd26dff.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="indexed__linalg_8hpp.xhtml">indexed_linalg.hpp</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.12.0 </li>
  </ul>
</div>
</body>
</html>
