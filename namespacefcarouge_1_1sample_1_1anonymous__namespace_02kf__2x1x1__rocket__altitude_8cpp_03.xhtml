<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp} Namespace Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a2d00cd54b0e206acd56005bdae642e1d" id="r_a2d00cd54b0e206acd56005bdae642e1d"><td class="memTemplParams" colspan="2">template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Size&gt; </td></tr>
<tr class="memitem:a2d00cd54b0e206acd56005bdae642e1d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a2d00cd54b0e206acd56005bdae642e1d">vector</a> = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a>&lt; double, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">Size</a> &gt;</td></tr>
<tr class="separator:a2d00cd54b0e206acd56005bdae642e1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac316610fc67a551a14becb2df75a9e52" id="r_ac316610fc67a551a14becb2df75a9e52"><td class="memTemplParams" colspan="2">template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Row, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Column&gt; </td></tr>
<tr class="memitem:ac316610fc67a551a14becb2df75a9e52"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ac316610fc67a551a14becb2df75a9e52">matrix</a> = <a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ac316610fc67a551a14becb2df75a9e52">matrix</a>&lt; double, Row, Column &gt;</td></tr>
<tr class="separator:ac316610fc67a551a14becb2df75a9e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a130e9331ad0b13a8803c8a2d8f12078b" id="r_a130e9331ad0b13a8803c8a2d8f12078b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a130e9331ad0b13a8803c8a2d8f12078b">altitude</a> = double</td></tr>
<tr class="separator:a130e9331ad0b13a8803c8a2d8f12078b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcfcce0355ec4bd08cd65d707a1cda77" id="r_abcfcce0355ec4bd08cd65d707a1cda77"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#abcfcce0355ec4bd08cd65d707a1cda77">acceleration</a> = double</td></tr>
<tr class="separator:abcfcce0355ec4bd08cd65d707a1cda77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ac4a327d0211c02661247cdf832c98d" id="r_a6ac4a327d0211c02661247cdf832c98d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">milliseconds</a> = std::chrono::milliseconds</td></tr>
<tr class="separator:a6ac4a327d0211c02661247cdf832c98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6c580637369071d6b596823aa1a6f35" id="r_ad6c580637369071d6b596823aa1a6f35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ad6c580637369071d6b596823aa1a6f35">state</a> = fcarouge::state&lt; <a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a2d00cd54b0e206acd56005bdae642e1d">vector</a>&lt; 2 &gt; &gt;</td></tr>
<tr class="separator:ad6c580637369071d6b596823aa1a6f35"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a8a72f3aea780587350d7527cfac09b9d" id="r_a8a72f3aea780587350d7527cfac09b9d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a8a72f3aea780587350d7527cfac09b9d">sample</a></td></tr>
<tr class="separator:a8a72f3aea780587350d7527cfac09b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="abcfcce0355ec4bd08cd65d707a1cda77" name="abcfcce0355ec4bd08cd65d707a1cda77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcfcce0355ec4bd08cd65d707a1cda77">&#9670;&#160;</a></span>acceleration</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::acceleration = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> double</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00013">13</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<a id="a130e9331ad0b13a8803c8a2d8f12078b" name="a130e9331ad0b13a8803c8a2d8f12078b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a130e9331ad0b13a8803c8a2d8f12078b">&#9670;&#160;</a></span>altitude</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::altitude = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> double</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00012">12</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<a id="ac316610fc67a551a14becb2df75a9e52" name="ac316610fc67a551a14becb2df75a9e52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac316610fc67a551a14becb2df75a9e52">&#9670;&#160;</a></span>matrix</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Row, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Column&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::matrix = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> <a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ac316610fc67a551a14becb2df75a9e52">matrix</a>&lt;double, Row, Column&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00011">11</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<a id="a6ac4a327d0211c02661247cdf832c98d" name="a6ac4a327d0211c02661247cdf832c98d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ac4a327d0211c02661247cdf832c98d">&#9670;&#160;</a></span>milliseconds</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::milliseconds = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> std::chrono::milliseconds</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<a id="ad6c580637369071d6b596823aa1a6f35" name="ad6c580637369071d6b596823aa1a6f35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6c580637369071d6b596823aa1a6f35">&#9670;&#160;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::state = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> fcarouge::state&lt;<a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a2d00cd54b0e206acd56005bdae642e1d">vector</a>&lt;2&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<a id="a2d00cd54b0e206acd56005bdae642e1d" name="a2d00cd54b0e206acd56005bdae642e1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d00cd54b0e206acd56005bdae642e1d">&#9670;&#160;</a></span>vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;<a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">using</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::vector = <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">typedef</a> <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">column_vector</a>&lt;double, <a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">Size</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00010">10</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a8a72f3aea780587350d7527cfac09b9d" name="a8a72f3aea780587350d7527cfac09b9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a72f3aea780587350d7527cfac09b9d">&#9670;&#160;</a></span>sample</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">auto</a> fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::sample</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml">kf_2x1x1_rocket_altitude.cpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   51</span>                            {[] {</div>
<div class="line"><span class="lineno">   52</span>  <span class="comment">// A 2x1x1 filter, constant acceleration dynamic model, no control, step</span></div>
<div class="line"><span class="lineno">   53</span>  <span class="comment">// time.</span></div>
<div class="line"><span class="lineno">   54</span>  <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> filter{</div>
<div class="line"><span class="lineno">   55</span>      <span class="comment">// We don&#39;t know the rocket location; we will set initial position and</span></div>
<div class="line"><span class="lineno">   56</span>      <span class="comment">// velocity to state X = [0.0, 0.0].</span></div>
<div class="line"><span class="lineno">   57</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ad6c580637369071d6b596823aa1a6f35">state</a>{0., 0.},</div>
<div class="line"><span class="lineno">   58</span>      <span class="comment">// The filter estimates the output Z altitude as a double [m].</span></div>
<div class="line"><span class="lineno">   59</span>      <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">output&lt;altitude&gt;</a>,</div>
<div class="line"><span class="lineno">   60</span>      <span class="comment">// The filter receives in the input U accelerometer as a double [m.s^-2].</span></div>
<div class="line"><span class="lineno">   61</span>      <a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">input&lt;acceleration&gt;</a>,</div>
<div class="line"><span class="lineno">   62</span>      <span class="comment">// Since our initial state vector is a guess, we will set a very high</span></div>
<div class="line"><span class="lineno">   63</span>      <span class="comment">// estimate uncertainty. The high estimate uncertainty P results in high</span></div>
<div class="line"><span class="lineno">   64</span>      <span class="comment">// Kalman gain, giving a high weight to the measurement.</span></div>
<div class="line"><span class="lineno">   65</span>      estimate_uncertainty{{500., 0.}, {0., 500.}},</div>
<div class="line"><span class="lineno">   66</span>      <span class="comment">// We will assume a discrete noise model - the noise is different at each</span></div>
<div class="line"><span class="lineno">   67</span>      <span class="comment">// time period, but it is constant between time periods. In our previous</span></div>
<div class="line"><span class="lineno">   68</span>      <span class="comment">// example, we used the system&#39;s random variance in acceleration σ^2 as a</span></div>
<div class="line"><span class="lineno">   69</span>      <span class="comment">// multiplier of the process noise matrix. But here, we have an</span></div>
<div class="line"><span class="lineno">   70</span>      <span class="comment">// accelerometer that measures the system random acceleration. The</span></div>
<div class="line"><span class="lineno">   71</span>      <span class="comment">// accelerometer error v is much lower than system&#39;s random acceleration,</span></div>
<div class="line"><span class="lineno">   72</span>      <span class="comment">// therefore we use ϵ^2 as a multiplier of the process noise matrix. This</span></div>
<div class="line"><span class="lineno">   73</span>      <span class="comment">// makes our estimation uncertainty much lower!</span></div>
<div class="line"><span class="lineno">   74</span>      <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">process_uncertainty</a>{[]([[maybe_unused]] <span class="keyword">const</span> vector&lt;2&gt; &amp;x,</div>
<div class="line"><span class="lineno">   75</span>                             <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">milliseconds</a> &amp;delta_time) {</div>
<div class="line"><span class="lineno">   76</span>        <span class="keyword">const</span> <span class="keyword">auto</span> dt{std::chrono::duration&lt;double&gt;(delta_time).count()};</div>
<div class="line"><span class="lineno">   77</span>        <span class="keywordflow">return</span> matrix&lt;2, 2&gt;{</div>
<div class="line"><span class="lineno">   78</span>            {0.1 * 0.1 * dt * dt * dt * dt / 4, 0.1 * 0.1 * dt * dt * dt / 2},</div>
<div class="line"><span class="lineno">   79</span>            {0.1 * 0.1 * dt * dt * dt / 2, 0.1 * 0.1 * dt * dt}};</div>
<div class="line"><span class="lineno">   80</span>      }},</div>
<div class="line"><span class="lineno">   81</span>      <span class="comment">// For the sake of the example simplicity, we will assume a constant</span></div>
<div class="line"><span class="lineno">   82</span>      <span class="comment">// measurement uncertainty: R1 = R2...Rn-1 = Rn = R.</span></div>
<div class="line"><span class="lineno">   83</span>      <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">output_uncertainty</a>{400.},</div>
<div class="line"><span class="lineno">   84</span>      <span class="comment">// The state transition matrix F would be:</span></div>
<div class="line"><span class="lineno">   85</span>      <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">state_transition</a>{[]([[maybe_unused]] <span class="keyword">const</span> vector&lt;2&gt; &amp;x,</div>
<div class="line"><span class="lineno">   86</span>                          [[maybe_unused]] <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#abcfcce0355ec4bd08cd65d707a1cda77">acceleration</a> &amp;u,</div>
<div class="line"><span class="lineno">   87</span>                          <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">milliseconds</a> &amp;delta_time) {</div>
<div class="line"><span class="lineno">   88</span>        <span class="keyword">const</span> <span class="keyword">auto</span> dt{std::chrono::duration&lt;double&gt;(delta_time).count()};</div>
<div class="line"><span class="lineno">   89</span>        <span class="keywordflow">return</span> matrix&lt;2, 2&gt;{{1., dt}, {0., 1.}};</div>
<div class="line"><span class="lineno">   90</span>      }},</div>
<div class="line"><span class="lineno">   91</span>      <span class="comment">// The control matrix G would be:</span></div>
<div class="line"><span class="lineno">   92</span>      <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#ab441fe9a9ee342227522822f5245e2a2">input_control</a>{[](<span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">milliseconds</a> &amp;delta_time) {</div>
<div class="line"><span class="lineno">   93</span>        <span class="keyword">const</span> <span class="keyword">auto</span> dt{std::chrono::duration&lt;double&gt;(delta_time).count()};</div>
<div class="line"><span class="lineno">   94</span>        <span class="keywordflow">return</span> vector&lt;2&gt;{0.0313, dt};</div>
<div class="line"><span class="lineno">   95</span>      }},</div>
<div class="line"><span class="lineno">   96</span>      <span class="comment">// The filter prediction uses a delta time [ms] parameter.</span></div>
<div class="line"><span class="lineno">   97</span>      prediction_types&lt;milliseconds&gt;};</div>
<div class="line"><span class="lineno">   98</span> </div>
<div class="line"><span class="lineno">   99</span>  <span class="comment">// We also don&#39;t know what the rocket acceleration is, but we can assume that</span></div>
<div class="line"><span class="lineno">  100</span>  <span class="comment">// it&#39;s greater than zero. Let&#39;s assume: u0 = g</span></div>
<div class="line"><span class="lineno">  101</span>  <span class="keyword">const</span> <span class="keywordtype">double</span> gravity{-9.8}; <span class="comment">// [m.s^-2]</span></div>
<div class="line"><span class="lineno">  102</span>  <span class="keyword">const</span> <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">milliseconds</a> delta_time{250};</div>
<div class="line"><span class="lineno">  103</span>  <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.predict(delta_time, -gravity);</div>
<div class="line"><span class="lineno">  104</span> </div>
<div class="line"><span class="lineno">  105</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[0] / 0.3) &lt; 0.03 &amp;&amp;</div>
<div class="line"><span class="lineno">  106</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[1] / 2.45) &lt; 0.03 &amp;&amp;</div>
<div class="line"><span class="lineno">  107</span>         <span class="stringliteral">&quot;The state estimates expected at 3% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  108</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 531.25) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  109</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 1) / 125) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  110</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 0) / 125) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  111</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 1) / 500) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  112</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  113</span> </div>
<div class="line"><span class="lineno">  114</span>  <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.update(-32.4);</div>
<div class="line"><span class="lineno">  115</span> </div>
<div class="line"><span class="lineno">  116</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[0] / -18.35) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  117</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[1] / -1.94) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  118</span>         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  119</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 228.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  120</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 1) / 53.7) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  121</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 0) / 53.7) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  122</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 1) / 483.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  123</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  124</span> </div>
<div class="line"><span class="lineno">  125</span>  <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.predict(delta_time, 39.72 + gravity);</div>
<div class="line"><span class="lineno">  126</span> </div>
<div class="line"><span class="lineno">  127</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[0] / -17.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  128</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[1] / 5.54) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  129</span>         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  130</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 285.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  131</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 1) / 174.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  132</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 0) / 174.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  133</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 1) / 483.2) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  134</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  135</span> </div>
<div class="line"><span class="lineno">  136</span>  <span class="comment">// And so on, run a step of the filter, updating and predicting, every</span></div>
<div class="line"><span class="lineno">  137</span>  <span class="comment">// measurements period: Δt = 250ms. The period is constant but passed as</span></div>
<div class="line"><span class="lineno">  138</span>  <span class="comment">// variable for the example. The lambda helper shows how to simplify the</span></div>
<div class="line"><span class="lineno">  139</span>  <span class="comment">// filter step call.</span></div>
<div class="line"><span class="lineno">  140</span>  <span class="keyword">const</span> <span class="keyword">auto</span> step{[&amp;<a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>, &amp;delta_time](<a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a130e9331ad0b13a8803c8a2d8f12078b">altitude</a> measured_altitude,</div>
<div class="line"><span class="lineno">  141</span>                                         <a class="code hl_typedef" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#abcfcce0355ec4bd08cd65d707a1cda77">acceleration</a> measured_acceleration) {</div>
<div class="line"><span class="lineno">  142</span>    <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.update(measured_altitude);</div>
<div class="line"><span class="lineno">  143</span>    <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.predict(delta_time, measured_acceleration);</div>
<div class="line"><span class="lineno">  144</span>  }};</div>
<div class="line"><span class="lineno">  145</span> </div>
<div class="line"><span class="lineno">  146</span>  step(-11.1, 40.02 + gravity);</div>
<div class="line"><span class="lineno">  147</span> </div>
<div class="line"><span class="lineno">  148</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[0] / -12.3) &lt; 0.002 &amp;&amp;</div>
<div class="line"><span class="lineno">  149</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[1] / 14.8) &lt; 0.002 &amp;&amp;</div>
<div class="line"><span class="lineno">  150</span>         <span class="stringliteral">&quot;The state estimates expected at 0.2% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  151</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 244.9) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  152</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 1) / 211.6) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  153</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 0) / 211.6) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  154</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 1) / 438.8) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  155</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  156</span> </div>
<div class="line"><span class="lineno">  157</span>  step(18., 39.97 + gravity);</div>
<div class="line"><span class="lineno">  158</span>  step(22.9, 39.81 + gravity);</div>
<div class="line"><span class="lineno">  159</span>  step(19.5, 39.75 + gravity);</div>
<div class="line"><span class="lineno">  160</span>  step(28.5, 39.6 + gravity);</div>
<div class="line"><span class="lineno">  161</span>  step(46.5, 39.77 + gravity);</div>
<div class="line"><span class="lineno">  162</span>  step(68.9, 39.83 + gravity);</div>
<div class="line"><span class="lineno">  163</span>  step(48.2, 39.73 + gravity);</div>
<div class="line"><span class="lineno">  164</span>  step(56.1, 39.87 + gravity);</div>
<div class="line"><span class="lineno">  165</span>  step(90.5, 39.81 + gravity);</div>
<div class="line"><span class="lineno">  166</span>  step(104.9, 39.92 + gravity);</div>
<div class="line"><span class="lineno">  167</span>  step(140.9, 39.78 + gravity);</div>
<div class="line"><span class="lineno">  168</span>  step(148., 39.98 + gravity);</div>
<div class="line"><span class="lineno">  169</span>  step(187.6, 39.76 + gravity);</div>
<div class="line"><span class="lineno">  170</span>  step(209.2, 39.86 + gravity);</div>
<div class="line"><span class="lineno">  171</span>  step(244.6, 39.61 + gravity);</div>
<div class="line"><span class="lineno">  172</span>  step(276.4, 39.86 + gravity);</div>
<div class="line"><span class="lineno">  173</span>  step(323.5, 39.74 + gravity);</div>
<div class="line"><span class="lineno">  174</span>  step(357.3, 39.87 + gravity);</div>
<div class="line"><span class="lineno">  175</span>  step(357.4, 39.63 + gravity);</div>
<div class="line"><span class="lineno">  176</span>  step(398.3, 39.67 + gravity);</div>
<div class="line"><span class="lineno">  177</span>  step(446.7, 39.96 + gravity);</div>
<div class="line"><span class="lineno">  178</span>  step(465.1, 39.8 + gravity);</div>
<div class="line"><span class="lineno">  179</span>  step(529.4, 39.89 + gravity);</div>
<div class="line"><span class="lineno">  180</span>  step(570.4, 39.85 + gravity);</div>
<div class="line"><span class="lineno">  181</span>  step(636.8, 39.9 + gravity);</div>
<div class="line"><span class="lineno">  182</span>  step(693.3, 39.81 + gravity);</div>
<div class="line"><span class="lineno">  183</span>  step(707.3, 39.81 + gravity);</div>
<div class="line"><span class="lineno">  184</span> </div>
<div class="line"><span class="lineno">  185</span>  <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.update(748.5);</div>
<div class="line"><span class="lineno">  186</span> </div>
<div class="line"><span class="lineno">  187</span>  <span class="comment">// The Kalman gain for altitude converged to 0.12, which means that the</span></div>
<div class="line"><span class="lineno">  188</span>  <span class="comment">// estimation weight is much higher than the measurement weight.</span></div>
<div class="line"><span class="lineno">  189</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 49.3) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  190</span>         <span class="stringliteral">&quot;At this point, the altitude uncertainty px = 49.3, which means that &quot;</span></div>
<div class="line"><span class="lineno">  191</span>         <span class="stringliteral">&quot;the standard deviation of the prediction is square root of 49.3: &quot;</span></div>
<div class="line"><span class="lineno">  192</span>         <span class="stringliteral">&quot;7.02m (remember that the standard deviation of the measurement is &quot;</span></div>
<div class="line"><span class="lineno">  193</span>         <span class="stringliteral">&quot;20m).&quot;</span>);</div>
<div class="line"><span class="lineno">  194</span> </div>
<div class="line"><span class="lineno">  195</span>  <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.predict(delta_time, 39.68 + gravity);</div>
<div class="line"><span class="lineno">  196</span> </div>
<div class="line"><span class="lineno">  197</span>  <span class="comment">// At the beginning, the estimated altitude is influenced by measurements and</span></div>
<div class="line"><span class="lineno">  198</span>  <span class="comment">// it is not aligned well with the true rocket altitude, since the</span></div>
<div class="line"><span class="lineno">  199</span>  <span class="comment">// measurements are very noisy. But as the Kalman gain converges, the noisy</span></div>
<div class="line"><span class="lineno">  200</span>  <span class="comment">// measurement has less influence and the estimated altitude is well aligned</span></div>
<div class="line"><span class="lineno">  201</span>  <span class="comment">// with the true altitude. In this example we don&#39;t have any maneuvers that</span></div>
<div class="line"><span class="lineno">  202</span>  <span class="comment">// cause acceleration changes, but if we had, the control input</span></div>
<div class="line"><span class="lineno">  203</span>  <span class="comment">// (accelerometer) would update the state extrapolation equation.</span></div>
<div class="line"><span class="lineno">  204</span> </div>
<div class="line"><span class="lineno">  205</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[0] / 831.5) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  206</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.x()[1] / 222.94) &lt; 0.001 &amp;&amp;</div>
<div class="line"><span class="lineno">  207</span>         <span class="stringliteral">&quot;The state estimates expected at 0.1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  208</span>  assert(std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 0) / 54.3) &lt; 0.01 &amp;&amp;</div>
<div class="line"><span class="lineno">  209</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(0, 1) / 10.4) &lt; 0.01 &amp;&amp;</div>
<div class="line"><span class="lineno">  210</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 0) / 10.4) &lt; 0.01 &amp;&amp;</div>
<div class="line"><span class="lineno">  211</span>         std::abs(1 - <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">filter</a>.p()(1, 1) / 2.6) &lt; 0.01 &amp;&amp;</div>
<div class="line"><span class="lineno">  212</span>         <span class="stringliteral">&quot;The estimate uncertainty expected at 1% accuracy.&quot;</span>);</div>
<div class="line"><span class="lineno">  213</span> </div>
<div class="line"><span class="lineno">  214</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><span class="lineno">  215</span>}()};</div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdef"><b>Definition</b> <a href="kalman_8hpp_source.xhtml#l00134">kalman.hpp:134</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a198bcbdb5521548ddb61317e21ff8f1f"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a198bcbdb5521548ddb61317e21ff8f1f">fcarouge::internal::state_transition</a></div><div class="ttdeci">state_transition(Element) -&gt; state_transition&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a20aafbaa1ca1e63d87200afec6d43cc9"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a20aafbaa1ca1e63d87200afec6d43cc9">fcarouge::internal::filter</a></div><div class="ttdeci">constexpr make_filter&lt; Filter &gt; filter</div><div class="ttdef"><b>Definition</b> <a href="factory_8hpp_source.xhtml#l00268">factory.hpp:268</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a665945f3d976759241bf85f4102a2d16"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a665945f3d976759241bf85f4102a2d16">fcarouge::internal::output_uncertainty</a></div><div class="ttdeci">output_uncertainty(Element) -&gt; output_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a88ca8cd4d48af886c2c73835d77a1bf3"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a88ca8cd4d48af886c2c73835d77a1bf3">fcarouge::internal::process_uncertainty</a></div><div class="ttdeci">process_uncertainty(Element) -&gt; process_uncertainty&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ab441fe9a9ee342227522822f5245e2a2"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ab441fe9a9ee342227522822f5245e2a2">fcarouge::internal::input_control</a></div><div class="ttdeci">input_control(Element) -&gt; input_control&lt; Element &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03_xhtml_a130e9331ad0b13a8803c8a2d8f12078b"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a130e9331ad0b13a8803c8a2d8f12078b">fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::altitude</a></div><div class="ttdeci">double altitude</div><div class="ttdef"><b>Definition</b> <a href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00012">kf_2x1x1_rocket_altitude.cpp:12</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03_xhtml_a6ac4a327d0211c02661247cdf832c98d"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#a6ac4a327d0211c02661247cdf832c98d">fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::milliseconds</a></div><div class="ttdeci">std::chrono::milliseconds milliseconds</div><div class="ttdef"><b>Definition</b> <a href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00014">kf_2x1x1_rocket_altitude.cpp:14</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03_xhtml_abcfcce0355ec4bd08cd65d707a1cda77"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#abcfcce0355ec4bd08cd65d707a1cda77">fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::acceleration</a></div><div class="ttdeci">double acceleration</div><div class="ttdef"><b>Definition</b> <a href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00013">kf_2x1x1_rocket_altitude.cpp:13</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03_xhtml_ad6c580637369071d6b596823aa1a6f35"><div class="ttname"><a href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml#ad6c580637369071d6b596823aa1a6f35">fcarouge::sample::anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}::state</a></div><div class="ttdeci">fcarouge::state&lt; vector&lt; 2 &gt; &gt; state</div><div class="ttdef"><b>Definition</b> <a href="kf__2x1x1__rocket__altitude_8cpp_source.xhtml#l00015">kf_2x1x1_rocket_altitude.cpp:15</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a6f496dc857f8b172efc57e3ba9bfdbf8"><div class="ttname"><a href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00076">linalg.hpp:76</a></div></div>
</div><!-- fragment -->
</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacefcarouge.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample.xhtml">sample</a></li><li class="navelem"><a class="el" href="namespacefcarouge_1_1sample_1_1anonymous__namespace_02kf__2x1x1__rocket__altitude_8cpp_03.xhtml">anonymous_namespace{kf_2x1x1_rocket_altitude.cpp}</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
