<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman
   &#160;<span id="projectnumber">0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">kalman.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">Version 0.1.0</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">means.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">software under copyright law.</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output = State, <span class="keyword">typename</span> Input = State,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose = internal::transpose,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize = internal::symmetrize,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide = internal::divide,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity = internal::identity,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">   77</a></span>&#160;<span class="keyword">class </span><a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9366f2fbd617686ad435a7f112526485">   84</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml">implementation</a> =</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml">internal::kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                       Identity, PredictionArguments...&gt;;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">   95</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">implementation::state</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">  100</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">implementation::output</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">  103</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">implementation::input</a>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">  108</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#aeeab0bf87147ab5eb761b65329fa7306">implementation::estimate_uncertainty</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">  111</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0696ec2114175e75b0329823b1c62c99">implementation::process_uncertainty</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">  114</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">output_uncertainty</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0a25ddfd9d10e98bfcf2b1107626a74e">implementation::output_uncertainty</a>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">  119</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">state_transition</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad9dad30b5500893230d878bf632d2f4a">implementation::state_transition</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">  124</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">output_model</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a40d8e17f21248972b00420a38c17d15d">implementation::output_model</a>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">  129</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">input_control</a> = <span class="keyword">typename</span> <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9cf655d639b927c411afa2539025293e">implementation::input_control</a>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0867c09230f177320f6e72662c26c312">  139</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a0867c09230f177320f6e72662c26c312">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a90a28af20f228e08007fada65b067f72">  150</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a90a28af20f228e08007fada65b067f72">kalman</a>(<span class="keyword">const</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6e6bdf6b6dcd2e30e8ec68e24f02c887">  162</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a6e6bdf6b6dcd2e30e8ec68e24f02c887">kalman</a>(<a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) noexcept = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae963a46d5d12a91e6805a4fe127e42ea">  176</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;<a class="code" href="classfcarouge_1_1kalman.xhtml#ae963a46d5d12a91e6805a4fe127e42ea">operator=</a>(<span class="keyword">const</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abaa05e99744fabcc9c1c18ea66d66eaa">  192</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;<a class="code" href="classfcarouge_1_1kalman.xhtml#abaa05e99744fabcc9c1c18ea66d66eaa">operator=</a>(<a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) noexcept = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afd3a868a3eada637707c1da922e6169a">  197</a></span>&#160;  constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#afd3a868a3eada637707c1da922e6169a">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">x</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7f968760d0df4189d498d08c37d3b421">  221</a></span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">output</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a7f968760d0df4189d498d08c37d3b421">z</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a02e530252a39ccc9fa8067b574dd6da3">  228</a></span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">input</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a02e530252a39ccc9fa8067b574dd6da3">u</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">p</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">p</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) requires std::constructible_from &lt;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      std::function&lt;<a class="code" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a>(<span class="keyword">const</span> PredictionArguments &amp;...)&gt;,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  decltype(value) &gt;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a544930b1a04f11123f9cb61b79556e">noise_process_q</a> = value;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">output_uncertainty</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">  276</a></span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) requires std::constructible_from &lt;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      std::function&lt;<a class="code" href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">output_uncertainty</a>()&gt;,</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  decltype(value) &gt;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a67cfd73334ae1202616e8e24c9b5c6d9">noise_observation_r</a> = value;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">state_transition</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">f</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">  298</a></span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) requires std::constructible_from &lt;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;      std::function&lt;<a class="code" href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">state_transition</a>(<span class="keyword">const</span> PredictionArguments &amp;...)&gt;,</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  decltype(value) &gt;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5de3662dc7198c5cec86f743c6015aa7">transition_state_f</a> = value;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">output_model</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">h</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">  320</a></span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) requires std::constructible_from &lt;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;      std::function&lt;<a class="code" href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">output_model</a>(<span class="keyword">const</span> PredictionArguments &amp;...)&gt;,</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  decltype(value) &gt;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#abef60d4ed5157623ad7fe001d9d67cc6">transition_observation_h</a> = value;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  [[nodiscard]] <span class="keyword">inline</span> constexpr <a class="code" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">input_control</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">g</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">  342</a></span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) requires std::constructible_from &lt;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;      std::function&lt;<a class="code" href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">input_control</a>(<span class="keyword">const</span> PredictionArguments &amp;...)&gt;,</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  decltype(value) &gt;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  {</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>.<a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">transition_control_g</a> = value;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...output_z);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keyword">inline</span> constexpr <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#ab982b714d1b27d0357f92d0dd6476e36">predict</a>(<span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                                <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...input_u);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">  386</a></span>&#160;  <a class="code" href="structfcarouge_1_1internal_1_1kalman.xhtml">implementation</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">filter</a>;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;};</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keyword">typename</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    Identity, PredictionArguments...&gt;::state</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">  401</a></span>&#160;           PredictionArguments...&gt;::x()<span class="keyword"> const</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  <span class="keywordflow">return</span> filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">x</a>;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;}</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160; </div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aaf08bbef3125b4aa01b28faef28f13cd">  414</a></span>&#160;       PredictionArguments...&gt;::x(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;{</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">x</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">state</a>{ value, values... };</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;}</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160; </div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keyword">typename</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                    Identity, PredictionArguments...&gt;::estimate_uncertainty</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">  429</a></span>&#160;           PredictionArguments...&gt;::p()<span class="keyword"> const</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="keywordflow">return</span> filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">p</a>;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;}</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160; </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3459d511191e15195d30840a45e61b91">  442</a></span>&#160;       PredictionArguments...&gt;::p(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;{</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">p</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">estimate_uncertainty</a>{ value, values... };</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;}</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keyword">typename</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                    Identity, PredictionArguments...&gt;::process_uncertainty</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">  457</a></span>&#160;           PredictionArguments...&gt;::q()<span class="keyword"> const</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  <span class="keywordflow">return</span> filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a>;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;}</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1fb048ddaf25e01759269e60e0ffbbc2">  470</a></span>&#160;       PredictionArguments...&gt;::q(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;{</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">q</a> = <a class="code" href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">process_uncertainty</a>{ value, values... };</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keyword">typename</span> <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    Identity, PredictionArguments...&gt;::output_uncertainty</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;           PredictionArguments...&gt;::r()<span class="keyword"> const</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  <span class="keywordflow">return</span> filter.<a class="code" href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">r</a>;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;}</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160; </div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;       PredictionArguments...&gt;::r(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;{</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  filter.r = output_uncertainty{ value, values... };</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;}</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160; </div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keyword">typename</span> <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                    Identity, PredictionArguments...&gt;::state_transition</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;           PredictionArguments...&gt;::f()<span class="keyword"> const</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  <span class="keywordflow">return</span> filter.f;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;}</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; </div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;       PredictionArguments...&gt;::f(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;{</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  filter.f = state_transition{ value, values... };</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;}</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160; </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">typename</span> <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    Identity, PredictionArguments...&gt;::output_model</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;           PredictionArguments...&gt;::h()<span class="keyword"> const</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="keywordflow">return</span> filter.h;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;}</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160; </div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;       PredictionArguments...&gt;::h(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;{</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  filter.h = output_model{ value, values... };</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;}</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160; </div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;[[nodiscard]] <span class="keyword">inline</span> constexpr</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keyword">typename</span> <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                    Identity, PredictionArguments...&gt;::input_control</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;           PredictionArguments...&gt;::g()<span class="keyword"> const</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  <span class="keywordflow">return</span> filter.g;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;}</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160; </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;       PredictionArguments...&gt;::g(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;{</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;  filter.g = input_control{ value, values... };</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  <span class="comment">// +reset function</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;}</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160; </div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;       PredictionArguments...&gt;<a class="code" href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">::update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...output_z)</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;{</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;  filter.update(output_z...);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;}</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160; </div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity,</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;          <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="keyword">inline</span> constexpr <span class="keywordtype">void</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;<a class="code" href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a name="l00613"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab982b714d1b27d0357f92d0dd6476e36">  613</a></span>&#160;       PredictionArguments...&gt;<a class="code" href="namespacefcarouge_1_1internal.xhtml#ade5d6ef827f085423ad5b6844b9736b9">::predict</a>(<span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                                        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...input_u)</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;{</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;  filter.predict(arguments..., input_u...);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;}</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160; </div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160; </div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00077">kalman.hpp:78</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a02e530252a39ccc9fa8067b574dd6da3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a02e530252a39ccc9fa8067b574dd6da3">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr input u() const</div><div class="ttdoc">Returns the control vector U.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0844f4cf2a686c3de8b294ea014aeded"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0844f4cf2a686c3de8b294ea014aeded">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr state x() const</div><div class="ttdoc">Returns the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00401">kalman.hpp:401</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0867c09230f177320f6e72662c26c312"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0867c09230f177320f6e72662c26c312">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2004ab338554e8bac196ba1790d645ef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2004ab338554e8bac196ba1790d645ef">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation, measurement noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00114">kalman.hpp:114</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a28e02a92c241e3ec7c312c68bb0cd9ab"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a28e02a92c241e3ec7c312c68bb0cd9ab">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void constexpr r(const auto &amp;value) requires std void f(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00298">kalman.hpp:298</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3a8c6ed3bfcdeb48f1ed926e397e8070"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3a8c6ed3bfcdeb48f1ed926e397e8070">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void constexpr q(const auto &amp;value) requires std void r(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00276">kalman.hpp:276</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4673a5e2e4615374f56a1882a2d3238e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4673a5e2e4615374f56a1882a2d3238e">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00108">kalman.hpp:108</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a55c460ecef7aff22c337032154776d53"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a55c460ecef7aff22c337032154776d53">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00129">kalman.hpp:129</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a560e82d7dd78f4a533805465d23be560"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a560e82d7dd78f4a533805465d23be560">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00095">kalman.hpp:95</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a562e32889c094eed307d74068aaf5cb4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a562e32889c094eed307d74068aaf5cb4">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void constexpr h(const auto &amp;value) requires std void g(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00342">kalman.hpp:342</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a599d23847b220984e2cfac8c21d053b8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a599d23847b220984e2cfac8c21d053b8">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00103">kalman.hpp:103</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a68a85f23dece8df5494f284ae152205b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a68a85f23dece8df5494f284ae152205b">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00111">kalman.hpp:111</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6e6bdf6b6dcd2e30e8ec68e24f02c887"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6e6bdf6b6dcd2e30e8ec68e24f02c887">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7f968760d0df4189d498d08c37d3b421"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7f968760d0df4189d498d08c37d3b421">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr output z() const</div><div class="ttdoc">Returns the observation vector Z.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a84462b9a06f423bc4ad5f68b4b9eeeaf"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a84462b9a06f423bc4ad5f68b4b9eeeaf">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr estimate_uncertainty p() const</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00429">kalman.hpp:429</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a90a28af20f228e08007fada65b067f72"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a90a28af20f228e08007fada65b067f72">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a94f4d4a61922d1a55facf3a93abd1224"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a94f4d4a61922d1a55facf3a93abd1224">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00100">kalman.hpp:100</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aaf8eec2b4dd3ba52b53c89e52fe687cd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aaf8eec2b4dd3ba52b53c89e52fe687cd">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr process_uncertainty q() const</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00457">kalman.hpp:457</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab982b714d1b27d0357f92d0dd6476e36"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab982b714d1b27d0357f92d0dd6476e36">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00613">kalman.hpp:613</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abaa05e99744fabcc9c1c18ea66d66eaa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abaa05e99744fabcc9c1c18ea66d66eaa">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr kalman &amp; operator=(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_accf9dac2b6b51745a2f9419448518992"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#accf9dac2b6b51745a2f9419448518992">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void constexpr f(const auto &amp;value) requires std void h(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00320">kalman.hpp:320</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad0d98ef4447df3321f0791bd055ae871"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad0d98ef4447df3321f0791bd055ae871">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00124">kalman.hpp:124</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae963a46d5d12a91e6805a4fe127e42ea"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae963a46d5d12a91e6805a4fe127e42ea">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr kalman &amp; operator=(const kalman &amp;other)=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af71657097b5c1ad4fbeba22e45af8b6a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af71657097b5c1ad4fbeba22e45af8b6a">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00386">kalman.hpp:386</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afa3d55a6a7017bbf6f64318ed3be4e63"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afa3d55a6a7017bbf6f64318ed3be4e63">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00119">kalman.hpp:119</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afd3a868a3eada637707c1da922e6169a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afd3a868a3eada637707c1da922e6169a">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The main Kalman filter class.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a1ec90a3f99f5fe01fe104be87319cf72"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a1ec90a3f99f5fe01fe104be87319cf72">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; Eigen::Vector&lt; Type, State &gt;, Eigen::Vector&lt; Type, Output &gt;, Eigen::Vector&lt; Type, Input &gt;, internal::transpose, internal::symmetrize, internal::divide, internal::identity, PredictionArguments... &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00067">kalman_eigen.hpp:71</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ade5d6ef827f085423ad5b6844b9736b9"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ade5d6ef827f085423ad5b6844b9736b9">fcarouge::internal::predict</a></div><div class="ttdeci">constexpr void predict(auto &amp;x, auto &amp;p, const auto &amp;ff, const auto &amp;f, const auto &amp;q, const auto &amp;g, const auto &amp;u)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00073">kalman_equation.hpp:73</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_af0a346261d79d359d8f7f7f662741872"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#af0a346261d79d359d8f7f7f662741872">fcarouge::internal::update</a></div><div class="ttdeci">constexpr void update(auto &amp;x, auto &amp;p, const auto &amp;h, const auto &amp;r, const auto &amp;z)</div><div class="ttdef"><b>Definition:</b> <a href="kalman__equation_8hpp_source.xhtml#l00137">kalman_equation.hpp:137</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="benchmark_8cpp_source.xhtml#l00043">benchmark.cpp:44</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a></div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00059">kalman.hpp:59</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a0696ec2114175e75b0329823b1c62c99"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a0696ec2114175e75b0329823b1c62c99">fcarouge::internal::kalman::process_uncertainty</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; process_uncertainty</div><div class="ttdoc">Type of the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00081">kalman.hpp:82</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a0a25ddfd9d10e98bfcf2b1107626a74e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a0a25ddfd9d10e98bfcf2b1107626a74e">fcarouge::internal::kalman::output_uncertainty</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; Output, Output &gt;, Output, Output &gt; output_uncertainty</div><div class="ttdoc">Type of the observation, measurement noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00085">kalman.hpp:86</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a15f8ae2111c2b7141eaf77bfc976eddc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">fcarouge::internal::kalman::state</a></div><div class="ttdeci">State state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00064">kalman.hpp:64</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a40d8e17f21248972b00420a38c17d15d"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a40d8e17f21248972b00420a38c17d15d">fcarouge::internal::kalman::output_model</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; Output, State &gt;, Output, State &gt; output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00097">kalman.hpp:98</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a5de3662dc7198c5cec86f743c6015aa7"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a5de3662dc7198c5cec86f743c6015aa7">fcarouge::internal::kalman::transition_state_f</a></div><div class="ttdeci">std::function&lt; state_transition(const PredictionArguments &amp;...)&gt; transition_state_f</div><div class="ttdoc">Compute state transition F matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00154">kalman.hpp:154</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a67cfd73334ae1202616e8e24c9b5c6d9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a67cfd73334ae1202616e8e24c9b5c6d9">fcarouge::internal::kalman::noise_observation_r</a></div><div class="ttdeci">std::function&lt; output_uncertainty()&gt; noise_observation_r</div><div class="ttdoc">Compute observation noise R matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00142">kalman.hpp:142</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a8755deb8bc331fb6cd8b05f8ede7a089"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">fcarouge::internal::kalman::output</a></div><div class="ttdeci">Output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00069">kalman.hpp:69</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9a544930b1a04f11123f9cb61b79556e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a544930b1a04f11123f9cb61b79556e">fcarouge::internal::kalman::noise_process_q</a></div><div class="ttdeci">std::function&lt; process_uncertainty(const PredictionArguments &amp;...)&gt; noise_process_q</div><div class="ttdoc">Compute process noise Q matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00161">kalman.hpp:161</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9a66a8ec4bc3b44f1baf393b6942e381"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">fcarouge::internal::kalman::transition_control_g</a></div><div class="ttdeci">std::function&lt; input_control(const PredictionArguments &amp;...)&gt; transition_control_g</div><div class="ttdoc">Compute control transition G matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00168">kalman.hpp:168</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9cf655d639b927c411afa2539025293e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9cf655d639b927c411afa2539025293e">fcarouge::internal::kalman::input_control</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, Input &gt;, State, Input &gt; input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00103">kalman.hpp:104</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab2d5d99193ce38bbd98569819f0f0ffc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">fcarouge::internal::kalman::input</a></div><div class="ttdeci">Input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00072">kalman.hpp:72</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_abef60d4ed5157623ad7fe001d9d67cc6"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#abef60d4ed5157623ad7fe001d9d67cc6">fcarouge::internal::kalman::transition_observation_h</a></div><div class="ttdeci">std::function&lt; output_model()&gt; transition_observation_h</div><div class="ttdoc">Compute observation transition H matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00137">kalman.hpp:137</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ad9dad30b5500893230d878bf632d2f4a"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad9dad30b5500893230d878bf632d2f4a">fcarouge::internal::kalman::state_transition</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00091">kalman.hpp:92</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_aeeab0bf87147ab5eb761b65329fa7306"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#aeeab0bf87147ab5eb761b65329fa7306">fcarouge::internal::kalman::estimate_uncertainty</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; estimate_uncertainty</div><div class="ttdoc">Type of the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00077">kalman.hpp:78</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Thu May 5 2022 02:18:16 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
