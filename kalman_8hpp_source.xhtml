<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="format_8hpp.xhtml">internal/format.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;internal/utility.hpp&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml">   63</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1identity__matrix.xhtml">identity_matrix</a> final {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">   70</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">operator()</a>() const noexcept {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">return</span> Type{1};</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>};</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">   76</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">internal::empty_pack</a>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">   79</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">internal::pack</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    <span class="keyword">typename</span> State = double, <span class="keyword">typename</span> Output = double, <span class="keyword">typename</span> Input = void,</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    <span class="keyword">typename</span> Transpose = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    <span class="keyword">typename</span> Identity = <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a>, <span class="keyword">typename</span> UpdateTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>,</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    <span class="keyword">typename</span> PredictionTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>&gt;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  197</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> final {</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad14f42e8edcb6524b5c5cfc77d3e2992">  206</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ad14f42e8edcb6524b5c5cfc77d3e2992">implementation</a> =</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#acaa4803bfeb8c1cef9285fd03d3c3df4">internal::kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity,</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;UpdateTypes&gt;</a>,</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;PredictionTypes&gt;</a>&gt;;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">  217</a></span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ad14f42e8edcb6524b5c5cfc77d3e2992">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">  226</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> = <span class="keyword">typename</span> implementation::state;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aec2214f218a08e262928716c78b94783">  231</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aec2214f218a08e262928716c78b94783">output</a> = <span class="keyword">typename</span> implementation::output;</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a76a667183bae59e0f89a709bd56fbff2">  236</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a76a667183bae59e0f89a709bd56fbff2">input</a> = <span class="keyword">typename</span> implementation::input;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">  241</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> = <span class="keyword">typename</span> implementation::estimate_uncertainty;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">  244</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> = <span class="keyword">typename</span> implementation::process_uncertainty;</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">  247</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> = <span class="keyword">typename</span> implementation::output_uncertainty;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">  252</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> = <span class="keyword">typename</span> implementation::state_transition;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">  257</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> = <span class="keyword">typename</span> implementation::output_model;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">  264</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> = <span class="keyword">typename</span> implementation::input_control;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0ce1adf743fa652a1b9ea977590b742d">  267</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0ce1adf743fa652a1b9ea977590b742d">gain</a> = <span class="keyword">typename</span> implementation::gain;</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a766799c6db7b11aa876b46ad13e65478">  270</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a766799c6db7b11aa876b46ad13e65478">innovation</a> = <span class="keyword">typename</span> implementation::innovation;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a80a2281962abb19ef814d7d878e99066">  273</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a80a2281962abb19ef814d7d878e99066">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>      <span class="keyword">typename</span> implementation::innovation_uncertainty;</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">  280</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">observation_state_function</a> =</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>      <span class="keyword">typename</span> implementation::observation_state_function;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">  287</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">noise_observation_function</a> =</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>      <span class="keyword">typename</span> implementation::noise_observation_function;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">  294</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">transition_state_function</a> =</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>      <span class="keyword">typename</span> implementation::transition_state_function;</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">  301</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">noise_process_function</a> =</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>      <span class="keyword">typename</span> implementation::noise_process_function;</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">  310</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">transition_control_function</a> =</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>      <span class="keyword">typename</span> implementation::transition_control_function;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">  317</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">transition_function</a> = <span class="keyword">typename</span> implementation::transition_function;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">  323</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">observation_function</a> = <span class="keyword">typename</span> implementation::observation_function;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3ae1bec43348158e4841067e1a777e63">  333</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3ae1bec43348158e4841067e1a777e63">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae60986af53245e206bfc34d0eec45943">  344</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae60986af53245e206bfc34d0eec45943">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afc43f47f92490cf3b07b4155ed88ceac">  356</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afc43f47f92490cf3b07b4155ed88ceac">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af5f168c7325c88b1892177b18bb4ab22">  370</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af5f168c7325c88b1892177b18bb4ab22">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a061dda78577687f57a708d0c40b4d38b">  386</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a061dda78577687f57a708d0c40b4d38b">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span> </div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0fdd9b7a5d245132ad45813806dc52e1">  392</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0fdd9b7a5d245132ad45813806dc52e1">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span> </div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;;</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;value);</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span> </div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;&amp;value);</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span> </div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3adc41b0ea4180ad8a3bac3b18cecb1b">z</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aec2214f218a08e262928716c78b94783">output</a> &amp;;</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af8076110c73731fe8663cb52bee112be">u</a>() const</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>      -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a76a667183bae59e0f89a709bd56fbff2">input</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span> </div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">p</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">p</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span> </div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">p</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span> </div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span> </div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span> </div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span> </div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span> </div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">noise_process_function</a> &amp;callable);</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span> </div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">noise_process_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span> </div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span> </div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span> </div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span> </div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno">  563</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">noise_observation_function</a> &amp;callable);</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span> </div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">noise_observation_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span> </div>
<div class="line"><a id="l00581" name="l00581"></a><span class="lineno">  581</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;;</div>
<div class="line"><a id="l00582" name="l00582"></a><span class="lineno">  582</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;;</div>
<div class="line"><a id="l00583" name="l00583"></a><span class="lineno">  583</span> </div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;value);</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span> </div>
<div class="line"><a id="l00596" name="l00596"></a><span class="lineno">  596</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;&amp;value);</div>
<div class="line"><a id="l00597" name="l00597"></a><span class="lineno">  597</span> </div>
<div class="line"><a id="l00612" name="l00612"></a><span class="lineno">  612</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">transition_state_function</a> &amp;callable);</div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span> </div>
<div class="line"><a id="l00628" name="l00628"></a><span class="lineno">  628</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">transition_state_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00629" name="l00629"></a><span class="lineno">  629</span> </div>
<div class="line"><a id="l00635" name="l00635"></a><span class="lineno">  635</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;;</div>
<div class="line"><a id="l00636" name="l00636"></a><span class="lineno">  636</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;;</div>
<div class="line"><a id="l00637" name="l00637"></a><span class="lineno">  637</span> </div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;value);</div>
<div class="line"><a id="l00644" name="l00644"></a><span class="lineno">  644</span> </div>
<div class="line"><a id="l00650" name="l00650"></a><span class="lineno">  650</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;&amp;value);</div>
<div class="line"><a id="l00651" name="l00651"></a><span class="lineno">  651</span> </div>
<div class="line"><a id="l00666" name="l00666"></a><span class="lineno">  666</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">observation_state_function</a> &amp;callable);</div>
<div class="line"><a id="l00667" name="l00667"></a><span class="lineno">  667</span> </div>
<div class="line"><a id="l00682" name="l00682"></a><span class="lineno">  682</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">observation_state_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00683" name="l00683"></a><span class="lineno">  683</span> </div>
<div class="line"><a id="l00691" name="l00691"></a><span class="lineno">  691</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>() const</div>
<div class="line"><a id="l00692" name="l00692"></a><span class="lineno">  692</span>      -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00693" name="l00693"></a><span class="lineno">  693</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>()</div>
<div class="line"><a id="l00694" name="l00694"></a><span class="lineno">  694</span>      -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00695" name="l00695"></a><span class="lineno">  695</span> </div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno">  703</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;value)</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span>    requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00705" name="l00705"></a><span class="lineno">  705</span> </div>
<div class="line"><a id="l00713" name="l00713"></a><span class="lineno">  713</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l00714" name="l00714"></a><span class="lineno">  714</span>    requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00715" name="l00715"></a><span class="lineno">  715</span> </div>
<div class="line"><a id="l00725" name="l00725"></a><span class="lineno">  725</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">transition_control_function</a> &amp;callable);</div>
<div class="line"><a id="l00726" name="l00726"></a><span class="lineno">  726</span> </div>
<div class="line"><a id="l00736" name="l00736"></a><span class="lineno">  736</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">transition_control_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00737" name="l00737"></a><span class="lineno">  737</span> </div>
<div class="line"><a id="l00743" name="l00743"></a><span class="lineno">  743</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae79562d5fd95bf5da81a4add72d8d3b8">k</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0ce1adf743fa652a1b9ea977590b742d">gain</a> &amp;;</div>
<div class="line"><a id="l00744" name="l00744"></a><span class="lineno">  744</span> </div>
<div class="line"><a id="l00750" name="l00750"></a><span class="lineno">  750</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac57cbd09a4d198f909cd76294fcfa3a4">y</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a766799c6db7b11aa876b46ad13e65478">innovation</a> &amp;;</div>
<div class="line"><a id="l00751" name="l00751"></a><span class="lineno">  751</span> </div>
<div class="line"><a id="l00757" name="l00757"></a><span class="lineno">  757</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3804b4483db80498d457dffc1f796277">s</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a80a2281962abb19ef814d7d878e99066">innovation_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00758" name="l00758"></a><span class="lineno">  758</span> </div>
<div class="line"><a id="l00770" name="l00770"></a><span class="lineno">  770</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb">transition</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">transition_function</a> &amp;callable);</div>
<div class="line"><a id="l00771" name="l00771"></a><span class="lineno">  771</span> </div>
<div class="line"><a id="l00783" name="l00783"></a><span class="lineno">  783</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb">transition</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">transition_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00784" name="l00784"></a><span class="lineno">  784</span> </div>
<div class="line"><a id="l00796" name="l00796"></a><span class="lineno">  796</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd">observation</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">observation_function</a> &amp;callable);</div>
<div class="line"><a id="l00797" name="l00797"></a><span class="lineno">  797</span> </div>
<div class="line"><a id="l00809" name="l00809"></a><span class="lineno">  809</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd">observation</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">observation_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno">  810</span> </div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span> </div>
<div class="line"><a id="l00815" name="l00815"></a><span class="lineno">  815</span> </div>
<div class="line"><a id="l00832" name="l00832"></a><span class="lineno">  832</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f">predict</a>(const auto &amp;...arguments);</div>
<div class="line"><a id="l00833" name="l00833"></a><span class="lineno">  833</span> </div>
<div class="line"><a id="l00845" name="l00845"></a><span class="lineno">  845</span>  template &lt;std::<span class="keywordtype">size_t</span> Position&gt; inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f">predict</a>() const;</div>
<div class="line"><a id="l00846" name="l00846"></a><span class="lineno">  846</span> </div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f">update</a>(const auto &amp;...arguments);</div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno">  865</span> </div>
<div class="line"><a id="l00877" name="l00877"></a><span class="lineno">  877</span>  template &lt;std::<span class="keywordtype">size_t</span> Position&gt; inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f">update</a>() const;</div>
<div class="line"><a id="l00878" name="l00878"></a><span class="lineno">  878</span> </div>
<div class="line"><a id="l00880" name="l00880"></a><span class="lineno">  880</span>};</div>
<div class="line"><a id="l00881" name="l00881"></a><span class="lineno">  881</span> </div>
<div class="line"><a id="l00882" name="l00882"></a><span class="lineno">  882</span>template &lt;typename State, typename Output, typename Input, typename Transpose,</div>
<div class="line"><a id="l00883" name="l00883"></a><span class="lineno">  883</span>          typename Divide, typename Identity, typename UpdateTypes,</div>
<div class="line"><a id="l00884" name="l00884"></a><span class="lineno">  884</span>          typename PredictionTypes&gt;</div>
<div class="line"><a id="l00885" name="l00885"></a><span class="lineno">  885</span>[[nodiscard(&quot;The returned <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> estimate column <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a7af38f38950d3b3f6c0fdd598c68f2d4">vector</a> X is unexpectedly &quot;</div>
<div class="line"><a id="l00886" name="l00886"></a><span class="lineno">  886</span>            &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno">  887</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00888" name="l00888"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">  888</a></span>       PredictionTypes&gt;::<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">x</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp; {</div>
<div class="line"><a id="l00889" name="l00889"></a><span class="lineno">  889</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x;</div>
<div class="line"><a id="l00890" name="l00890"></a><span class="lineno">  890</span>}</div>
<div class="line"><a id="l00891" name="l00891"></a><span class="lineno">  891</span> </div>
<div class="line"><a id="l00892" name="l00892"></a><span class="lineno">  892</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00893" name="l00893"></a><span class="lineno">  893</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00894" name="l00894"></a><span class="lineno">  894</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00895" name="l00895"></a><span class="lineno">  895</span>[[nodiscard(<span class="stringliteral">&quot;The returned state estimate column vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno">  896</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno">  897</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2894e274340794931ff14920dbec9717">  898</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">::x</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp; {</div>
<div class="line"><a id="l00899" name="l00899"></a><span class="lineno">  899</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x;</div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span>}</div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span> </div>
<div class="line"><a id="l00902" name="l00902"></a><span class="lineno">  902</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00903" name="l00903"></a><span class="lineno">  903</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00904" name="l00904"></a><span class="lineno">  904</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00905" name="l00905"></a><span class="lineno">  905</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00906" name="l00906"></a><span class="lineno">  906</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab3c539e8dc2f1759e845457352a7220d">  907</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">::x</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;value) {</div>
<div class="line"><a id="l00908" name="l00908"></a><span class="lineno">  908</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x = value;</div>
<div class="line"><a id="l00909" name="l00909"></a><span class="lineno">  909</span>}</div>
<div class="line"><a id="l00910" name="l00910"></a><span class="lineno">  910</span> </div>
<div class="line"><a id="l00911" name="l00911"></a><span class="lineno">  911</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00912" name="l00912"></a><span class="lineno">  912</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00913" name="l00913"></a><span class="lineno">  913</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00914" name="l00914"></a><span class="lineno">  914</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity,</div>
<div class="line"><a id="l00915" name="l00915"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0c4935bfda62d558c38541d57ad9163b">  915</a></span>                             UpdateTypes, PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">::x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a> &amp;&amp;value) {</div>
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno">  916</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x = std::move(value);</div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>}</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span> </div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00922" name="l00922"></a><span class="lineno">  922</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00923" name="l00923"></a><span class="lineno">  923</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00924" name="l00924"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a889e890f748f08a0dce5d804a8a02b14">  924</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">::x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) {</div>
<div class="line"><a id="l00925" name="l00925"></a><span class="lineno">  925</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a>{value, values...});</div>
<div class="line"><a id="l00926" name="l00926"></a><span class="lineno">  926</span>}</div>
<div class="line"><a id="l00927" name="l00927"></a><span class="lineno">  927</span> </div>
<div class="line"><a id="l00928" name="l00928"></a><span class="lineno">  928</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00929" name="l00929"></a><span class="lineno">  929</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00930" name="l00930"></a><span class="lineno">  930</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno">  931</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a019f902b2aa031064a00defd2b4a167e">  933</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">::x</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) {</div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">state</a>{std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno">  935</span>                             std::forward&lt;decltype(values)&gt;(values)...});</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>}</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span> </div>
<div class="line"><a id="l00938" name="l00938"></a><span class="lineno">  938</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00939" name="l00939"></a><span class="lineno">  939</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00940" name="l00940"></a><span class="lineno">  940</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00941" name="l00941"></a><span class="lineno">  941</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation column vector Z is unexpectedly &quot;</span></div>
<div class="line"><a id="l00942" name="l00942"></a><span class="lineno">  942</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00943" name="l00943"></a><span class="lineno">  943</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00944" name="l00944"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3adc41b0ea4180ad8a3bac3b18cecb1b">  944</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3adc41b0ea4180ad8a3bac3b18cecb1b">::z</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aec2214f218a08e262928716c78b94783">output</a> &amp; {</div>
<div class="line"><a id="l00945" name="l00945"></a><span class="lineno">  945</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.z;</div>
<div class="line"><a id="l00946" name="l00946"></a><span class="lineno">  946</span>}</div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno">  947</span> </div>
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno">  948</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span>[[nodiscard(<span class="stringliteral">&quot;The returned control column vector U is unexpectedly &quot;</span></div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno">  953</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af8076110c73731fe8663cb52bee112be">  954</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af8076110c73731fe8663cb52bee112be">::u</a>() const</div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span>    -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a76a667183bae59e0f89a709bd56fbff2">input</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;) {</div>
<div class="line"><a id="l00956" name="l00956"></a><span class="lineno">  956</span>                      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.u;</div>
<div class="line"><a id="l00957" name="l00957"></a><span class="lineno">  957</span>                    }</div>
<div class="line"><a id="l00958" name="l00958"></a><span class="lineno">  958</span> </div>
<div class="line"><a id="l00959" name="l00959"></a><span class="lineno">  959</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00960" name="l00960"></a><span class="lineno">  960</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00961" name="l00961"></a><span class="lineno">  961</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00962" name="l00962"></a><span class="lineno">  962</span>[[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input,</div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span>                                                         Transpose, Divide,</div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno">  965</span>                                                         Identity, UpdateTypes,</div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">  966</a></span>                                                         PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">::p</a>()</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno">  967</span>    const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.p;</div>
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno">  969</span>}</div>
<div class="line"><a id="l00970" name="l00970"></a><span class="lineno">  970</span> </div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno">  971</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno">  972</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00973" name="l00973"></a><span class="lineno">  973</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00974" name="l00974"></a><span class="lineno">  974</span>[[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno">  976</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3326812def63644b187c6187a744f8e1">  977</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">::p</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00978" name="l00978"></a><span class="lineno">  978</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.p;</div>
<div class="line"><a id="l00979" name="l00979"></a><span class="lineno">  979</span>}</div>
<div class="line"><a id="l00980" name="l00980"></a><span class="lineno">  980</span> </div>
<div class="line"><a id="l00981" name="l00981"></a><span class="lineno">  981</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00982" name="l00982"></a><span class="lineno">  982</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno">  985</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa7d5d98ce185b7697c00ff7f65dc067b">  986</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">::p</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno">  987</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.p = value;</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>}</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span> </div>
<div class="line"><a id="l00990" name="l00990"></a><span class="lineno">  990</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00991" name="l00991"></a><span class="lineno">  991</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l00992" name="l00992"></a><span class="lineno">  992</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00993" name="l00993"></a><span class="lineno">  993</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00994" name="l00994"></a><span class="lineno">  994</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l00995" name="l00995"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afb4b13f1b53a6f2d2adaebb89a52d966">  995</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">::p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">estimate_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l00996" name="l00996"></a><span class="lineno">  996</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.p = std::move(value);</div>
<div class="line"><a id="l00997" name="l00997"></a><span class="lineno">  997</span>}</div>
<div class="line"><a id="l00998" name="l00998"></a><span class="lineno">  998</span> </div>
<div class="line"><a id="l00999" name="l00999"></a><span class="lineno">  999</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01000" name="l01000"></a><span class="lineno"> 1000</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01001" name="l01001"></a><span class="lineno"> 1001</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01002" name="l01002"></a><span class="lineno"> 1002</span>[[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l01003" name="l01003"></a><span class="lineno"> 1003</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01004" name="l01004"></a><span class="lineno"> 1004</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01005" name="l01005"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4"> 1005</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01006" name="l01006"></a><span class="lineno"> 1006</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.q;</div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"> 1007</span>}</div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span> </div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"> 1009</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"> 1011</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01012" name="l01012"></a><span class="lineno"> 1012</span>[[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l01013" name="l01013"></a><span class="lineno"> 1013</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01014" name="l01014"></a><span class="lineno"> 1014</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01015" name="l01015"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adf59a793b6fb7b53e24bd9b55f08e7cf"> 1015</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01016" name="l01016"></a><span class="lineno"> 1016</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.q;</div>
<div class="line"><a id="l01017" name="l01017"></a><span class="lineno"> 1017</span>}</div>
<div class="line"><a id="l01018" name="l01018"></a><span class="lineno"> 1018</span> </div>
<div class="line"><a id="l01019" name="l01019"></a><span class="lineno"> 1019</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01020" name="l01020"></a><span class="lineno"> 1020</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"> 1021</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aacb10c1ce3ea80136458c2ecfb7ae88b"> 1024</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.q = value;</div>
<div class="line"><a id="l01026" name="l01026"></a><span class="lineno"> 1026</span>}</div>
<div class="line"><a id="l01027" name="l01027"></a><span class="lineno"> 1027</span> </div>
<div class="line"><a id="l01028" name="l01028"></a><span class="lineno"> 1028</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01029" name="l01029"></a><span class="lineno"> 1029</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01030" name="l01030"></a><span class="lineno"> 1030</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01031" name="l01031"></a><span class="lineno"> 1031</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01032" name="l01032"></a><span class="lineno"> 1032</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01033" name="l01033"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2bf6ca88192319ad355252dff514d378"> 1033</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">process_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01034" name="l01034"></a><span class="lineno"> 1034</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.q = std::move(value);</div>
<div class="line"><a id="l01035" name="l01035"></a><span class="lineno"> 1035</span>}</div>
<div class="line"><a id="l01036" name="l01036"></a><span class="lineno"> 1036</span> </div>
<div class="line"><a id="l01037" name="l01037"></a><span class="lineno"> 1037</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01038" name="l01038"></a><span class="lineno"> 1038</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"> 1039</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"> 1040</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5faacdf3175ffc403a8483e50105033e"> 1042</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">noise_process_function</a> &amp;callable) {</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.noise_process_q = callable;</div>
<div class="line"><a id="l01044" name="l01044"></a><span class="lineno"> 1044</span>}</div>
<div class="line"><a id="l01045" name="l01045"></a><span class="lineno"> 1045</span> </div>
<div class="line"><a id="l01046" name="l01046"></a><span class="lineno"> 1046</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01047" name="l01047"></a><span class="lineno"> 1047</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01048" name="l01048"></a><span class="lineno"> 1048</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01049" name="l01049"></a><span class="lineno"> 1049</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01050" name="l01050"></a><span class="lineno"> 1050</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01051" name="l01051"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae8e4643a14407983f49e22d37c141e05"> 1051</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">::q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">noise_process_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01052" name="l01052"></a><span class="lineno"> 1052</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.noise_process_q = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01053" name="l01053"></a><span class="lineno"> 1053</span>}</div>
<div class="line"><a id="l01054" name="l01054"></a><span class="lineno"> 1054</span> </div>
<div class="line"><a id="l01055" name="l01055"></a><span class="lineno"> 1055</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01056" name="l01056"></a><span class="lineno"> 1056</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"> 1057</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span>            <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d"> 1061</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01062" name="l01062"></a><span class="lineno"> 1062</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.r;</div>
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"> 1063</span>}</div>
<div class="line"><a id="l01064" name="l01064"></a><span class="lineno"> 1064</span> </div>
<div class="line"><a id="l01065" name="l01065"></a><span class="lineno"> 1065</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01066" name="l01066"></a><span class="lineno"> 1066</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01067" name="l01067"></a><span class="lineno"> 1067</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01068" name="l01068"></a><span class="lineno"> 1068</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l01069" name="l01069"></a><span class="lineno"> 1069</span>            <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01070" name="l01070"></a><span class="lineno"> 1070</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01071" name="l01071"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acd8f027a5bd7c8000f2881afe68c4d23"> 1071</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01072" name="l01072"></a><span class="lineno"> 1072</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.r;</div>
<div class="line"><a id="l01073" name="l01073"></a><span class="lineno"> 1073</span>}</div>
<div class="line"><a id="l01074" name="l01074"></a><span class="lineno"> 1074</span> </div>
<div class="line"><a id="l01075" name="l01075"></a><span class="lineno"> 1075</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01076" name="l01076"></a><span class="lineno"> 1076</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01077" name="l01077"></a><span class="lineno"> 1077</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01078" name="l01078"></a><span class="lineno"> 1078</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01079" name="l01079"></a><span class="lineno"> 1079</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01080" name="l01080"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adc1f1300caf72d5cc060b773a8403bd7"> 1080</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l01081" name="l01081"></a><span class="lineno"> 1081</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.r = value;</div>
<div class="line"><a id="l01082" name="l01082"></a><span class="lineno"> 1082</span>}</div>
<div class="line"><a id="l01083" name="l01083"></a><span class="lineno"> 1083</span> </div>
<div class="line"><a id="l01084" name="l01084"></a><span class="lineno"> 1084</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01085" name="l01085"></a><span class="lineno"> 1085</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01086" name="l01086"></a><span class="lineno"> 1086</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01087" name="l01087"></a><span class="lineno"> 1087</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01088" name="l01088"></a><span class="lineno"> 1088</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01089" name="l01089"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a757cf58960042b4b3558596d7dc8c06e"> 1089</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">output_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01090" name="l01090"></a><span class="lineno"> 1090</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.r = std::move(value);</div>
<div class="line"><a id="l01091" name="l01091"></a><span class="lineno"> 1091</span>}</div>
<div class="line"><a id="l01092" name="l01092"></a><span class="lineno"> 1092</span> </div>
<div class="line"><a id="l01093" name="l01093"></a><span class="lineno"> 1093</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01094" name="l01094"></a><span class="lineno"> 1094</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01095" name="l01095"></a><span class="lineno"> 1095</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01096" name="l01096"></a><span class="lineno"> 1096</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01097" name="l01097"></a><span class="lineno"> 1097</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01098" name="l01098"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afb9f7fd13a09dc2e2cad470af30edabc"> 1098</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">noise_observation_function</a> &amp;callable) {</div>
<div class="line"><a id="l01099" name="l01099"></a><span class="lineno"> 1099</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.noise_observation_r = callable;</div>
<div class="line"><a id="l01100" name="l01100"></a><span class="lineno"> 1100</span>}</div>
<div class="line"><a id="l01101" name="l01101"></a><span class="lineno"> 1101</span> </div>
<div class="line"><a id="l01102" name="l01102"></a><span class="lineno"> 1102</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01103" name="l01103"></a><span class="lineno"> 1103</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01104" name="l01104"></a><span class="lineno"> 1104</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01105" name="l01105"></a><span class="lineno"> 1105</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01106" name="l01106"></a><span class="lineno"> 1106</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01107" name="l01107"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a039046fc2b68124430319d5f1e7cd7ff"> 1107</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">::r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">noise_observation_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01108" name="l01108"></a><span class="lineno"> 1108</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.noise_observation_r = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01109" name="l01109"></a><span class="lineno"> 1109</span>}</div>
<div class="line"><a id="l01110" name="l01110"></a><span class="lineno"> 1110</span> </div>
<div class="line"><a id="l01111" name="l01111"></a><span class="lineno"> 1111</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01112" name="l01112"></a><span class="lineno"> 1112</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01113" name="l01113"></a><span class="lineno"> 1113</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01114" name="l01114"></a><span class="lineno"> 1114</span>[[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l01115" name="l01115"></a><span class="lineno"> 1115</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01116" name="l01116"></a><span class="lineno"> 1116</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01117" name="l01117"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c"> 1117</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp; {</div>
<div class="line"><a id="l01118" name="l01118"></a><span class="lineno"> 1118</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.f;</div>
<div class="line"><a id="l01119" name="l01119"></a><span class="lineno"> 1119</span>}</div>
<div class="line"><a id="l01120" name="l01120"></a><span class="lineno"> 1120</span> </div>
<div class="line"><a id="l01121" name="l01121"></a><span class="lineno"> 1121</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01122" name="l01122"></a><span class="lineno"> 1122</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01123" name="l01123"></a><span class="lineno"> 1123</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01124" name="l01124"></a><span class="lineno"> 1124</span>[[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l01125" name="l01125"></a><span class="lineno"> 1125</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01126" name="l01126"></a><span class="lineno"> 1126</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01127" name="l01127"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a73ab85b2154bf256cf6bbb1de5f350e0"> 1127</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp; {</div>
<div class="line"><a id="l01128" name="l01128"></a><span class="lineno"> 1128</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.f;</div>
<div class="line"><a id="l01129" name="l01129"></a><span class="lineno"> 1129</span>}</div>
<div class="line"><a id="l01130" name="l01130"></a><span class="lineno"> 1130</span> </div>
<div class="line"><a id="l01131" name="l01131"></a><span class="lineno"> 1131</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01132" name="l01132"></a><span class="lineno"> 1132</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01133" name="l01133"></a><span class="lineno"> 1133</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01134" name="l01134"></a><span class="lineno"> 1134</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01135" name="l01135"></a><span class="lineno"> 1135</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01136" name="l01136"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a248e5b4ab5e0d51992e02a68c4f7e81e"> 1136</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;value) {</div>
<div class="line"><a id="l01137" name="l01137"></a><span class="lineno"> 1137</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.f = value;</div>
<div class="line"><a id="l01138" name="l01138"></a><span class="lineno"> 1138</span>}</div>
<div class="line"><a id="l01139" name="l01139"></a><span class="lineno"> 1139</span> </div>
<div class="line"><a id="l01140" name="l01140"></a><span class="lineno"> 1140</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01141" name="l01141"></a><span class="lineno"> 1141</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01142" name="l01142"></a><span class="lineno"> 1142</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01143" name="l01143"></a><span class="lineno"> 1143</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01144" name="l01144"></a><span class="lineno"> 1144</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01145" name="l01145"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2b654a97653122a4f3095262e6c13470"> 1145</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">state_transition</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01146" name="l01146"></a><span class="lineno"> 1146</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.f = std::move(value);</div>
<div class="line"><a id="l01147" name="l01147"></a><span class="lineno"> 1147</span>}</div>
<div class="line"><a id="l01148" name="l01148"></a><span class="lineno"> 1148</span> </div>
<div class="line"><a id="l01149" name="l01149"></a><span class="lineno"> 1149</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01150" name="l01150"></a><span class="lineno"> 1150</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01151" name="l01151"></a><span class="lineno"> 1151</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01152" name="l01152"></a><span class="lineno"> 1152</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01153" name="l01153"></a><span class="lineno"> 1153</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01154" name="l01154"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a67cd61395472341751fa7bfd8d613414"> 1154</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">transition_state_function</a> &amp;callable) {</div>
<div class="line"><a id="l01155" name="l01155"></a><span class="lineno"> 1155</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition_state_f = callable;</div>
<div class="line"><a id="l01156" name="l01156"></a><span class="lineno"> 1156</span>}</div>
<div class="line"><a id="l01157" name="l01157"></a><span class="lineno"> 1157</span> </div>
<div class="line"><a id="l01158" name="l01158"></a><span class="lineno"> 1158</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01159" name="l01159"></a><span class="lineno"> 1159</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"> 1160</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"> 1161</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01162" name="l01162"></a><span class="lineno"> 1162</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aec9336317bd5adfd312d4e7181281dce"> 1163</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">::f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">transition_state_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01164" name="l01164"></a><span class="lineno"> 1164</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition_state_f = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01165" name="l01165"></a><span class="lineno"> 1165</span>}</div>
<div class="line"><a id="l01166" name="l01166"></a><span class="lineno"> 1166</span> </div>
<div class="line"><a id="l01167" name="l01167"></a><span class="lineno"> 1167</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01168" name="l01168"></a><span class="lineno"> 1168</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01169" name="l01169"></a><span class="lineno"> 1169</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01170" name="l01170"></a><span class="lineno"> 1170</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l01171" name="l01171"></a><span class="lineno"> 1171</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01172" name="l01172"></a><span class="lineno"> 1172</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01173" name="l01173"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276"> 1173</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp; {</div>
<div class="line"><a id="l01174" name="l01174"></a><span class="lineno"> 1174</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.h;</div>
<div class="line"><a id="l01175" name="l01175"></a><span class="lineno"> 1175</span>}</div>
<div class="line"><a id="l01176" name="l01176"></a><span class="lineno"> 1176</span> </div>
<div class="line"><a id="l01177" name="l01177"></a><span class="lineno"> 1177</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01178" name="l01178"></a><span class="lineno"> 1178</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01179" name="l01179"></a><span class="lineno"> 1179</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01180" name="l01180"></a><span class="lineno"> 1180</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l01181" name="l01181"></a><span class="lineno"> 1181</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01182" name="l01182"></a><span class="lineno"> 1182</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01183" name="l01183"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adcdbc390b0c45d0f48791fce0d2ad77c"> 1183</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp; {</div>
<div class="line"><a id="l01184" name="l01184"></a><span class="lineno"> 1184</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.h;</div>
<div class="line"><a id="l01185" name="l01185"></a><span class="lineno"> 1185</span>}</div>
<div class="line"><a id="l01186" name="l01186"></a><span class="lineno"> 1186</span> </div>
<div class="line"><a id="l01187" name="l01187"></a><span class="lineno"> 1187</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01188" name="l01188"></a><span class="lineno"> 1188</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01189" name="l01189"></a><span class="lineno"> 1189</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01190" name="l01190"></a><span class="lineno"> 1190</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01191" name="l01191"></a><span class="lineno"> 1191</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01192" name="l01192"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4b2dc1297c94b18259860226246436b3"> 1192</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;value) {</div>
<div class="line"><a id="l01193" name="l01193"></a><span class="lineno"> 1193</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.h = value;</div>
<div class="line"><a id="l01194" name="l01194"></a><span class="lineno"> 1194</span>}</div>
<div class="line"><a id="l01195" name="l01195"></a><span class="lineno"> 1195</span> </div>
<div class="line"><a id="l01196" name="l01196"></a><span class="lineno"> 1196</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01197" name="l01197"></a><span class="lineno"> 1197</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01198" name="l01198"></a><span class="lineno"> 1198</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01199" name="l01199"></a><span class="lineno"> 1199</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01200" name="l01200"></a><span class="lineno"> 1200</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01201" name="l01201"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae14769b94d8ce6e4b0157bf670eda611"> 1201</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">output_model</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01202" name="l01202"></a><span class="lineno"> 1202</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.h = std::move(value);</div>
<div class="line"><a id="l01203" name="l01203"></a><span class="lineno"> 1203</span>}</div>
<div class="line"><a id="l01204" name="l01204"></a><span class="lineno"> 1204</span> </div>
<div class="line"><a id="l01205" name="l01205"></a><span class="lineno"> 1205</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01206" name="l01206"></a><span class="lineno"> 1206</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01207" name="l01207"></a><span class="lineno"> 1207</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01208" name="l01208"></a><span class="lineno"> 1208</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01209" name="l01209"></a><span class="lineno"> 1209</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01210" name="l01210"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac486deda40d116939ca7d9b003975880"> 1210</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">observation_state_function</a> &amp;callable) {</div>
<div class="line"><a id="l01211" name="l01211"></a><span class="lineno"> 1211</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.observation_state_h = callable;</div>
<div class="line"><a id="l01212" name="l01212"></a><span class="lineno"> 1212</span>}</div>
<div class="line"><a id="l01213" name="l01213"></a><span class="lineno"> 1213</span> </div>
<div class="line"><a id="l01214" name="l01214"></a><span class="lineno"> 1214</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01215" name="l01215"></a><span class="lineno"> 1215</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01216" name="l01216"></a><span class="lineno"> 1216</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01217" name="l01217"></a><span class="lineno"> 1217</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01218" name="l01218"></a><span class="lineno"> 1218</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01219" name="l01219"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a83eb8d41aafe5dd6fe09a1818ace25ce"> 1219</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">::h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">observation_state_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01220" name="l01220"></a><span class="lineno"> 1220</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.observation_state_h = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01221" name="l01221"></a><span class="lineno"> 1221</span>}</div>
<div class="line"><a id="l01222" name="l01222"></a><span class="lineno"> 1222</span> </div>
<div class="line"><a id="l01223" name="l01223"></a><span class="lineno"> 1223</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01224" name="l01224"></a><span class="lineno"> 1224</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01225" name="l01225"></a><span class="lineno"> 1225</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01226" name="l01226"></a><span class="lineno"> 1226</span>[[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l01227" name="l01227"></a><span class="lineno"> 1227</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01228" name="l01228"></a><span class="lineno"> 1228</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01229" name="l01229"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548"> 1229</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>() const</div>
<div class="line"><a id="l01230" name="l01230"></a><span class="lineno"> 1230</span>    -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;) {</div>
<div class="line"><a id="l01231" name="l01231"></a><span class="lineno"> 1231</span>                              <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.g;</div>
<div class="line"><a id="l01232" name="l01232"></a><span class="lineno"> 1232</span>                            }</div>
<div class="line"><a id="l01233" name="l01233"></a><span class="lineno"> 1233</span> </div>
<div class="line"><a id="l01234" name="l01234"></a><span class="lineno"> 1234</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01235" name="l01235"></a><span class="lineno"> 1235</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01236" name="l01236"></a><span class="lineno"> 1236</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01237" name="l01237"></a><span class="lineno"> 1237</span>[[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l01238" name="l01238"></a><span class="lineno"> 1238</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input,</div>
<div class="line"><a id="l01239" name="l01239"></a><span class="lineno"> 1239</span>                                                         Transpose, Divide,</div>
<div class="line"><a id="l01240" name="l01240"></a><span class="lineno"> 1240</span>                                                         Identity, UpdateTypes,</div>
<div class="line"><a id="l01241" name="l01241"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a500d3c35bf582aef066e05fdf0ead24b"> 1241</a></span>                                                         PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>()</div>
<div class="line"><a id="l01242" name="l01242"></a><span class="lineno"> 1242</span>    -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;<span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;) {</div>
<div class="line"><a id="l01243" name="l01243"></a><span class="lineno"> 1243</span>                        <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.g;</div>
<div class="line"><a id="l01244" name="l01244"></a><span class="lineno"> 1244</span>                      }</div>
<div class="line"><a id="l01245" name="l01245"></a><span class="lineno"> 1245</span> </div>
<div class="line"><a id="l01246" name="l01246"></a><span class="lineno"> 1246</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01247" name="l01247"></a><span class="lineno"> 1247</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01248" name="l01248"></a><span class="lineno"> 1248</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01249" name="l01249"></a><span class="lineno"> 1249</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity,</div>
<div class="line"><a id="l01250" name="l01250"></a><span class="lineno"> 1250</span>                             UpdateTypes,</div>
<div class="line"><a id="l01251" name="l01251"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6cfb7ca1ab500dc58cd6ae1fdf1a573a"> 1251</a></span>                             PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;value)</div>
<div class="line"><a id="l01252" name="l01252"></a><span class="lineno"> 1252</span>  <span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;)</div>
<div class="line"><a id="l01253" name="l01253"></a><span class="lineno"> 1253</span>{</div>
<div class="line"><a id="l01254" name="l01254"></a><span class="lineno"> 1254</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.g = value;</div>
<div class="line"><a id="l01255" name="l01255"></a><span class="lineno"> 1255</span>}</div>
<div class="line"><a id="l01256" name="l01256"></a><span class="lineno"> 1256</span> </div>
<div class="line"><a id="l01257" name="l01257"></a><span class="lineno"> 1257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01258" name="l01258"></a><span class="lineno"> 1258</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01259" name="l01259"></a><span class="lineno"> 1259</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01260" name="l01260"></a><span class="lineno"> 1260</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01261" name="l01261"></a><span class="lineno"> 1261</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01262" name="l01262"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad133c61fa6f78c0b70b991cc6fedaa41"> 1262</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l01263" name="l01263"></a><span class="lineno"> 1263</span>  <span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;)</div>
<div class="line"><a id="l01264" name="l01264"></a><span class="lineno"> 1264</span>{</div>
<div class="line"><a id="l01265" name="l01265"></a><span class="lineno"> 1265</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.g = std::move(value);</div>
<div class="line"><a id="l01266" name="l01266"></a><span class="lineno"> 1266</span>}</div>
<div class="line"><a id="l01267" name="l01267"></a><span class="lineno"> 1267</span> </div>
<div class="line"><a id="l01268" name="l01268"></a><span class="lineno"> 1268</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01269" name="l01269"></a><span class="lineno"> 1269</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01270" name="l01270"></a><span class="lineno"> 1270</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01271" name="l01271"></a><span class="lineno"> 1271</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01272" name="l01272"></a><span class="lineno"> 1272</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01273" name="l01273"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a66f98283573b9cd72ca53da5fb31e141"> 1273</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">transition_control_function</a> &amp;callable) {</div>
<div class="line"><a id="l01274" name="l01274"></a><span class="lineno"> 1274</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition_control_g = callable;</div>
<div class="line"><a id="l01275" name="l01275"></a><span class="lineno"> 1275</span>}</div>
<div class="line"><a id="l01276" name="l01276"></a><span class="lineno"> 1276</span> </div>
<div class="line"><a id="l01277" name="l01277"></a><span class="lineno"> 1277</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01278" name="l01278"></a><span class="lineno"> 1278</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01279" name="l01279"></a><span class="lineno"> 1279</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01280" name="l01280"></a><span class="lineno"> 1280</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01281" name="l01281"></a><span class="lineno"> 1281</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01282" name="l01282"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acd53c122d4fc6aff675d42bbff5894af"> 1282</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">::g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">transition_control_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01283" name="l01283"></a><span class="lineno"> 1283</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition_control_g = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01284" name="l01284"></a><span class="lineno"> 1284</span>}</div>
<div class="line"><a id="l01285" name="l01285"></a><span class="lineno"> 1285</span> </div>
<div class="line"><a id="l01286" name="l01286"></a><span class="lineno"> 1286</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01287" name="l01287"></a><span class="lineno"> 1287</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01288" name="l01288"></a><span class="lineno"> 1288</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01289" name="l01289"></a><span class="lineno"> 1289</span>[[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l01290" name="l01290"></a><span class="lineno"> 1290</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01291" name="l01291"></a><span class="lineno"> 1291</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01292" name="l01292"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae79562d5fd95bf5da81a4add72d8d3b8"> 1292</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae79562d5fd95bf5da81a4add72d8d3b8">::k</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0ce1adf743fa652a1b9ea977590b742d">gain</a> &amp; {</div>
<div class="line"><a id="l01293" name="l01293"></a><span class="lineno"> 1293</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.k;</div>
<div class="line"><a id="l01294" name="l01294"></a><span class="lineno"> 1294</span>}</div>
<div class="line"><a id="l01295" name="l01295"></a><span class="lineno"> 1295</span> </div>
<div class="line"><a id="l01296" name="l01296"></a><span class="lineno"> 1296</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01297" name="l01297"></a><span class="lineno"> 1297</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01298" name="l01298"></a><span class="lineno"> 1298</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01299" name="l01299"></a><span class="lineno"> 1299</span>[[nodiscard(<span class="stringliteral">&quot;The returned innovation column vector Y is unexpectedly &quot;</span></div>
<div class="line"><a id="l01300" name="l01300"></a><span class="lineno"> 1300</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01301" name="l01301"></a><span class="lineno"> 1301</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01302" name="l01302"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac57cbd09a4d198f909cd76294fcfa3a4"> 1302</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac57cbd09a4d198f909cd76294fcfa3a4">::y</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a766799c6db7b11aa876b46ad13e65478">innovation</a> &amp; {</div>
<div class="line"><a id="l01303" name="l01303"></a><span class="lineno"> 1303</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.y;</div>
<div class="line"><a id="l01304" name="l01304"></a><span class="lineno"> 1304</span>}</div>
<div class="line"><a id="l01305" name="l01305"></a><span class="lineno"> 1305</span> </div>
<div class="line"><a id="l01306" name="l01306"></a><span class="lineno"> 1306</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01307" name="l01307"></a><span class="lineno"> 1307</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01308" name="l01308"></a><span class="lineno"> 1308</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01309" name="l01309"></a><span class="lineno"> 1309</span>[[nodiscard(<span class="stringliteral">&quot;The returned innovation uncertainty matrix S is unexpectedly &quot;</span></div>
<div class="line"><a id="l01310" name="l01310"></a><span class="lineno"> 1310</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01311" name="l01311"></a><span class="lineno"> 1311</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01312" name="l01312"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3804b4483db80498d457dffc1f796277"> 1312</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3804b4483db80498d457dffc1f796277">::s</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a80a2281962abb19ef814d7d878e99066">innovation_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01313" name="l01313"></a><span class="lineno"> 1313</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.s;</div>
<div class="line"><a id="l01314" name="l01314"></a><span class="lineno"> 1314</span>}</div>
<div class="line"><a id="l01315" name="l01315"></a><span class="lineno"> 1315</span> </div>
<div class="line"><a id="l01316" name="l01316"></a><span class="lineno"> 1316</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01317" name="l01317"></a><span class="lineno"> 1317</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01318" name="l01318"></a><span class="lineno"> 1318</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01319" name="l01319"></a><span class="lineno"> 1319</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01320" name="l01320"></a><span class="lineno"> 1320</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01321" name="l01321"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb"> 1321</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb">::transition</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">transition_function</a> &amp;callable) {</div>
<div class="line"><a id="l01322" name="l01322"></a><span class="lineno"> 1322</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition = callable;</div>
<div class="line"><a id="l01323" name="l01323"></a><span class="lineno"> 1323</span>}</div>
<div class="line"><a id="l01324" name="l01324"></a><span class="lineno"> 1324</span> </div>
<div class="line"><a id="l01325" name="l01325"></a><span class="lineno"> 1325</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01326" name="l01326"></a><span class="lineno"> 1326</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01327" name="l01327"></a><span class="lineno"> 1327</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01328" name="l01328"></a><span class="lineno"> 1328</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01329" name="l01329"></a><span class="lineno"> 1329</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01330" name="l01330"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abe8660edaabd6f16d262c0c9ac61922b"> 1330</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb">::transition</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">transition_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01331" name="l01331"></a><span class="lineno"> 1331</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.transition = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01332" name="l01332"></a><span class="lineno"> 1332</span>}</div>
<div class="line"><a id="l01333" name="l01333"></a><span class="lineno"> 1333</span> </div>
<div class="line"><a id="l01334" name="l01334"></a><span class="lineno"> 1334</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01335" name="l01335"></a><span class="lineno"> 1335</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01336" name="l01336"></a><span class="lineno"> 1336</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01337" name="l01337"></a><span class="lineno"> 1337</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01338" name="l01338"></a><span class="lineno"> 1338</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01339" name="l01339"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd"> 1339</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd">::observation</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">observation_function</a> &amp;callable) {</div>
<div class="line"><a id="l01340" name="l01340"></a><span class="lineno"> 1340</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.observation = callable;</div>
<div class="line"><a id="l01341" name="l01341"></a><span class="lineno"> 1341</span>}</div>
<div class="line"><a id="l01342" name="l01342"></a><span class="lineno"> 1342</span> </div>
<div class="line"><a id="l01343" name="l01343"></a><span class="lineno"> 1343</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01344" name="l01344"></a><span class="lineno"> 1344</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01345" name="l01345"></a><span class="lineno"> 1345</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01346" name="l01346"></a><span class="lineno"> 1346</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01347" name="l01347"></a><span class="lineno"> 1347</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01348" name="l01348"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a177c22d2cb73e7661342e8452d22a450"> 1348</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd">::observation</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">observation_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01349" name="l01349"></a><span class="lineno"> 1349</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.observation = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01350" name="l01350"></a><span class="lineno"> 1350</span>}</div>
<div class="line"><a id="l01351" name="l01351"></a><span class="lineno"> 1351</span> </div>
<div class="line"><a id="l01352" name="l01352"></a><span class="lineno"> 1352</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01353" name="l01353"></a><span class="lineno"> 1353</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01354" name="l01354"></a><span class="lineno"> 1354</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01355" name="l01355"></a><span class="lineno"> 1355</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01356" name="l01356"></a><span class="lineno"> 1356</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01357" name="l01357"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa25300d568d2051e84b5603b7134322c"> 1357</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f">::update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments) {</div>
<div class="line"><a id="l01358" name="l01358"></a><span class="lineno"> 1358</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.update(arguments...);</div>
<div class="line"><a id="l01359" name="l01359"></a><span class="lineno"> 1359</span>}</div>
<div class="line"><a id="l01360" name="l01360"></a><span class="lineno"> 1360</span> </div>
<div class="line"><a id="l01361" name="l01361"></a><span class="lineno"> 1361</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01362" name="l01362"></a><span class="lineno"> 1362</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01363" name="l01363"></a><span class="lineno"> 1363</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01364" name="l01364"></a><span class="lineno"> 1364</span><span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Position&gt;</div>
<div class="line"><a id="l01365" name="l01365"></a><span class="lineno"> 1365</span>[[nodiscard(<span class="stringliteral">&quot;The returned update argument is unexpectedly &quot;</span></div>
<div class="line"><a id="l01366" name="l01366"></a><span class="lineno"> 1366</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01367" name="l01367"></a><span class="lineno"> 1367</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01368" name="l01368"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f"> 1368</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f">::update</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a id="l01369" name="l01369"></a><span class="lineno"> 1369</span>  <span class="keywordflow">return</span> std::get&lt;Position&gt;(<a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.update_arguments);</div>
<div class="line"><a id="l01370" name="l01370"></a><span class="lineno"> 1370</span>}</div>
<div class="line"><a id="l01371" name="l01371"></a><span class="lineno"> 1371</span> </div>
<div class="line"><a id="l01372" name="l01372"></a><span class="lineno"> 1372</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01373" name="l01373"></a><span class="lineno"> 1373</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01374" name="l01374"></a><span class="lineno"> 1374</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01375" name="l01375"></a><span class="lineno"> 1375</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01376" name="l01376"></a><span class="lineno"> 1376</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01377" name="l01377"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a25c22eca310858807cd621574bef321a"> 1377</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f">::predict</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments) {</div>
<div class="line"><a id="l01378" name="l01378"></a><span class="lineno"> 1378</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.predict(arguments...);</div>
<div class="line"><a id="l01379" name="l01379"></a><span class="lineno"> 1379</span>}</div>
<div class="line"><a id="l01380" name="l01380"></a><span class="lineno"> 1380</span> </div>
<div class="line"><a id="l01381" name="l01381"></a><span class="lineno"> 1381</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01382" name="l01382"></a><span class="lineno"> 1382</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> Identity, <span class="keyword">typename</span> UpdateTypes,</div>
<div class="line"><a id="l01383" name="l01383"></a><span class="lineno"> 1383</span>          <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01384" name="l01384"></a><span class="lineno"> 1384</span><span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Position&gt;</div>
<div class="line"><a id="l01385" name="l01385"></a><span class="lineno"> 1385</span>[[nodiscard(<span class="stringliteral">&quot;The returned prediction argument is unexpectedly &quot;</span></div>
<div class="line"><a id="l01386" name="l01386"></a><span class="lineno"> 1386</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01387" name="l01387"></a><span class="lineno"> 1387</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, Identity, UpdateTypes,</div>
<div class="line"><a id="l01388" name="l01388"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f"> 1388</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f">::predict</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a id="l01389" name="l01389"></a><span class="lineno"> 1389</span>  <span class="keywordflow">return</span> std::get&lt;Position&gt;(<a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">filter</a>.prediction_arguments);</div>
<div class="line"><a id="l01390" name="l01390"></a><span class="lineno"> 1390</span>}</div>
<div class="line"><a id="l01391" name="l01391"></a><span class="lineno"> 1391</span> </div>
<div class="line"><a id="l01392" name="l01392"></a><span class="lineno"> 1392</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01393" name="l01393"></a><span class="lineno"> 1393</span> </div>
<div class="line"><a id="l01394" name="l01394"></a><span class="lineno"> 1394</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter for C++23.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00197">kalman.hpp:197</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a061dda78577687f57a708d0c40b4d38b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a061dda78577687f57a708d0c40b4d38b">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0ce1adf743fa652a1b9ea977590b742d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0ce1adf743fa652a1b9ea977590b742d">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00267">kalman.hpp:267</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0fdd9b7a5d245132ad45813806dc52e1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0fdd9b7a5d245132ad45813806dc52e1">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1090964a11bc2f8618deeabbd9e7a94c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1090964a11bc2f8618deeabbd9e7a94c">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; const state_transition &amp;</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01117">kalman.hpp:1117</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a200c12bfc07b3bf2393eec8fcc2a682c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a200c12bfc07b3bf2393eec8fcc2a682c">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00264">kalman.hpp:264</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a265cc35f01ccc54827e2bfa5391aa35a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a265cc35f01ccc54827e2bfa5391aa35a">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; const state &amp;</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00888">kalman.hpp:888</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3804b4483db80498d457dffc1f796277"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3804b4483db80498d457dffc1f796277">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; const innovation_uncertainty &amp;</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01312">kalman.hpp:1312</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3adc41b0ea4180ad8a3bac3b18cecb1b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3adc41b0ea4180ad8a3bac3b18cecb1b">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; const output &amp;</div><div class="ttdoc">Returns the last observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00944">kalman.hpp:944</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3ae1bec43348158e4841067e1a777e63"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3ae1bec43348158e4841067e1a777e63">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3bff1bb771b354738c6b8af6bc1b6c04"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3bff1bb771b354738c6b8af6bc1b6c04">fcarouge::kalman::noise_observation_function</a></div><div class="ttdeci">typename implementation::noise_observation_function noise_observation_function</div><div class="ttdoc">Type of the callable noise observation function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00287">kalman.hpp:288</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3c7352e9fb6d828f8d32836d95c257cf"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3c7352e9fb6d828f8d32836d95c257cf">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00257">kalman.hpp:257</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3e7e617b1472f10a449438381c4a5276"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3e7e617b1472f10a449438381c4a5276">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; const output_model &amp;</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01173">kalman.hpp:1173</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a444186ec5bf2e0967fa0bd4e6b864e56"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a444186ec5bf2e0967fa0bd4e6b864e56">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00241">kalman.hpp:241</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a49a85e9e76aed08ba80bcb76dee230fb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a49a85e9e76aed08ba80bcb76dee230fb">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const transition_function &amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01321">kalman.hpp:1321</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5bbe0d3c7ca72ae85983afd710b6a2bc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5bbe0d3c7ca72ae85983afd710b6a2bc">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00217">kalman.hpp:217</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6dcfe30ba9f36654cee86d8aae3942b1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6dcfe30ba9f36654cee86d8aae3942b1">fcarouge::kalman::transition_function</a></div><div class="ttdeci">typename implementation::transition_function transition_function</div><div class="ttdoc">Type of the callable transition function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00317">kalman.hpp:317</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a766799c6db7b11aa876b46ad13e65478"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a766799c6db7b11aa876b46ad13e65478">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00270">kalman.hpp:270</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a76a667183bae59e0f89a709bd56fbff2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a76a667183bae59e0f89a709bd56fbff2">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00236">kalman.hpp:236</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a80a2281962abb19ef814d7d878e99066"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a80a2281962abb19ef814d7d878e99066">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00273">kalman.hpp:274</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a82735080c37ea2b48177a91ffc90e548"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a82735080c37ea2b48177a91ffc90e548">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; const input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01229">kalman.hpp:1229</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a865156e6528962efddcdfea35bb6c9dd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a865156e6528962efddcdfea35bb6c9dd">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const observation_function &amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01339">kalman.hpp:1339</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a98e6398b4fbdc518be81f2d01c9bfa81"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a98e6398b4fbdc518be81f2d01c9bfa81">fcarouge::kalman::noise_process_function</a></div><div class="ttdeci">typename implementation::noise_process_function noise_process_function</div><div class="ttdoc">Type of the callable noise process function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00301">kalman.hpp:302</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a994ad42f42be2bf324db2015061ea135"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a994ad42f42be2bf324db2015061ea135">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00226">kalman.hpp:226</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a996020d6032f5ea3166bd14184e2ec6f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a996020d6032f5ea3166bd14184e2ec6f">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr auto update() const</div><div class="ttdoc">Returns the Nth update argument.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01368">kalman.hpp:1368</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa6d7d98b7d1bb413a36854ce842468d4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa6d7d98b7d1bb413a36854ce842468d4">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; const process_uncertainty &amp;</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01005">kalman.hpp:1005</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aac490f7d353fe5de219367c092246bb7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aac490f7d353fe5de219367c092246bb7">fcarouge::kalman::observation_function</a></div><div class="ttdeci">typename implementation::observation_function observation_function</div><div class="ttdoc">Type of the callable observation function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00323">kalman.hpp:323</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab49e85b9ee580813092624b9b46398e0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab49e85b9ee580813092624b9b46398e0">fcarouge::kalman::transition_control_function</a></div><div class="ttdeci">typename implementation::transition_control_function transition_control_function</div><div class="ttdoc">Type of the callable transition control function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00310">kalman.hpp:311</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abdb519bf85f8d5855bccd5783dd44da5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abdb519bf85f8d5855bccd5783dd44da5">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; const estimate_uncertainty &amp;</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00966">kalman.hpp:966</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac57cbd09a4d198f909cd76294fcfa3a4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac57cbd09a4d198f909cd76294fcfa3a4">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; const innovation &amp;</div><div class="ttdoc">Returns the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01302">kalman.hpp:1302</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac9e5242cce93f1173cd68e1af25f5d3b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac9e5242cce93f1173cd68e1af25f5d3b">fcarouge::kalman::observation_state_function</a></div><div class="ttdeci">typename implementation::observation_state_function observation_state_function</div><div class="ttdoc">Type of the callable observation state function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00280">kalman.hpp:281</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad14f42e8edcb6524b5c5cfc77d3e2992"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad14f42e8edcb6524b5c5cfc77d3e2992">fcarouge::kalman::implementation</a></div><div class="ttdeci">internal::kalman&lt; State, Output, Input, Transpose, Divide, Identity, internal::repack_t&lt; UpdateTypes &gt;, internal::repack_t&lt; PredictionTypes &gt; &gt; implementation</div><div class="ttdoc">Implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00206">kalman.hpp:209</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad649a3bef294d5dda523137b08e7b22d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad649a3bef294d5dda523137b08e7b22d">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; const output_uncertainty &amp;</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01061">kalman.hpp:1061</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae228a7a82db4f6cdc07e335a791caf1a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae228a7a82db4f6cdc07e335a791caf1a">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00244">kalman.hpp:244</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae60986af53245e206bfc34d0eec45943"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae60986af53245e206bfc34d0eec45943">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae79562d5fd95bf5da81a4add72d8d3b8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae79562d5fd95bf5da81a4add72d8d3b8">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; const gain &amp;</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01292">kalman.hpp:1292</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aec2214f218a08e262928716c78b94783"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aec2214f218a08e262928716c78b94783">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00231">kalman.hpp:231</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aef3ea2f3486afde2ac7b8a2465ff801f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aef3ea2f3486afde2ac7b8a2465ff801f">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr auto predict() const</div><div class="ttdoc">Returns the Nth prediction argument.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01388">kalman.hpp:1388</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af13cf1e1e05b428b557a9c443478a0da"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af13cf1e1e05b428b557a9c443478a0da">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00247">kalman.hpp:247</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af23634a0895869e80c3c9f09427c4abc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af23634a0895869e80c3c9f09427c4abc">fcarouge::kalman::transition_state_function</a></div><div class="ttdeci">typename implementation::transition_state_function transition_state_function</div><div class="ttdoc">Type of the callable transition state function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00294">kalman.hpp:295</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af4ef6641423a0338e73f9281952f77b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af4ef6641423a0338e73f9281952f77b3">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00252">kalman.hpp:252</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af5f168c7325c88b1892177b18bb4ab22"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af5f168c7325c88b1892177b18bb4ab22">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af8076110c73731fe8663cb52bee112be"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af8076110c73731fe8663cb52bee112be">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; const input &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the last control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00954">kalman.hpp:954</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afc43f47f92490cf3b07b4155ed88ceac"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afc43f47f92490cf3b07b4155ed88ceac">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aformat_8hpp_xhtml"><div class="ttname"><a href="format_8hpp.xhtml">format.hpp</a></div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a7af38f38950d3b3f6c0fdd598c68f2d4"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a7af38f38950d3b3f6c0fdd598c68f2d4">fcarouge::eigen::vector</a></div><div class="ttdeci">internal::vector&lt; Type, Size &gt; vector</div><div class="ttdoc">Convenience Eigen vector.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00067">kalman.hpp:67</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_ab99c4b80cb5488c202a697e056134bae"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">fcarouge::eigen::identity_matrix</a></div><div class="ttdeci">internal::identity_matrix identity_matrix</div><div class="ttdoc">Function object for providing an Eigen identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00058">kalman.hpp:58</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_acaa4803bfeb8c1cef9285fd03d3c3df4"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#acaa4803bfeb8c1cef9285fd03d3c3df4">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; State, Output, Input, transpose, divide, identity_matrix, UpdateTypes, PredictionTypes &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00082">kalman.hpp:83</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a567d18fbfbf6f8d1543bca57ba706f22"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">fcarouge::internal::repack_t</a></div><div class="ttdeci">typename repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00067">utility.hpp:67</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a990c3b3d2e7c4889c7f666cc8e82c503"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">fcarouge::internal::empty_pack</a></div><div class="ttdeci">pack&lt;&gt; empty_pack</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00055">utility.hpp:55</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa5a28afb4550bbcbd55d875351de6e27"><div class="ttname"><a href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a></div><div class="ttdeci">internal::pack&lt; Types... &gt; pack</div><div class="ttdoc">Convenience tuple-like pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00079">kalman.hpp:79</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_af07a5637ebbb4bd8c0244134151732ca"><div class="ttname"><a href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">fcarouge::empty_pack</a></div><div class="ttdeci">internal::empty_pack empty_pack</div><div class="ttdoc">Convenience tuple-like empty pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00076">kalman.hpp:76</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml">fcarouge::identity_matrix</a></div><div class="ttdoc">Function object for providing an identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml_a3bc3899543cf8c8e0b11afc1412cf087"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">fcarouge::identity_matrix::operator()</a></div><div class="ttdeci">constexpr auto operator()() const noexcept</div><div class="ttdoc">Returns 1, the 1-by-1 identity matrix equivalent.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00070">kalman.hpp:70</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Sun Oct 16 2022 20:41:08 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
