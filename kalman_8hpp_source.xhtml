<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.4"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.4 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="format_8hpp.xhtml">internal/format.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">#include &quot;internal/utility.hpp&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a> {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">   58</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">internal::empty_pack</a>;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">   61</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">internal::pack</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    <span class="keyword">typename</span> State = double, <span class="keyword">typename</span> Output = double, <span class="keyword">typename</span> Input = void,</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    <span class="keyword">typename</span> Transpose = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    <span class="keyword">typename</span> UpdateTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>, <span class="keyword">typename</span> PredictionTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>&gt;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  175</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> final {</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8ec2ec2747d100f3ce32cdff8ac70331">  184</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a8ec2ec2747d100f3ce32cdff8ac70331">implementation</a> =</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a6200288e83ea7493c432fcf77aca131d">internal::kalman</a>&lt;State, Output, Input, Transpose, Divide,</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;UpdateTypes&gt;</a>,</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;PredictionTypes&gt;</a>&gt;;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">  195</a></span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a8ec2ec2747d100f3ce32cdff8ac70331">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">  204</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> = <span class="keyword">typename</span> implementation::state;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">  209</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">output</a> = <span class="keyword">typename</span> implementation::output;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">  214</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">input</a> = <span class="keyword">typename</span> implementation::input;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">  219</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> = <span class="keyword">typename</span> implementation::estimate_uncertainty;</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">  222</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> = <span class="keyword">typename</span> implementation::process_uncertainty;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">  225</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> = <span class="keyword">typename</span> implementation::output_uncertainty;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">  230</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> = <span class="keyword">typename</span> implementation::state_transition;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">  235</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> = <span class="keyword">typename</span> implementation::output_model;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">  242</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> = <span class="keyword">typename</span> implementation::input_control;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">  245</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">gain</a> = <span class="keyword">typename</span> implementation::gain;</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">  248</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">innovation</a> = <span class="keyword">typename</span> implementation::innovation;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">  251</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>      <span class="keyword">typename</span> implementation::innovation_uncertainty;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">  258</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> =</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>      <span class="keyword">typename</span> implementation::observation_state_function;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">  265</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> =</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>      <span class="keyword">typename</span> implementation::noise_observation_function;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">  272</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> =</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>      <span class="keyword">typename</span> implementation::transition_state_function;</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">  279</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> =</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      <span class="keyword">typename</span> implementation::noise_process_function;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">  288</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> =</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>      <span class="keyword">typename</span> implementation::transition_control_function;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">  295</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> = <span class="keyword">typename</span> implementation::transition_function;</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">  301</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> = <span class="keyword">typename</span> implementation::observation_function;</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9b20129bf7970b824760af000fd901f1">  311</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9b20129bf7970b824760af000fd901f1">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad3b14be3534eb1c3a2d61b496bd0a7b5">  322</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad3b14be3534eb1c3a2d61b496bd0a7b5">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6d0268717d97cd617bdd75f323b9c319">  334</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6d0268717d97cd617bdd75f323b9c319">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abc64369462a3430c2823e5969c3e8a0e">  348</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abc64369462a3430c2823e5969c3e8a0e">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afaf3a50c0320573f44db0ac92fd9830c">  364</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afaf3a50c0320573f44db0ac92fd9830c">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a11beeb6cab8f8432000b6e67c6eaa71e">  370</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a11beeb6cab8f8432000b6e67c6eaa71e">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span> </div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;;</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;value);</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span> </div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;&amp;value);</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span> </div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab2f8cc075c0c78c6010808f375fd0983">z</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">output</a> &amp;;</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span> </div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aabd868007b2b8ff65a4818b339a5bfc6">u</a>() const</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>      -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">input</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">p</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">p</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">p</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span> </div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span> </div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span> </div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span> </div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span> </div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> &amp;callable);</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span> </div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span> </div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span> </div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span> </div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span> </div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> &amp;callable);</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span> </div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span> </div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;;</div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;;</div>
<div class="line"><a id="l00561" name="l00561"></a><span class="lineno">  561</span> </div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;value);</div>
<div class="line"><a id="l00568" name="l00568"></a><span class="lineno">  568</span> </div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;&amp;value);</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span> </div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> &amp;callable);</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span> </div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span> </div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;;</div>
<div class="line"><a id="l00614" name="l00614"></a><span class="lineno">  614</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;;</div>
<div class="line"><a id="l00615" name="l00615"></a><span class="lineno">  615</span> </div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno">  621</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;value);</div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span> </div>
<div class="line"><a id="l00628" name="l00628"></a><span class="lineno">  628</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;&amp;value);</div>
<div class="line"><a id="l00629" name="l00629"></a><span class="lineno">  629</span> </div>
<div class="line"><a id="l00644" name="l00644"></a><span class="lineno">  644</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> &amp;callable);</div>
<div class="line"><a id="l00645" name="l00645"></a><span class="lineno">  645</span> </div>
<div class="line"><a id="l00660" name="l00660"></a><span class="lineno">  660</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00661" name="l00661"></a><span class="lineno">  661</span> </div>
<div class="line"><a id="l00669" name="l00669"></a><span class="lineno">  669</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>() const</div>
<div class="line"><a id="l00670" name="l00670"></a><span class="lineno">  670</span>      -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00671" name="l00671"></a><span class="lineno">  671</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>()</div>
<div class="line"><a id="l00672" name="l00672"></a><span class="lineno">  672</span>      -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00673" name="l00673"></a><span class="lineno">  673</span> </div>
<div class="line"><a id="l00681" name="l00681"></a><span class="lineno">  681</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;value)</div>
<div class="line"><a id="l00682" name="l00682"></a><span class="lineno">  682</span>    requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00683" name="l00683"></a><span class="lineno">  683</span> </div>
<div class="line"><a id="l00691" name="l00691"></a><span class="lineno">  691</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l00692" name="l00692"></a><span class="lineno">  692</span>    requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;);</div>
<div class="line"><a id="l00693" name="l00693"></a><span class="lineno">  693</span> </div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno">  703</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> &amp;callable);</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span> </div>
<div class="line"><a id="l00714" name="l00714"></a><span class="lineno">  714</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00715" name="l00715"></a><span class="lineno">  715</span> </div>
<div class="line"><a id="l00721" name="l00721"></a><span class="lineno">  721</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af21fc49da11cf3ea087f6e0b5601f82e">k</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">gain</a> &amp;;</div>
<div class="line"><a id="l00722" name="l00722"></a><span class="lineno">  722</span> </div>
<div class="line"><a id="l00728" name="l00728"></a><span class="lineno">  728</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#affc21b5672b9e24008ca0da21f81e79e">y</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">innovation</a> &amp;;</div>
<div class="line"><a id="l00729" name="l00729"></a><span class="lineno">  729</span> </div>
<div class="line"><a id="l00735" name="l00735"></a><span class="lineno">  735</span>  inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7ac54f89db65b70bb013765b21e1dbe4">s</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">innovation_uncertainty</a> &amp;;</div>
<div class="line"><a id="l00736" name="l00736"></a><span class="lineno">  736</span> </div>
<div class="line"><a id="l00748" name="l00748"></a><span class="lineno">  748</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">transition</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> &amp;callable);</div>
<div class="line"><a id="l00749" name="l00749"></a><span class="lineno">  749</span> </div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno">  761</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">transition</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00762" name="l00762"></a><span class="lineno">  762</span> </div>
<div class="line"><a id="l00774" name="l00774"></a><span class="lineno">  774</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">observation</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> &amp;callable);</div>
<div class="line"><a id="l00775" name="l00775"></a><span class="lineno">  775</span> </div>
<div class="line"><a id="l00787" name="l00787"></a><span class="lineno">  787</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">observation</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> &amp;&amp;callable);</div>
<div class="line"><a id="l00788" name="l00788"></a><span class="lineno">  788</span> </div>
<div class="line"><a id="l00790" name="l00790"></a><span class="lineno">  790</span> </div>
<div class="line"><a id="l00793" name="l00793"></a><span class="lineno">  793</span> </div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno">  810</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">predict</a>(const auto &amp;...arguments);</div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno">  811</span> </div>
<div class="line"><a id="l00823" name="l00823"></a><span class="lineno">  823</span>  template &lt;std::<span class="keywordtype">size_t</span> Position&gt; inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">predict</a>() const;</div>
<div class="line"><a id="l00824" name="l00824"></a><span class="lineno">  824</span> </div>
<div class="line"><a id="l00842" name="l00842"></a><span class="lineno">  842</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">update</a>(const auto &amp;...arguments);</div>
<div class="line"><a id="l00843" name="l00843"></a><span class="lineno">  843</span> </div>
<div class="line"><a id="l00855" name="l00855"></a><span class="lineno">  855</span>  template &lt;std::<span class="keywordtype">size_t</span> Position&gt; inline constexpr auto <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">update</a>() const;</div>
<div class="line"><a id="l00856" name="l00856"></a><span class="lineno">  856</span> </div>
<div class="line"><a id="l00858" name="l00858"></a><span class="lineno">  858</span>};</div>
<div class="line"><a id="l00859" name="l00859"></a><span class="lineno">  859</span> </div>
<div class="line"><a id="l00860" name="l00860"></a><span class="lineno">  860</span>template &lt;typename State, typename Output, typename Input, typename Transpose,</div>
<div class="line"><a id="l00861" name="l00861"></a><span class="lineno">  861</span>          typename Divide, typename UpdateTypes, typename PredictionTypes&gt;</div>
<div class="line"><a id="l00862" name="l00862"></a><span class="lineno">  862</span>[[nodiscard(&quot;The returned <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> estimate column <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a7af38f38950d3b3f6c0fdd598c68f2d4">vector</a> X is unexpectedly &quot;</div>
<div class="line"><a id="l00863" name="l00863"></a><span class="lineno">  863</span>            &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">  865</a></span>       PredictionTypes&gt;::<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">x</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp; {</div>
<div class="line"><a id="l00866" name="l00866"></a><span class="lineno">  866</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x;</div>
<div class="line"><a id="l00867" name="l00867"></a><span class="lineno">  867</span>}</div>
<div class="line"><a id="l00868" name="l00868"></a><span class="lineno">  868</span> </div>
<div class="line"><a id="l00869" name="l00869"></a><span class="lineno">  869</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00870" name="l00870"></a><span class="lineno">  870</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00871" name="l00871"></a><span class="lineno">  871</span>[[nodiscard(<span class="stringliteral">&quot;The returned state estimate column vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00872" name="l00872"></a><span class="lineno">  872</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00873" name="l00873"></a><span class="lineno">  873</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00874" name="l00874"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abc33dace8bf1d0ad80410e797a6693d3">  874</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">::x</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp; {</div>
<div class="line"><a id="l00875" name="l00875"></a><span class="lineno">  875</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x;</div>
<div class="line"><a id="l00876" name="l00876"></a><span class="lineno">  876</span>}</div>
<div class="line"><a id="l00877" name="l00877"></a><span class="lineno">  877</span> </div>
<div class="line"><a id="l00878" name="l00878"></a><span class="lineno">  878</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00879" name="l00879"></a><span class="lineno">  879</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00880" name="l00880"></a><span class="lineno">  880</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00881" name="l00881"></a><span class="lineno">  881</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00882" name="l00882"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab813201eb553cb0e36a343fc18d2228a">  882</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">::x</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;value) {</div>
<div class="line"><a id="l00883" name="l00883"></a><span class="lineno">  883</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x = value;</div>
<div class="line"><a id="l00884" name="l00884"></a><span class="lineno">  884</span>}</div>
<div class="line"><a id="l00885" name="l00885"></a><span class="lineno">  885</span> </div>
<div class="line"><a id="l00886" name="l00886"></a><span class="lineno">  886</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno">  887</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00888" name="l00888"></a><span class="lineno">  888</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide,</div>
<div class="line"><a id="l00889" name="l00889"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a162a5e170f340d8aea89ca5b8396db93">  889</a></span>                             UpdateTypes, PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">::x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a> &amp;&amp;value) {</div>
<div class="line"><a id="l00890" name="l00890"></a><span class="lineno">  890</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x = std::move(value);</div>
<div class="line"><a id="l00891" name="l00891"></a><span class="lineno">  891</span>}</div>
<div class="line"><a id="l00892" name="l00892"></a><span class="lineno">  892</span> </div>
<div class="line"><a id="l00893" name="l00893"></a><span class="lineno">  893</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00894" name="l00894"></a><span class="lineno">  894</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00895" name="l00895"></a><span class="lineno">  895</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno">  896</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4ec2e5a7ce177384d9fe56bc5c9537d4">  897</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">::x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) {</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno">  898</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a>{value, values...});</div>
<div class="line"><a id="l00899" name="l00899"></a><span class="lineno">  899</span>}</div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span> </div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00902" name="l00902"></a><span class="lineno">  902</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00903" name="l00903"></a><span class="lineno">  903</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00904" name="l00904"></a><span class="lineno">  904</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00905" name="l00905"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af74a8cd2415274ec443ed2919e8862fa">  905</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">::x</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) {</div>
<div class="line"><a id="l00906" name="l00906"></a><span class="lineno">  906</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">state</a>{std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno">  907</span>                             std::forward&lt;decltype(values)&gt;(values)...});</div>
<div class="line"><a id="l00908" name="l00908"></a><span class="lineno">  908</span>}</div>
<div class="line"><a id="l00909" name="l00909"></a><span class="lineno">  909</span> </div>
<div class="line"><a id="l00910" name="l00910"></a><span class="lineno">  910</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00911" name="l00911"></a><span class="lineno">  911</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00912" name="l00912"></a><span class="lineno">  912</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation column vector Z is unexpectedly &quot;</span></div>
<div class="line"><a id="l00913" name="l00913"></a><span class="lineno">  913</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00914" name="l00914"></a><span class="lineno">  914</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00915" name="l00915"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab2f8cc075c0c78c6010808f375fd0983">  915</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab2f8cc075c0c78c6010808f375fd0983">::z</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">output</a> &amp; {</div>
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno">  916</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.z;</div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>}</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span> </div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span>[[nodiscard(<span class="stringliteral">&quot;The returned control column vector U is unexpectedly &quot;</span></div>
<div class="line"><a id="l00922" name="l00922"></a><span class="lineno">  922</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00923" name="l00923"></a><span class="lineno">  923</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00924" name="l00924"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aabd868007b2b8ff65a4818b339a5bfc6">  924</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aabd868007b2b8ff65a4818b339a5bfc6">::u</a>() const</div>
<div class="line"><a id="l00925" name="l00925"></a><span class="lineno">  925</span>    -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">input</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;) {</div>
<div class="line"><a id="l00926" name="l00926"></a><span class="lineno">  926</span>                      <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.u;</div>
<div class="line"><a id="l00927" name="l00927"></a><span class="lineno">  927</span>                    }</div>
<div class="line"><a id="l00928" name="l00928"></a><span class="lineno">  928</span> </div>
<div class="line"><a id="l00929" name="l00929"></a><span class="lineno">  929</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00930" name="l00930"></a><span class="lineno">  930</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno">  931</span>[[nodiscard(</div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span>    <span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno">  933</span>    <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input,</div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span>                                                 Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">  935</a></span>                                                 PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">::p</a>() const</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>    -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.p;</div>
<div class="line"><a id="l00938" name="l00938"></a><span class="lineno">  938</span>}</div>
<div class="line"><a id="l00939" name="l00939"></a><span class="lineno">  939</span> </div>
<div class="line"><a id="l00940" name="l00940"></a><span class="lineno">  940</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00941" name="l00941"></a><span class="lineno">  941</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00942" name="l00942"></a><span class="lineno">  942</span>[[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00943" name="l00943"></a><span class="lineno">  943</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00944" name="l00944"></a><span class="lineno">  944</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00945" name="l00945"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aac38a985c305e5596d7f2cae00d896b4">  945</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">::p</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00946" name="l00946"></a><span class="lineno">  946</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.p;</div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno">  947</span>}</div>
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno">  948</span> </div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac27cba2bc4bc960dc6c48dd9b6874095">  953</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">::p</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno">  954</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.p = value;</div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span>}</div>
<div class="line"><a id="l00956" name="l00956"></a><span class="lineno">  956</span> </div>
<div class="line"><a id="l00957" name="l00957"></a><span class="lineno">  957</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00958" name="l00958"></a><span class="lineno">  958</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00959" name="l00959"></a><span class="lineno">  959</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00960" name="l00960"></a><span class="lineno">  960</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00961" name="l00961"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a96a55d3dc468f8af4b7e83b75604ed3b">  961</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">::p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">estimate_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l00962" name="l00962"></a><span class="lineno">  962</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.p = std::move(value);</div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>}</div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span> </div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno">  965</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno">  966</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno">  967</span>[[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno">  969</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00970" name="l00970"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">  970</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno">  971</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.q;</div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno">  972</span>}</div>
<div class="line"><a id="l00973" name="l00973"></a><span class="lineno">  973</span> </div>
<div class="line"><a id="l00974" name="l00974"></a><span class="lineno">  974</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno">  976</span>[[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno">  977</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00978" name="l00978"></a><span class="lineno">  978</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00979" name="l00979"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aae5e85c68ecef11931d9fce39269a06d">  979</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp; {</div>
<div class="line"><a id="l00980" name="l00980"></a><span class="lineno">  980</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.q;</div>
<div class="line"><a id="l00981" name="l00981"></a><span class="lineno">  981</span>}</div>
<div class="line"><a id="l00982" name="l00982"></a><span class="lineno">  982</span> </div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno">  985</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno">  986</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad7892fa27870360ccc6a3a45c69d5e5a">  987</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.q = value;</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span>}</div>
<div class="line"><a id="l00990" name="l00990"></a><span class="lineno">  990</span> </div>
<div class="line"><a id="l00991" name="l00991"></a><span class="lineno">  991</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l00992" name="l00992"></a><span class="lineno">  992</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l00993" name="l00993"></a><span class="lineno">  993</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00994" name="l00994"></a><span class="lineno">  994</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l00995" name="l00995"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8fb7a721da291ad89d8e4d74ef00137a">  995</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">process_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l00996" name="l00996"></a><span class="lineno">  996</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.q = std::move(value);</div>
<div class="line"><a id="l00997" name="l00997"></a><span class="lineno">  997</span>}</div>
<div class="line"><a id="l00998" name="l00998"></a><span class="lineno">  998</span> </div>
<div class="line"><a id="l00999" name="l00999"></a><span class="lineno">  999</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01000" name="l01000"></a><span class="lineno"> 1000</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01001" name="l01001"></a><span class="lineno"> 1001</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01002" name="l01002"></a><span class="lineno"> 1002</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01003" name="l01003"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a93e49ac704ec8660264415bb6d6fb256"> 1003</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> &amp;callable) {</div>
<div class="line"><a id="l01004" name="l01004"></a><span class="lineno"> 1004</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.noise_process_q = callable;</div>
<div class="line"><a id="l01005" name="l01005"></a><span class="lineno"> 1005</span>}</div>
<div class="line"><a id="l01006" name="l01006"></a><span class="lineno"> 1006</span> </div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"> 1007</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"> 1009</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9ee6d255f81f6d6918bafd21458fda40"> 1011</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">::q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">noise_process_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01012" name="l01012"></a><span class="lineno"> 1012</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.noise_process_q = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01013" name="l01013"></a><span class="lineno"> 1013</span>}</div>
<div class="line"><a id="l01014" name="l01014"></a><span class="lineno"> 1014</span> </div>
<div class="line"><a id="l01015" name="l01015"></a><span class="lineno"> 1015</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01016" name="l01016"></a><span class="lineno"> 1016</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01017" name="l01017"></a><span class="lineno"> 1017</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l01018" name="l01018"></a><span class="lineno"> 1018</span>            <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01019" name="l01019"></a><span class="lineno"> 1019</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01020" name="l01020"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f"> 1020</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"> 1021</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.r;</div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span>}</div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span> </div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"> 1024</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01026" name="l01026"></a><span class="lineno"> 1026</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l01027" name="l01027"></a><span class="lineno"> 1027</span>            <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01028" name="l01028"></a><span class="lineno"> 1028</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01029" name="l01029"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1035098c819afc9e6d6042f4fbdc6b86"> 1029</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01030" name="l01030"></a><span class="lineno"> 1030</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.r;</div>
<div class="line"><a id="l01031" name="l01031"></a><span class="lineno"> 1031</span>}</div>
<div class="line"><a id="l01032" name="l01032"></a><span class="lineno"> 1032</span> </div>
<div class="line"><a id="l01033" name="l01033"></a><span class="lineno"> 1033</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01034" name="l01034"></a><span class="lineno"> 1034</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01035" name="l01035"></a><span class="lineno"> 1035</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01036" name="l01036"></a><span class="lineno"> 1036</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01037" name="l01037"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6ac9e818e2d59e63ad52b3d0c61cc9d2"> 1037</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;value) {</div>
<div class="line"><a id="l01038" name="l01038"></a><span class="lineno"> 1038</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.r = value;</div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"> 1039</span>}</div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"> 1040</span> </div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"> 1042</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01044" name="l01044"></a><span class="lineno"> 1044</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01045" name="l01045"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a47258f0402fa3a8b9c84a715e7b53da4"> 1045</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">output_uncertainty</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01046" name="l01046"></a><span class="lineno"> 1046</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.r = std::move(value);</div>
<div class="line"><a id="l01047" name="l01047"></a><span class="lineno"> 1047</span>}</div>
<div class="line"><a id="l01048" name="l01048"></a><span class="lineno"> 1048</span> </div>
<div class="line"><a id="l01049" name="l01049"></a><span class="lineno"> 1049</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01050" name="l01050"></a><span class="lineno"> 1050</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01051" name="l01051"></a><span class="lineno"> 1051</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01052" name="l01052"></a><span class="lineno"> 1052</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01053" name="l01053"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a830699bb67965adf201f50f03954e769"> 1053</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> &amp;callable) {</div>
<div class="line"><a id="l01054" name="l01054"></a><span class="lineno"> 1054</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.noise_observation_r = callable;</div>
<div class="line"><a id="l01055" name="l01055"></a><span class="lineno"> 1055</span>}</div>
<div class="line"><a id="l01056" name="l01056"></a><span class="lineno"> 1056</span> </div>
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"> 1057</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aaf0568624cc3735e167c40a23fe14110"> 1061</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">::r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">noise_observation_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01062" name="l01062"></a><span class="lineno"> 1062</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.noise_observation_r = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"> 1063</span>}</div>
<div class="line"><a id="l01064" name="l01064"></a><span class="lineno"> 1064</span> </div>
<div class="line"><a id="l01065" name="l01065"></a><span class="lineno"> 1065</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01066" name="l01066"></a><span class="lineno"> 1066</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01067" name="l01067"></a><span class="lineno"> 1067</span>[[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l01068" name="l01068"></a><span class="lineno"> 1068</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01069" name="l01069"></a><span class="lineno"> 1069</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01070" name="l01070"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d"> 1070</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp; {</div>
<div class="line"><a id="l01071" name="l01071"></a><span class="lineno"> 1071</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.f;</div>
<div class="line"><a id="l01072" name="l01072"></a><span class="lineno"> 1072</span>}</div>
<div class="line"><a id="l01073" name="l01073"></a><span class="lineno"> 1073</span> </div>
<div class="line"><a id="l01074" name="l01074"></a><span class="lineno"> 1074</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01075" name="l01075"></a><span class="lineno"> 1075</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01076" name="l01076"></a><span class="lineno"> 1076</span>[[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l01077" name="l01077"></a><span class="lineno"> 1077</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01078" name="l01078"></a><span class="lineno"> 1078</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01079" name="l01079"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad853e0afb2f1cae922fc570da643e463"> 1079</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp; {</div>
<div class="line"><a id="l01080" name="l01080"></a><span class="lineno"> 1080</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.f;</div>
<div class="line"><a id="l01081" name="l01081"></a><span class="lineno"> 1081</span>}</div>
<div class="line"><a id="l01082" name="l01082"></a><span class="lineno"> 1082</span> </div>
<div class="line"><a id="l01083" name="l01083"></a><span class="lineno"> 1083</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01084" name="l01084"></a><span class="lineno"> 1084</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01085" name="l01085"></a><span class="lineno"> 1085</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01086" name="l01086"></a><span class="lineno"> 1086</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01087" name="l01087"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa2688efccd97183f6173b887e40bcf34"> 1087</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;value) {</div>
<div class="line"><a id="l01088" name="l01088"></a><span class="lineno"> 1088</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.f = value;</div>
<div class="line"><a id="l01089" name="l01089"></a><span class="lineno"> 1089</span>}</div>
<div class="line"><a id="l01090" name="l01090"></a><span class="lineno"> 1090</span> </div>
<div class="line"><a id="l01091" name="l01091"></a><span class="lineno"> 1091</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01092" name="l01092"></a><span class="lineno"> 1092</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01093" name="l01093"></a><span class="lineno"> 1093</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01094" name="l01094"></a><span class="lineno"> 1094</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01095" name="l01095"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a686a15534f0eb3bd3eb646fc1ed03794"> 1095</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">state_transition</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01096" name="l01096"></a><span class="lineno"> 1096</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.f = std::move(value);</div>
<div class="line"><a id="l01097" name="l01097"></a><span class="lineno"> 1097</span>}</div>
<div class="line"><a id="l01098" name="l01098"></a><span class="lineno"> 1098</span> </div>
<div class="line"><a id="l01099" name="l01099"></a><span class="lineno"> 1099</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01100" name="l01100"></a><span class="lineno"> 1100</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01101" name="l01101"></a><span class="lineno"> 1101</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01102" name="l01102"></a><span class="lineno"> 1102</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01103" name="l01103"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3ddaeb039e322e44818cf0b5c78913be"> 1103</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> &amp;callable) {</div>
<div class="line"><a id="l01104" name="l01104"></a><span class="lineno"> 1104</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition_state_f = callable;</div>
<div class="line"><a id="l01105" name="l01105"></a><span class="lineno"> 1105</span>}</div>
<div class="line"><a id="l01106" name="l01106"></a><span class="lineno"> 1106</span> </div>
<div class="line"><a id="l01107" name="l01107"></a><span class="lineno"> 1107</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01108" name="l01108"></a><span class="lineno"> 1108</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01109" name="l01109"></a><span class="lineno"> 1109</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01110" name="l01110"></a><span class="lineno"> 1110</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01111" name="l01111"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9d8e3b7328ad70deb1506f6babe4ddf9"> 1111</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">::f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">transition_state_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01112" name="l01112"></a><span class="lineno"> 1112</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition_state_f = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01113" name="l01113"></a><span class="lineno"> 1113</span>}</div>
<div class="line"><a id="l01114" name="l01114"></a><span class="lineno"> 1114</span> </div>
<div class="line"><a id="l01115" name="l01115"></a><span class="lineno"> 1115</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01116" name="l01116"></a><span class="lineno"> 1116</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01117" name="l01117"></a><span class="lineno"> 1117</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l01118" name="l01118"></a><span class="lineno"> 1118</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01119" name="l01119"></a><span class="lineno"> 1119</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01120" name="l01120"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7"> 1120</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp; {</div>
<div class="line"><a id="l01121" name="l01121"></a><span class="lineno"> 1121</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.h;</div>
<div class="line"><a id="l01122" name="l01122"></a><span class="lineno"> 1122</span>}</div>
<div class="line"><a id="l01123" name="l01123"></a><span class="lineno"> 1123</span> </div>
<div class="line"><a id="l01124" name="l01124"></a><span class="lineno"> 1124</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01125" name="l01125"></a><span class="lineno"> 1125</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01126" name="l01126"></a><span class="lineno"> 1126</span>[[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l01127" name="l01127"></a><span class="lineno"> 1127</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01128" name="l01128"></a><span class="lineno"> 1128</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01129" name="l01129"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a981e43cdb98dc56ea70d0e0a9e1d5a5e"> 1129</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>() -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp; {</div>
<div class="line"><a id="l01130" name="l01130"></a><span class="lineno"> 1130</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.h;</div>
<div class="line"><a id="l01131" name="l01131"></a><span class="lineno"> 1131</span>}</div>
<div class="line"><a id="l01132" name="l01132"></a><span class="lineno"> 1132</span> </div>
<div class="line"><a id="l01133" name="l01133"></a><span class="lineno"> 1133</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01134" name="l01134"></a><span class="lineno"> 1134</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01135" name="l01135"></a><span class="lineno"> 1135</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01136" name="l01136"></a><span class="lineno"> 1136</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01137" name="l01137"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a15c5c9e7b897c7fd9e79127be957c3be"> 1137</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;value) {</div>
<div class="line"><a id="l01138" name="l01138"></a><span class="lineno"> 1138</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.h = value;</div>
<div class="line"><a id="l01139" name="l01139"></a><span class="lineno"> 1139</span>}</div>
<div class="line"><a id="l01140" name="l01140"></a><span class="lineno"> 1140</span> </div>
<div class="line"><a id="l01141" name="l01141"></a><span class="lineno"> 1141</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01142" name="l01142"></a><span class="lineno"> 1142</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01143" name="l01143"></a><span class="lineno"> 1143</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01144" name="l01144"></a><span class="lineno"> 1144</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01145" name="l01145"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a96fd884233949382a99e4d657aa932bf"> 1145</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">output_model</a> &amp;&amp;value) {</div>
<div class="line"><a id="l01146" name="l01146"></a><span class="lineno"> 1146</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.h = std::move(value);</div>
<div class="line"><a id="l01147" name="l01147"></a><span class="lineno"> 1147</span>}</div>
<div class="line"><a id="l01148" name="l01148"></a><span class="lineno"> 1148</span> </div>
<div class="line"><a id="l01149" name="l01149"></a><span class="lineno"> 1149</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01150" name="l01150"></a><span class="lineno"> 1150</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01151" name="l01151"></a><span class="lineno"> 1151</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01152" name="l01152"></a><span class="lineno"> 1152</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01153" name="l01153"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af042d07a3aa3c4a051fb9d0be17a12e0"> 1153</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> &amp;callable) {</div>
<div class="line"><a id="l01154" name="l01154"></a><span class="lineno"> 1154</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.observation_state_h = callable;</div>
<div class="line"><a id="l01155" name="l01155"></a><span class="lineno"> 1155</span>}</div>
<div class="line"><a id="l01156" name="l01156"></a><span class="lineno"> 1156</span> </div>
<div class="line"><a id="l01157" name="l01157"></a><span class="lineno"> 1157</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01158" name="l01158"></a><span class="lineno"> 1158</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01159" name="l01159"></a><span class="lineno"> 1159</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"> 1160</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afc0b9383ae1fb5134e6928212008b968"> 1161</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">::h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">observation_state_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01162" name="l01162"></a><span class="lineno"> 1162</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.observation_state_h = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"> 1163</span>}</div>
<div class="line"><a id="l01164" name="l01164"></a><span class="lineno"> 1164</span> </div>
<div class="line"><a id="l01165" name="l01165"></a><span class="lineno"> 1165</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01166" name="l01166"></a><span class="lineno"> 1166</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01167" name="l01167"></a><span class="lineno"> 1167</span>[[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l01168" name="l01168"></a><span class="lineno"> 1168</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01169" name="l01169"></a><span class="lineno"> 1169</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01170" name="l01170"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c"> 1170</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>() const</div>
<div class="line"><a id="l01171" name="l01171"></a><span class="lineno"> 1171</span>    -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;requires(not std::is_same_v&lt;Input, <span class="keywordtype">void</span>&gt;) {</div>
<div class="line"><a id="l01172" name="l01172"></a><span class="lineno"> 1172</span>                              <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.g;</div>
<div class="line"><a id="l01173" name="l01173"></a><span class="lineno"> 1173</span>                            }</div>
<div class="line"><a id="l01174" name="l01174"></a><span class="lineno"> 1174</span> </div>
<div class="line"><a id="l01175" name="l01175"></a><span class="lineno"> 1175</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01176" name="l01176"></a><span class="lineno"> 1176</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01177" name="l01177"></a><span class="lineno"> 1177</span>[[nodiscard(</div>
<div class="line"><a id="l01178" name="l01178"></a><span class="lineno"> 1178</span>    <span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l01179" name="l01179"></a><span class="lineno"> 1179</span>    <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input,</div>
<div class="line"><a id="l01180" name="l01180"></a><span class="lineno"> 1180</span>                                                 Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01181" name="l01181"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a953e5ff0efae82a3e2de2d3e59d0a968"> 1181</a></span>                                                 PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>()</div>
<div class="line"><a id="l01182" name="l01182"></a><span class="lineno"> 1182</span>    -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;<span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;) {</div>
<div class="line"><a id="l01183" name="l01183"></a><span class="lineno"> 1183</span>                        <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.g;</div>
<div class="line"><a id="l01184" name="l01184"></a><span class="lineno"> 1184</span>                      }</div>
<div class="line"><a id="l01185" name="l01185"></a><span class="lineno"> 1185</span> </div>
<div class="line"><a id="l01186" name="l01186"></a><span class="lineno"> 1186</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01187" name="l01187"></a><span class="lineno"> 1187</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01188" name="l01188"></a><span class="lineno"> 1188</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide,</div>
<div class="line"><a id="l01189" name="l01189"></a><span class="lineno"> 1189</span>                             UpdateTypes,</div>
<div class="line"><a id="l01190" name="l01190"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a48c3c59453aac26eff7955350dee15ef"> 1190</a></span>                             PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;value)</div>
<div class="line"><a id="l01191" name="l01191"></a><span class="lineno"> 1191</span>  <span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;)</div>
<div class="line"><a id="l01192" name="l01192"></a><span class="lineno"> 1192</span>{</div>
<div class="line"><a id="l01193" name="l01193"></a><span class="lineno"> 1193</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.g = value;</div>
<div class="line"><a id="l01194" name="l01194"></a><span class="lineno"> 1194</span>}</div>
<div class="line"><a id="l01195" name="l01195"></a><span class="lineno"> 1195</span> </div>
<div class="line"><a id="l01196" name="l01196"></a><span class="lineno"> 1196</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01197" name="l01197"></a><span class="lineno"> 1197</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01198" name="l01198"></a><span class="lineno"> 1198</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01199" name="l01199"></a><span class="lineno"> 1199</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01200" name="l01200"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa5ec9dbc278680c9cac446d24b4789fa"> 1200</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l01201" name="l01201"></a><span class="lineno"> 1201</span>  <span class="keyword">requires</span>(not std::is_same_v&lt;Input, void&gt;)</div>
<div class="line"><a id="l01202" name="l01202"></a><span class="lineno"> 1202</span>{</div>
<div class="line"><a id="l01203" name="l01203"></a><span class="lineno"> 1203</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.g = std::move(value);</div>
<div class="line"><a id="l01204" name="l01204"></a><span class="lineno"> 1204</span>}</div>
<div class="line"><a id="l01205" name="l01205"></a><span class="lineno"> 1205</span> </div>
<div class="line"><a id="l01206" name="l01206"></a><span class="lineno"> 1206</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01207" name="l01207"></a><span class="lineno"> 1207</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01208" name="l01208"></a><span class="lineno"> 1208</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01209" name="l01209"></a><span class="lineno"> 1209</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01210" name="l01210"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0043031a127353735e4a009b9bed93ba"> 1210</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> &amp;callable) {</div>
<div class="line"><a id="l01211" name="l01211"></a><span class="lineno"> 1211</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition_control_g = callable;</div>
<div class="line"><a id="l01212" name="l01212"></a><span class="lineno"> 1212</span>}</div>
<div class="line"><a id="l01213" name="l01213"></a><span class="lineno"> 1213</span> </div>
<div class="line"><a id="l01214" name="l01214"></a><span class="lineno"> 1214</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01215" name="l01215"></a><span class="lineno"> 1215</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01216" name="l01216"></a><span class="lineno"> 1216</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01217" name="l01217"></a><span class="lineno"> 1217</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01218" name="l01218"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6041e36f2f23b4fe8d667683cf316e1d"> 1218</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">::g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">transition_control_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01219" name="l01219"></a><span class="lineno"> 1219</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition_control_g = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01220" name="l01220"></a><span class="lineno"> 1220</span>}</div>
<div class="line"><a id="l01221" name="l01221"></a><span class="lineno"> 1221</span> </div>
<div class="line"><a id="l01222" name="l01222"></a><span class="lineno"> 1222</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01223" name="l01223"></a><span class="lineno"> 1223</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01224" name="l01224"></a><span class="lineno"> 1224</span>[[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l01225" name="l01225"></a><span class="lineno"> 1225</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01226" name="l01226"></a><span class="lineno"> 1226</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01227" name="l01227"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af21fc49da11cf3ea087f6e0b5601f82e"> 1227</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af21fc49da11cf3ea087f6e0b5601f82e">::k</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">gain</a> &amp; {</div>
<div class="line"><a id="l01228" name="l01228"></a><span class="lineno"> 1228</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.k;</div>
<div class="line"><a id="l01229" name="l01229"></a><span class="lineno"> 1229</span>}</div>
<div class="line"><a id="l01230" name="l01230"></a><span class="lineno"> 1230</span> </div>
<div class="line"><a id="l01231" name="l01231"></a><span class="lineno"> 1231</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01232" name="l01232"></a><span class="lineno"> 1232</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01233" name="l01233"></a><span class="lineno"> 1233</span>[[nodiscard(<span class="stringliteral">&quot;The returned innovation column vector Y is unexpectedly &quot;</span></div>
<div class="line"><a id="l01234" name="l01234"></a><span class="lineno"> 1234</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01235" name="l01235"></a><span class="lineno"> 1235</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01236" name="l01236"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#affc21b5672b9e24008ca0da21f81e79e"> 1236</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#affc21b5672b9e24008ca0da21f81e79e">::y</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">innovation</a> &amp; {</div>
<div class="line"><a id="l01237" name="l01237"></a><span class="lineno"> 1237</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.y;</div>
<div class="line"><a id="l01238" name="l01238"></a><span class="lineno"> 1238</span>}</div>
<div class="line"><a id="l01239" name="l01239"></a><span class="lineno"> 1239</span> </div>
<div class="line"><a id="l01240" name="l01240"></a><span class="lineno"> 1240</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01241" name="l01241"></a><span class="lineno"> 1241</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01242" name="l01242"></a><span class="lineno"> 1242</span>[[nodiscard(<span class="stringliteral">&quot;The returned innovation uncertainty matrix S is unexpectedly &quot;</span></div>
<div class="line"><a id="l01243" name="l01243"></a><span class="lineno"> 1243</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01244" name="l01244"></a><span class="lineno"> 1244</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01245" name="l01245"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7ac54f89db65b70bb013765b21e1dbe4"> 1245</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7ac54f89db65b70bb013765b21e1dbe4">::s</a>() const -&gt; const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">innovation_uncertainty</a> &amp; {</div>
<div class="line"><a id="l01246" name="l01246"></a><span class="lineno"> 1246</span>  <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.s;</div>
<div class="line"><a id="l01247" name="l01247"></a><span class="lineno"> 1247</span>}</div>
<div class="line"><a id="l01248" name="l01248"></a><span class="lineno"> 1248</span> </div>
<div class="line"><a id="l01249" name="l01249"></a><span class="lineno"> 1249</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01250" name="l01250"></a><span class="lineno"> 1250</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01251" name="l01251"></a><span class="lineno"> 1251</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01252" name="l01252"></a><span class="lineno"> 1252</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01253" name="l01253"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b"> 1253</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">::transition</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> &amp;callable) {</div>
<div class="line"><a id="l01254" name="l01254"></a><span class="lineno"> 1254</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition = callable;</div>
<div class="line"><a id="l01255" name="l01255"></a><span class="lineno"> 1255</span>}</div>
<div class="line"><a id="l01256" name="l01256"></a><span class="lineno"> 1256</span> </div>
<div class="line"><a id="l01257" name="l01257"></a><span class="lineno"> 1257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01258" name="l01258"></a><span class="lineno"> 1258</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01259" name="l01259"></a><span class="lineno"> 1259</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01260" name="l01260"></a><span class="lineno"> 1260</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01261" name="l01261"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a05c82bf48d3573e6d91d2708f6bef61c"> 1261</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">::transition</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">transition_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01262" name="l01262"></a><span class="lineno"> 1262</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.transition = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01263" name="l01263"></a><span class="lineno"> 1263</span>}</div>
<div class="line"><a id="l01264" name="l01264"></a><span class="lineno"> 1264</span> </div>
<div class="line"><a id="l01265" name="l01265"></a><span class="lineno"> 1265</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01266" name="l01266"></a><span class="lineno"> 1266</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01267" name="l01267"></a><span class="lineno"> 1267</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01268" name="l01268"></a><span class="lineno"> 1268</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01269" name="l01269"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f"> 1269</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">::observation</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> &amp;callable) {</div>
<div class="line"><a id="l01270" name="l01270"></a><span class="lineno"> 1270</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.observation = callable;</div>
<div class="line"><a id="l01271" name="l01271"></a><span class="lineno"> 1271</span>}</div>
<div class="line"><a id="l01272" name="l01272"></a><span class="lineno"> 1272</span> </div>
<div class="line"><a id="l01273" name="l01273"></a><span class="lineno"> 1273</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01274" name="l01274"></a><span class="lineno"> 1274</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01275" name="l01275"></a><span class="lineno"> 1275</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01276" name="l01276"></a><span class="lineno"> 1276</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01277" name="l01277"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae61382f728286fee1321c73f82311666"> 1277</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">::observation</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">observation_function</a> &amp;&amp;callable) {</div>
<div class="line"><a id="l01278" name="l01278"></a><span class="lineno"> 1278</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.observation = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01279" name="l01279"></a><span class="lineno"> 1279</span>}</div>
<div class="line"><a id="l01280" name="l01280"></a><span class="lineno"> 1280</span> </div>
<div class="line"><a id="l01281" name="l01281"></a><span class="lineno"> 1281</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01282" name="l01282"></a><span class="lineno"> 1282</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01283" name="l01283"></a><span class="lineno"> 1283</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01284" name="l01284"></a><span class="lineno"> 1284</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01285" name="l01285"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a86a8854b3ea278e4d743b72ffdbd35da"> 1285</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">::update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments) {</div>
<div class="line"><a id="l01286" name="l01286"></a><span class="lineno"> 1286</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.update(arguments...);</div>
<div class="line"><a id="l01287" name="l01287"></a><span class="lineno"> 1287</span>}</div>
<div class="line"><a id="l01288" name="l01288"></a><span class="lineno"> 1288</span> </div>
<div class="line"><a id="l01289" name="l01289"></a><span class="lineno"> 1289</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01290" name="l01290"></a><span class="lineno"> 1290</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01291" name="l01291"></a><span class="lineno"> 1291</span><span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Position&gt;</div>
<div class="line"><a id="l01292" name="l01292"></a><span class="lineno"> 1292</span>[[nodiscard(<span class="stringliteral">&quot;The returned update argument is unexpectedly &quot;</span></div>
<div class="line"><a id="l01293" name="l01293"></a><span class="lineno"> 1293</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01294" name="l01294"></a><span class="lineno"> 1294</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01295" name="l01295"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15"> 1295</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">::update</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a id="l01296" name="l01296"></a><span class="lineno"> 1296</span>  <span class="keywordflow">return</span> std::get&lt;Position&gt;(<a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.update_arguments);</div>
<div class="line"><a id="l01297" name="l01297"></a><span class="lineno"> 1297</span>}</div>
<div class="line"><a id="l01298" name="l01298"></a><span class="lineno"> 1298</span> </div>
<div class="line"><a id="l01299" name="l01299"></a><span class="lineno"> 1299</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01300" name="l01300"></a><span class="lineno"> 1300</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01301" name="l01301"></a><span class="lineno"> 1301</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01302" name="l01302"></a><span class="lineno"> 1302</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01303" name="l01303"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae7bb3ce73c9da11a9a694af0cc3306a3"> 1303</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">::predict</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments) {</div>
<div class="line"><a id="l01304" name="l01304"></a><span class="lineno"> 1304</span>  <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.predict(arguments...);</div>
<div class="line"><a id="l01305" name="l01305"></a><span class="lineno"> 1305</span>}</div>
<div class="line"><a id="l01306" name="l01306"></a><span class="lineno"> 1306</span> </div>
<div class="line"><a id="l01307" name="l01307"></a><span class="lineno"> 1307</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input, <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a id="l01308" name="l01308"></a><span class="lineno"> 1308</span>          <span class="keyword">typename</span> Divide, <span class="keyword">typename</span> UpdateTypes, <span class="keyword">typename</span> PredictionTypes&gt;</div>
<div class="line"><a id="l01309" name="l01309"></a><span class="lineno"> 1309</span><span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Position&gt;</div>
<div class="line"><a id="l01310" name="l01310"></a><span class="lineno"> 1310</span>[[nodiscard(<span class="stringliteral">&quot;The returned prediction argument is unexpectedly &quot;</span></div>
<div class="line"><a id="l01311" name="l01311"></a><span class="lineno"> 1311</span>            <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01312" name="l01312"></a><span class="lineno"> 1312</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;State, Output, Input, Transpose, Divide, UpdateTypes,</div>
<div class="line"><a id="l01313" name="l01313"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b"> 1313</a></span>       PredictionTypes&gt;<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">::predict</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a id="l01314" name="l01314"></a><span class="lineno"> 1314</span>  <span class="keywordflow">return</span> std::get&lt;Position&gt;(<a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">filter</a>.prediction_arguments);</div>
<div class="line"><a id="l01315" name="l01315"></a><span class="lineno"> 1315</span>}</div>
<div class="line"><a id="l01316" name="l01316"></a><span class="lineno"> 1316</span> </div>
<div class="line"><a id="l01317" name="l01317"></a><span class="lineno"> 1317</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01318" name="l01318"></a><span class="lineno"> 1318</span> </div>
<div class="line"><a id="l01319" name="l01319"></a><span class="lineno"> 1319</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">A generic Kalman filter for C++23.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00175">kalman.hpp:175</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0603b2fbc496974eda3caa9d39ef0731"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0603b2fbc496974eda3caa9d39ef0731">fcarouge::kalman::transition_control_function</a></div><div class="ttdeci">typename implementation::transition_control_function transition_control_function</div><div class="ttdoc">Type of the callable transition control function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00288">kalman.hpp:289</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a06c654a8d75eaaaab4482a9fead80187"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a06c654a8d75eaaaab4482a9fead80187">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00245">kalman.hpp:245</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a11beeb6cab8f8432000b6e67c6eaa71e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a11beeb6cab8f8432000b6e67c6eaa71e">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a125f4636d376d4fdd0cf92db7aae6f10"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a125f4636d376d4fdd0cf92db7aae6f10">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00242">kalman.hpp:242</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1425371fbd3285ef0b78b9a7d010247b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1425371fbd3285ef0b78b9a7d010247b">fcarouge::kalman::observation_function</a></div><div class="ttdeci">typename implementation::observation_function observation_function</div><div class="ttdoc">Type of the callable observation function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00301">kalman.hpp:301</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1c869ee500b1f931feb95d49c6314687"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1c869ee500b1f931feb95d49c6314687">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00251">kalman.hpp:252</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a220002b41b1231400e8b0011de61b4e0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a220002b41b1231400e8b0011de61b4e0">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00222">kalman.hpp:222</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2baa9fed523333011ca08b4b92fceb4f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2baa9fed523333011ca08b4b92fceb4f">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; const output_uncertainty &amp;</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01020">kalman.hpp:1020</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2d74fc12457e866dfce9df4f127aa753"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2d74fc12457e866dfce9df4f127aa753">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00214">kalman.hpp:214</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a340c6843cf9a87ace05832d1446589f7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a340c6843cf9a87ace05832d1446589f7">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00235">kalman.hpp:235</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a40369a818c9ba272b1b893cc42d9587c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a40369a818c9ba272b1b893cc42d9587c">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; const input_control &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01170">kalman.hpp:1170</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a47a081e9416ada1860bc6e5820747a64"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a47a081e9416ada1860bc6e5820747a64">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00195">kalman.hpp:195</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a49323cf447e32c5d9911092c9e3e9d3f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a49323cf447e32c5d9911092c9e3e9d3f">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const observation_function &amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01269">kalman.hpp:1269</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a528b43cecfa3be168239516a379a5222"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a528b43cecfa3be168239516a379a5222">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; const estimate_uncertainty &amp;</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00935">kalman.hpp:935</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a52dbec584c3e834290e8ee1f8a235f16"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a52dbec584c3e834290e8ee1f8a235f16">fcarouge::kalman::noise_process_function</a></div><div class="ttdeci">typename implementation::noise_process_function noise_process_function</div><div class="ttdoc">Type of the callable noise process function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00279">kalman.hpp:280</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a53684acbd027d64cb4a82eb5bd773148"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a53684acbd027d64cb4a82eb5bd773148">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00248">kalman.hpp:248</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a546f2e777f16d4802da6d2c18cd5cd2f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a546f2e777f16d4802da6d2c18cd5cd2f">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00225">kalman.hpp:225</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5690d55e85bd3288051257a480b5db15"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5690d55e85bd3288051257a480b5db15">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr auto update() const</div><div class="ttdoc">Returns the Nth update argument.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01295">kalman.hpp:1295</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5cc8f1c203695281194cecfa6c8bce0b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5cc8f1c203695281194cecfa6c8bce0b">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr auto predict() const</div><div class="ttdoc">Returns the Nth prediction argument.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01313">kalman.hpp:1313</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5f969610ca4969dba506e5b14a0b291e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5f969610ca4969dba506e5b14a0b291e">fcarouge::kalman::noise_observation_function</a></div><div class="ttdeci">typename implementation::noise_observation_function noise_observation_function</div><div class="ttdoc">Type of the callable noise observation function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00265">kalman.hpp:266</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6d0268717d97cd617bdd75f323b9c319"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6d0268717d97cd617bdd75f323b9c319">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a74cf51ab4ef3e943912eead375747a7d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a74cf51ab4ef3e943912eead375747a7d">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; const state_transition &amp;</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01070">kalman.hpp:1070</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a78e08dba6680ac9b8733d70bd8a7a4a1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a78e08dba6680ac9b8733d70bd8a7a4a1">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00219">kalman.hpp:219</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7ac54f89db65b70bb013765b21e1dbe4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7ac54f89db65b70bb013765b21e1dbe4">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; const innovation_uncertainty &amp;</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01245">kalman.hpp:1245</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8299091c438e6b3bf8d74341676cd7a7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8299091c438e6b3bf8d74341676cd7a7">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; const output_model &amp;</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01120">kalman.hpp:1120</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8ec2ec2747d100f3ce32cdff8ac70331"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8ec2ec2747d100f3ce32cdff8ac70331">fcarouge::kalman::implementation</a></div><div class="ttdeci">internal::kalman&lt; State, Output, Input, Transpose, Divide, internal::repack_t&lt; UpdateTypes &gt;, internal::repack_t&lt; PredictionTypes &gt; &gt; implementation</div><div class="ttdoc">Implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00184">kalman.hpp:187</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a985aba593edfa8e7c2ddd8448fe9b45b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a985aba593edfa8e7c2ddd8448fe9b45b">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const transition_function &amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01253">kalman.hpp:1253</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9b20129bf7970b824760af000fd901f1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9b20129bf7970b824760af000fd901f1">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa1c8d1fa8c597eca32684c1c43a373d5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa1c8d1fa8c597eca32684c1c43a373d5">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00230">kalman.hpp:230</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa318cdb8b688bfb78f82eaabe3bae59b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa318cdb8b688bfb78f82eaabe3bae59b">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; const state &amp;</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00865">kalman.hpp:865</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa5c66ac78173a64694fd9a75787d92ef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa5c66ac78173a64694fd9a75787d92ef">fcarouge::kalman::transition_function</a></div><div class="ttdeci">typename implementation::transition_function transition_function</div><div class="ttdoc">Type of the callable transition function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00295">kalman.hpp:295</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aabd868007b2b8ff65a4818b339a5bfc6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aabd868007b2b8ff65a4818b339a5bfc6">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; const input &amp;requires(not std::is_same_v&lt; Input, void &gt;)</div><div class="ttdoc">Returns the last control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00924">kalman.hpp:924</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab2f8cc075c0c78c6010808f375fd0983"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab2f8cc075c0c78c6010808f375fd0983">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; const output &amp;</div><div class="ttdoc">Returns the last observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00915">kalman.hpp:915</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abc64369462a3430c2823e5969c3e8a0e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abc64369462a3430c2823e5969c3e8a0e">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acdf7d5d62419ed3f7bcc55508df7dcbd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acdf7d5d62419ed3f7bcc55508df7dcbd">fcarouge::kalman::transition_state_function</a></div><div class="ttdeci">typename implementation::transition_state_function transition_state_function</div><div class="ttdoc">Type of the callable transition state function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00272">kalman.hpp:273</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad3b14be3534eb1c3a2d61b496bd0a7b5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad3b14be3534eb1c3a2d61b496bd0a7b5">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aee2bd9463c53248388d67f0182c23d8e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aee2bd9463c53248388d67f0182c23d8e">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00204">kalman.hpp:204</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af21fc49da11cf3ea087f6e0b5601f82e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af21fc49da11cf3ea087f6e0b5601f82e">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; const gain &amp;</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01227">kalman.hpp:1227</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af870815f3d1b904499971dbd766754f4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af870815f3d1b904499971dbd766754f4">fcarouge::kalman::observation_state_function</a></div><div class="ttdeci">typename implementation::observation_state_function observation_state_function</div><div class="ttdoc">Type of the callable observation state function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00258">kalman.hpp:259</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afaf3a50c0320573f44db0ac92fd9830c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afaf3a50c0320573f44db0ac92fd9830c">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aff08f3b6c981112f9f9f348b02dba322"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aff08f3b6c981112f9f9f348b02dba322">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00209">kalman.hpp:209</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aff11f578defd430076cb8a3a38584903"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aff11f578defd430076cb8a3a38584903">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; const process_uncertainty &amp;</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00970">kalman.hpp:970</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_affc21b5672b9e24008ca0da21f81e79e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#affc21b5672b9e24008ca0da21f81e79e">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; const innovation &amp;</div><div class="ttdoc">Returns the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01236">kalman.hpp:1236</a></div></div>
<div class="ttc" id="aformat_8hpp_xhtml"><div class="ttname"><a href="format_8hpp.xhtml">format.hpp</a></div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a6200288e83ea7493c432fcf77aca131d"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a6200288e83ea7493c432fcf77aca131d">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; State, Output, Input, transpose, divide, UpdateTypes, PredictionTypes &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00079">kalman.hpp:80</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a7af38f38950d3b3f6c0fdd598c68f2d4"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a7af38f38950d3b3f6c0fdd598c68f2d4">fcarouge::eigen::vector</a></div><div class="ttdeci">internal::vector&lt; Type, Size &gt; vector</div><div class="ttdoc">Convenience Eigen vector.</div><div class="ttdef"><b>Definition:</b> <a href="eigen_2kalman_8hpp_source.xhtml#l00064">kalman.hpp:64</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a567d18fbfbf6f8d1543bca57ba706f22"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">fcarouge::internal::repack_t</a></div><div class="ttdeci">typename repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00071">utility.hpp:71</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a990c3b3d2e7c4889c7f666cc8e82c503"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">fcarouge::internal::empty_pack</a></div><div class="ttdeci">pack&lt;&gt; empty_pack</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00059">utility.hpp:59</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:46</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa5a28afb4550bbcbd55d875351de6e27"><div class="ttname"><a href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a></div><div class="ttdeci">internal::pack&lt; Types... &gt; pack</div><div class="ttdoc">Convenience tuple-like pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00061">kalman.hpp:61</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_af07a5637ebbb4bd8c0244134151732ca"><div class="ttname"><a href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">fcarouge::empty_pack</a></div><div class="ttdeci">internal::empty_pack empty_pack</div><div class="ttdoc">Convenience tuple-like empty pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00058">kalman.hpp:58</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Fri Oct 21 2022 03:06:55 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.4 </li>
  </ul>
</div>
</body>
</html>
