<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="format_8hpp.xhtml">internal/format.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;cstddef&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml">   63</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1identity__matrix.xhtml">identity_matrix</a> {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">   70</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">operator()</a>() const noexcept</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    <span class="keywordflow">return</span> Type{ 1 };</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  }</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>};</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">   77</a></span><span class="keyword">using</span> <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a> = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">internal::empty_pack</a>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">   80</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using</span> <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> = <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">internal::pack</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    <span class="keyword">typename</span> Type = double, std::size_t State = 1, std::size_t Output = 1,</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    std::size_t Input = 0, <span class="keyword">typename</span> Transpose = std::identity,</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    <span class="keyword">typename</span> Symmetrize = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    <span class="keyword">typename</span> Identity = <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a>, <span class="keyword">typename</span> UpdateTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>,</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    <span class="keyword">typename</span> PredictionTypes = <a class="code hl_typedef" href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">empty_pack</a>&gt;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  183</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>{</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac91dc308c1db5ca073940ceba4803772">  193</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac91dc308c1db5ca073940ceba4803772">implementation</a> =</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#a19baaa3fe4523729db807408c3771dc3">internal::kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize,</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>                       Divide, Identity, <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;UpdateTypes&gt;</a>,</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;PredictionTypes&gt;</a>&gt;;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a834913552a216b3052aafd8d0646a2bb">  205</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a834913552a216b3052aafd8d0646a2bb">value_type</a> = <span class="keyword">typename</span> implementation::value_type;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">  208</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> = <span class="keyword">typename</span> implementation::state;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">  213</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">output</a> = <span class="keyword">typename</span> implementation::output;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">  218</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">input</a> = <span class="keyword">typename</span> implementation::input;</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">  223</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> = <span class="keyword">typename</span> implementation::estimate_uncertainty;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">  226</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> = <span class="keyword">typename</span> implementation::process_uncertainty;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">  229</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> = <span class="keyword">typename</span> implementation::output_uncertainty;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">  234</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> = <span class="keyword">typename</span> implementation::state_transition;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">  239</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> = <span class="keyword">typename</span> implementation::output_model;</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">  246</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> = <span class="keyword">typename</span> implementation::input_control;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">  249</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">gain</a> = <span class="keyword">typename</span> implementation::gain;</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">  252</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">innovation</a> = <span class="keyword">typename</span> implementation::innovation;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">  255</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>      <span class="keyword">typename</span> implementation::innovation_uncertainty;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">  266</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">  277</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">  289</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">  303</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">  319</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">  325</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state estimate column vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">  339</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a></div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>  {</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x;</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>  }</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span> </div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">  349</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">x</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> &amp;value)</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>  {</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = value;</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>  }</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">  359</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> &amp;&amp;value)</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  {</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(value);</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>  }</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span> </div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">  372</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  {</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a>{ value, values... });</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  }</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">  385</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">x</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  {</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>  }</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation column vector Z is unexpectedly &quot;</span></div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">  398</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">z</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">output</a></div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  {</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.z;</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  }</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control column vector U is unexpectedly &quot;</span></div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4e8688795cb6496256248a8aa3a1cc06">  412</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4e8688795cb6496256248a8aa3a1cc06">u</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">input</a> requires(Input &gt; 0)</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  {</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.u;</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  }</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span> </div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  [[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">  424</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a></div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  {</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p;</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>  }</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">  434</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">p</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>  {</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = value;</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  }</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span> </div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">  444</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>  {</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(value);</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>  }</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">  457</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">p</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>  {</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>  }</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span> </div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">  470</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">p</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>  {</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>                              std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>  }</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span> </div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>  [[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">  484</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">q</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a></div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>  {</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q;</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>  }</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span> </div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">  494</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>  {</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = value;</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>  }</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span> </div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">  504</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>  {</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(value);</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>  }</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span> </div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">  517</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>  {</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span>  }</div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span> </div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">  534</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">q</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>  {</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span>                             std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>  }</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span> </div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">  554</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span>  {</div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_process_q = callable;</div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span>  }</div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span> </div>
<div class="line"><a id="l00570" name="l00570"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">  570</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">q</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00571" name="l00571"></a><span class="lineno">  571</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00572" name="l00572"></a><span class="lineno">  572</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno">  573</span>  {</div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_process_q = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span>  }</div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span> </div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno">  586</span>              <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">  587</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">r</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a></div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span>  {</div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r;</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>  }</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span> </div>
<div class="line"><a id="l00597" name="l00597"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">  597</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00598" name="l00598"></a><span class="lineno">  598</span>  {</div>
<div class="line"><a id="l00599" name="l00599"></a><span class="lineno">  599</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = value;</div>
<div class="line"><a id="l00600" name="l00600"></a><span class="lineno">  600</span>  }</div>
<div class="line"><a id="l00601" name="l00601"></a><span class="lineno">  601</span> </div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">  607</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>  {</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(value);</div>
<div class="line"><a id="l00610" name="l00610"></a><span class="lineno">  610</span>  }</div>
<div class="line"><a id="l00611" name="l00611"></a><span class="lineno">  611</span> </div>
<div class="line"><a id="l00620" name="l00620"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">  620</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno">  621</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00623" name="l00623"></a><span class="lineno">  623</span>  {</div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span>  }</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span> </div>
<div class="line"><a id="l00635" name="l00635"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">  635</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">r</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00636" name="l00636"></a><span class="lineno">  636</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00637" name="l00637"></a><span class="lineno">  637</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00638" name="l00638"></a><span class="lineno">  638</span>  {</div>
<div class="line"><a id="l00639" name="l00639"></a><span class="lineno">  639</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(</div>
<div class="line"><a id="l00640" name="l00640"></a><span class="lineno">  640</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno">  641</span>                            std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno">  642</span>  }</div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span> </div>
<div class="line"><a id="l00655" name="l00655"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">  655</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00656" name="l00656"></a><span class="lineno">  656</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00657" name="l00657"></a><span class="lineno">  657</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00658" name="l00658"></a><span class="lineno">  658</span>  {</div>
<div class="line"><a id="l00659" name="l00659"></a><span class="lineno">  659</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_observation_r = callable;</div>
<div class="line"><a id="l00660" name="l00660"></a><span class="lineno">  660</span>  }</div>
<div class="line"><a id="l00661" name="l00661"></a><span class="lineno">  661</span> </div>
<div class="line"><a id="l00671" name="l00671"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">  671</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">r</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00672" name="l00672"></a><span class="lineno">  672</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00673" name="l00673"></a><span class="lineno">  673</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00674" name="l00674"></a><span class="lineno">  674</span>  {</div>
<div class="line"><a id="l00675" name="l00675"></a><span class="lineno">  675</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_observation_r = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00676" name="l00676"></a><span class="lineno">  676</span>  }</div>
<div class="line"><a id="l00677" name="l00677"></a><span class="lineno">  677</span> </div>
<div class="line"><a id="l00683" name="l00683"></a><span class="lineno">  683</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l00684" name="l00684"></a><span class="lineno">  684</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00685" name="l00685"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">  685</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">f</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a></div>
<div class="line"><a id="l00686" name="l00686"></a><span class="lineno">  686</span>  {</div>
<div class="line"><a id="l00687" name="l00687"></a><span class="lineno">  687</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f;</div>
<div class="line"><a id="l00688" name="l00688"></a><span class="lineno">  688</span>  }</div>
<div class="line"><a id="l00689" name="l00689"></a><span class="lineno">  689</span> </div>
<div class="line"><a id="l00695" name="l00695"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">  695</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> &amp;value)</div>
<div class="line"><a id="l00696" name="l00696"></a><span class="lineno">  696</span>  {</div>
<div class="line"><a id="l00697" name="l00697"></a><span class="lineno">  697</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = value;</div>
<div class="line"><a id="l00698" name="l00698"></a><span class="lineno">  698</span>  }</div>
<div class="line"><a id="l00699" name="l00699"></a><span class="lineno">  699</span> </div>
<div class="line"><a id="l00705" name="l00705"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">  705</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> &amp;&amp;value)</div>
<div class="line"><a id="l00706" name="l00706"></a><span class="lineno">  706</span>  {</div>
<div class="line"><a id="l00707" name="l00707"></a><span class="lineno">  707</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(value);</div>
<div class="line"><a id="l00708" name="l00708"></a><span class="lineno">  708</span>  }</div>
<div class="line"><a id="l00709" name="l00709"></a><span class="lineno">  709</span> </div>
<div class="line"><a id="l00718" name="l00718"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">  718</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00719" name="l00719"></a><span class="lineno">  719</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00720" name="l00720"></a><span class="lineno">  720</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00721" name="l00721"></a><span class="lineno">  721</span>  {</div>
<div class="line"><a id="l00722" name="l00722"></a><span class="lineno">  722</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a>{ value, values... });</div>
<div class="line"><a id="l00723" name="l00723"></a><span class="lineno">  723</span>  }</div>
<div class="line"><a id="l00724" name="l00724"></a><span class="lineno">  724</span> </div>
<div class="line"><a id="l00733" name="l00733"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">  733</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">f</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00734" name="l00734"></a><span class="lineno">  734</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00735" name="l00735"></a><span class="lineno">  735</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00736" name="l00736"></a><span class="lineno">  736</span>  {</div>
<div class="line"><a id="l00737" name="l00737"></a><span class="lineno">  737</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(</div>
<div class="line"><a id="l00738" name="l00738"></a><span class="lineno">  738</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00739" name="l00739"></a><span class="lineno">  739</span>                          std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00740" name="l00740"></a><span class="lineno">  740</span>  }</div>
<div class="line"><a id="l00741" name="l00741"></a><span class="lineno">  741</span> </div>
<div class="line"><a id="l00756" name="l00756"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">  756</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00757" name="l00757"></a><span class="lineno">  757</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00758" name="l00758"></a><span class="lineno">  758</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00759" name="l00759"></a><span class="lineno">  759</span>  {</div>
<div class="line"><a id="l00760" name="l00760"></a><span class="lineno">  760</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_state_f = callable;</div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno">  761</span>  }</div>
<div class="line"><a id="l00762" name="l00762"></a><span class="lineno">  762</span> </div>
<div class="line"><a id="l00777" name="l00777"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">  777</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">f</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00778" name="l00778"></a><span class="lineno">  778</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00779" name="l00779"></a><span class="lineno">  779</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00780" name="l00780"></a><span class="lineno">  780</span>  {</div>
<div class="line"><a id="l00781" name="l00781"></a><span class="lineno">  781</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_state_f = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00782" name="l00782"></a><span class="lineno">  782</span>  }</div>
<div class="line"><a id="l00783" name="l00783"></a><span class="lineno">  783</span> </div>
<div class="line"><a id="l00789" name="l00789"></a><span class="lineno">  789</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l00790" name="l00790"></a><span class="lineno">  790</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00791" name="l00791"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">  791</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">h</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a></div>
<div class="line"><a id="l00792" name="l00792"></a><span class="lineno">  792</span>  {</div>
<div class="line"><a id="l00793" name="l00793"></a><span class="lineno">  793</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h;</div>
<div class="line"><a id="l00794" name="l00794"></a><span class="lineno">  794</span>  }</div>
<div class="line"><a id="l00795" name="l00795"></a><span class="lineno">  795</span> </div>
<div class="line"><a id="l00801" name="l00801"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">  801</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> &amp;value)</div>
<div class="line"><a id="l00802" name="l00802"></a><span class="lineno">  802</span>  {</div>
<div class="line"><a id="l00803" name="l00803"></a><span class="lineno">  803</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = value;</div>
<div class="line"><a id="l00804" name="l00804"></a><span class="lineno">  804</span>  }</div>
<div class="line"><a id="l00805" name="l00805"></a><span class="lineno">  805</span> </div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">  811</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> &amp;&amp;value)</div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span>  {</div>
<div class="line"><a id="l00813" name="l00813"></a><span class="lineno">  813</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = std::move(value);</div>
<div class="line"><a id="l00814" name="l00814"></a><span class="lineno">  814</span>  }</div>
<div class="line"><a id="l00815" name="l00815"></a><span class="lineno">  815</span> </div>
<div class="line"><a id="l00824" name="l00824"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">  824</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00825" name="l00825"></a><span class="lineno">  825</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00826" name="l00826"></a><span class="lineno">  826</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00827" name="l00827"></a><span class="lineno">  827</span>  {</div>
<div class="line"><a id="l00828" name="l00828"></a><span class="lineno">  828</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a>{ value, values... });</div>
<div class="line"><a id="l00829" name="l00829"></a><span class="lineno">  829</span>  }</div>
<div class="line"><a id="l00830" name="l00830"></a><span class="lineno">  830</span> </div>
<div class="line"><a id="l00839" name="l00839"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">  839</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">h</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00840" name="l00840"></a><span class="lineno">  840</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00841" name="l00841"></a><span class="lineno">  841</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00842" name="l00842"></a><span class="lineno">  842</span>  {</div>
<div class="line"><a id="l00843" name="l00843"></a><span class="lineno">  843</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h =</div>
<div class="line"><a id="l00844" name="l00844"></a><span class="lineno">  844</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00845" name="l00845"></a><span class="lineno">  845</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00846" name="l00846"></a><span class="lineno">  846</span>  }</div>
<div class="line"><a id="l00847" name="l00847"></a><span class="lineno">  847</span> </div>
<div class="line"><a id="l00862" name="l00862"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">  862</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00863" name="l00863"></a><span class="lineno">  863</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno">  865</span>  {</div>
<div class="line"><a id="l00866" name="l00866"></a><span class="lineno">  866</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation_state_h = callable;</div>
<div class="line"><a id="l00867" name="l00867"></a><span class="lineno">  867</span>  }</div>
<div class="line"><a id="l00868" name="l00868"></a><span class="lineno">  868</span> </div>
<div class="line"><a id="l00883" name="l00883"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">  883</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">h</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00884" name="l00884"></a><span class="lineno">  884</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00885" name="l00885"></a><span class="lineno">  885</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00886" name="l00886"></a><span class="lineno">  886</span>  {</div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno">  887</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation_state_h = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00888" name="l00888"></a><span class="lineno">  888</span>  }</div>
<div class="line"><a id="l00889" name="l00889"></a><span class="lineno">  889</span> </div>
<div class="line"><a id="l00895" name="l00895"></a><span class="lineno">  895</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno">  896</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a72b44840d4c942a9b7674cd9dd89761b">  897</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a72b44840d4c942a9b7674cd9dd89761b">g</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> requires(Input &gt; 0)</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno">  898</span>  {</div>
<div class="line"><a id="l00899" name="l00899"></a><span class="lineno">  899</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g;</div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span>  }</div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span> </div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a967d4ee24618f18b92632a24285f9f76">  907</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a967d4ee24618f18b92632a24285f9f76">g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> &amp;value) <span class="keyword">requires</span>(Input &gt; 0)</div>
<div class="line"><a id="l00908" name="l00908"></a><span class="lineno">  908</span>  {</div>
<div class="line"><a id="l00909" name="l00909"></a><span class="lineno">  909</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = value;</div>
<div class="line"><a id="l00910" name="l00910"></a><span class="lineno">  910</span>  }</div>
<div class="line"><a id="l00911" name="l00911"></a><span class="lineno">  911</span> </div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a79c9fb87d4d5503c810fddaae873a17a">  917</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a79c9fb87d4d5503c810fddaae873a17a">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> &amp;&amp;value) <span class="keyword">requires</span>(Input &gt; 0)</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span>  {</div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = std::move(value);</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>  }</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span> </div>
<div class="line"><a id="l00930" name="l00930"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a43102d6dafa735dafd8ad636fd06115c">  930</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a43102d6dafa735dafd8ad636fd06115c">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno">  931</span>      Input &gt; 0 &amp;&amp; !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span>                       <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno">  933</span>                       std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span>  {</div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno">  935</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a>{ value, values... });</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>  }</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span> </div>
<div class="line"><a id="l00946" name="l00946"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0839017635f3387228b7872aa631b705">  946</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0839017635f3387228b7872aa631b705">g</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno">  947</span>      Input &gt; 0 &amp;&amp; !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno">  948</span>                       <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span>                       std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span>  {</div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g =</div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno">  953</span>                                 std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno">  954</span>  }</div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span> </div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad9cd0356b8d14e9ce68c386926c5d5d3">  965</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad9cd0356b8d14e9ce68c386926c5d5d3">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno">  966</span>      Input &gt; 0 &amp;&amp;</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno">  967</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno">  969</span>  {</div>
<div class="line"><a id="l00970" name="l00970"></a><span class="lineno">  970</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_control_g = callable;</div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno">  971</span>  }</div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno">  972</span> </div>
<div class="line"><a id="l00982" name="l00982"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae6e634a3e45c653ec5f33992b6b3bd4b">  982</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae6e634a3e45c653ec5f33992b6b3bd4b">g</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span>      Input &gt; 0 &amp;&amp;</div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno">  985</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno">  986</span>  {</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno">  987</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_control_g = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>  }</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span> </div>
<div class="line"><a id="l00995" name="l00995"></a><span class="lineno">  995</span>  [[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l00996" name="l00996"></a><span class="lineno">  996</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00997" name="l00997"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">  997</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">k</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">gain</a></div>
<div class="line"><a id="l00998" name="l00998"></a><span class="lineno">  998</span>  {</div>
<div class="line"><a id="l00999" name="l00999"></a><span class="lineno">  999</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.k;</div>
<div class="line"><a id="l01000" name="l01000"></a><span class="lineno"> 1000</span>  }</div>
<div class="line"><a id="l01001" name="l01001"></a><span class="lineno"> 1001</span> </div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"> 1007</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation column vector Y is unexpectedly &quot;</span></div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a"> 1009</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a">y</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">innovation</a></div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span>  {</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"> 1011</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.y;</div>
<div class="line"><a id="l01012" name="l01012"></a><span class="lineno"> 1012</span>  }</div>
<div class="line"><a id="l01013" name="l01013"></a><span class="lineno"> 1013</span> </div>
<div class="line"><a id="l01019" name="l01019"></a><span class="lineno"> 1019</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation uncertainty matrix S is unexpectedly &quot;</span></div>
<div class="line"><a id="l01020" name="l01020"></a><span class="lineno"> 1020</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563"> 1021</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563">s</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">innovation_uncertainty</a></div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span>  {</div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.s;</div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"> 1024</span>  }</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span> </div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df"> 1039</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df">transition</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"> 1040</span>  {</div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition = callable;</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"> 1042</span>  }</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span> </div>
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d"> 1057</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d">transition</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span>  {</div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span>  }</div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"> 1061</span> </div>
<div class="line"><a id="l01075" name="l01075"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a"> 1075</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a">observation</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01076" name="l01076"></a><span class="lineno"> 1076</span>  {</div>
<div class="line"><a id="l01077" name="l01077"></a><span class="lineno"> 1077</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation = callable;</div>
<div class="line"><a id="l01078" name="l01078"></a><span class="lineno"> 1078</span>  }</div>
<div class="line"><a id="l01079" name="l01079"></a><span class="lineno"> 1079</span> </div>
<div class="line"><a id="l01093" name="l01093"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021"> 1093</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021">observation</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01094" name="l01094"></a><span class="lineno"> 1094</span>  {</div>
<div class="line"><a id="l01095" name="l01095"></a><span class="lineno"> 1095</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01096" name="l01096"></a><span class="lineno"> 1096</span>  }</div>
<div class="line"><a id="l01097" name="l01097"></a><span class="lineno"> 1097</span> </div>
<div class="line"><a id="l01099" name="l01099"></a><span class="lineno"> 1099</span> </div>
<div class="line"><a id="l01102" name="l01102"></a><span class="lineno"> 1102</span> </div>
<div class="line"><a id="l01136" name="l01136"></a><span class="lineno"> 1136</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... InputTypes&gt;</div>
<div class="line"><a id="l01137" name="l01137"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734"> 1137</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734">operator()</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01138" name="l01138"></a><span class="lineno"> 1138</span>  {</div>
<div class="line"><a id="l01139" name="l01139"></a><span class="lineno"> 1139</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.template operator()&lt;InputTypes...&gt;(arguments...);</div>
<div class="line"><a id="l01140" name="l01140"></a><span class="lineno"> 1140</span>  }</div>
<div class="line"><a id="l01141" name="l01141"></a><span class="lineno"> 1141</span> </div>
<div class="line"><a id="l01159" name="l01159"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e"> 1159</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"> 1160</span>  {</div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"> 1161</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.update(arguments...);</div>
<div class="line"><a id="l01162" name="l01162"></a><span class="lineno"> 1162</span>  }</div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"> 1163</span> </div>
<div class="line"><a id="l01180" name="l01180"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53"> 1180</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">predict</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01181" name="l01181"></a><span class="lineno"> 1181</span>  {</div>
<div class="line"><a id="l01182" name="l01182"></a><span class="lineno"> 1182</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.predict(arguments...);</div>
<div class="line"><a id="l01183" name="l01183"></a><span class="lineno"> 1183</span>  }</div>
<div class="line"><a id="l01184" name="l01184"></a><span class="lineno"> 1184</span> </div>
<div class="line"><a id="l01186" name="l01186"></a><span class="lineno"> 1186</span> </div>
<div class="line"><a id="l01187" name="l01187"></a><span class="lineno"> 1187</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l01190" name="l01190"></a><span class="lineno"> 1190</span> </div>
<div class="line"><a id="l01192" name="l01192"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd"> 1192</a></span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac91dc308c1db5ca073940ceba4803772">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>;</div>
<div class="line"><a id="l01193" name="l01193"></a><span class="lineno"> 1193</span> </div>
<div class="line"><a id="l01195" name="l01195"></a><span class="lineno"> 1195</span>};</div>
<div class="line"><a id="l01196" name="l01196"></a><span class="lineno"> 1196</span> </div>
<div class="line"><a id="l01197" name="l01197"></a><span class="lineno"> 1197</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01198" name="l01198"></a><span class="lineno"> 1198</span> </div>
<div class="line"><a id="l01199" name="l01199"></a><span class="lineno"> 1199</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00183">kalman.hpp:184</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a00c6d53aab568dd3cc4571152db95259"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00484">kalman.hpp:484</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0839017635f3387228b7872aa631b705"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0839017635f3387228b7872aa631b705">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00946">kalman.hpp:946</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a154cbaed3f255ec32b08031b2de47feb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00339">kalman.hpp:339</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a183e35fba1627a3af01538b488e237c9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1bb6a28f6cbaa2261c6544ee7c742048"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00457">kalman.hpp:457</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2ec45f447d6d62484e5fb33984eb8429"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00570">kalman.hpp:570</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a309c42d18498494bc82ff7f35a94e176"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a321eca5e446f93eac94a25478967a27e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01159">kalman.hpp:1159</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a34031f643cc88ad51facb3777de765aa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00587">kalman.hpp:587</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3cc2d50409afb049780832d0c20d4a80"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00554">kalman.hpp:554</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3d6a0db13f620c9c8e201d1146e76ca7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00733">kalman.hpp:733</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a43102d6dafa735dafd8ad636fd06115c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a43102d6dafa735dafd8ad636fd06115c">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00930">kalman.hpp:930</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4b07e737006f154c24b14c2f6f435086"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(output_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00607">kalman.hpp:607</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4ba479d9fc5945d9b70e73231e47db36"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00718">kalman.hpp:718</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4e8688795cb6496256248a8aa3a1cc06"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4e8688795cb6496256248a8aa3a1cc06">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; input requires(Input &gt; 0)</div><div class="ttdoc">Returns the last control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00412">kalman.hpp:412</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a52e03adc57b1f3f293077ef688f155b6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00372">kalman.hpp:372</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a546e3b8fcd1880d3dd9a2b57c939d442"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00208">kalman.hpp:208</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5ec2f7b55fc8c6129b7bed3b203bf643"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const state_transition &amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00695">kalman.hpp:695</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a617b081df14bd8787306ecfc0bfeac63"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00635">kalman.hpp:635</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6199ad3f51d6a22231e698c5ca44c03f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00213">kalman.hpp:213</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6713091dfcd048c2193f67d1e2c5cb53"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01180">kalman.hpp:1180</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6b2bf4534f9e000c397390cfe1889021"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01093">kalman.hpp:1093</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6b7e91726edbc04dbdbc07f7c03e26fc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const estimate_uncertainty &amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00434">kalman.hpp:434</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6f6c8a881ebdc16f7cb1ec40c70f69c1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; output</div><div class="ttdoc">Returns the last observation column vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00398">kalman.hpp:398</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7116593d403257113ca6801086321e76"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00249">kalman.hpp:249</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7174015cd42360ccf03eee62ffde2378"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(process_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00504">kalman.hpp:504</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a72b44840d4c942a9b7674cd9dd89761b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a72b44840d4c942a9b7674cd9dd89761b">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control requires(Input &gt; 0)</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00897">kalman.hpp:897</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a736879575cc64e6aefbbd2cd9d0aa871"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(state &amp;&amp;value)</div><div class="ttdoc">Sets the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00359">kalman.hpp:359</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a741efe3cc185e5043a2fbeaebf87d75b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a74b6538274bf1a812d3dc130b455255d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00255">kalman.hpp:256</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a75f87c154718b0c55dc46254c18bc00e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00777">kalman.hpp:777</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a791753b3b6d9d97a1772736d4e545507"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00239">kalman.hpp:239</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a79bc98a5366156d2d70f99af11deb0ef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00756">kalman.hpp:756</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a79c9fb87d4d5503c810fddaae873a17a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a79c9fb87d4d5503c810fddaae873a17a">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(input_control &amp;&amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00917">kalman.hpp:917</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7bd4f95b389a30297d4db6975a879fe4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const process_uncertainty &amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00494">kalman.hpp:494</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a834913552a216b3052aafd8d0646a2bb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a834913552a216b3052aafd8d0646a2bb">fcarouge::kalman::value_type</a></div><div class="ttdeci">typename implementation::value_type value_type</div><div class="ttdoc">Type of the filter scalar data.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00205">kalman.hpp:205</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a85dfa2b7c0b14d4c30ac6d32192950df"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01039">kalman.hpp:1039</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8e08c701082cc8e64006777d478e3996"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00655">kalman.hpp:655</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a92874ec3ecb10ab906df5bdf434b7899"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control column vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00218">kalman.hpp:218</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a92d14c0efb4bdcb2ccb79d42703a90bf"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00517">kalman.hpp:517</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a938ef30cf92accd1f894295e641fd6f8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const output_uncertainty &amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00597">kalman.hpp:597</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a967d4ee24618f18b92632a24285f9f76"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a967d4ee24618f18b92632a24285f9f76">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const input_control &amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00907">kalman.hpp:907</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9b5ffd2e8909423a38e9df24e6cf119d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa20df32aefa13084aec1c030b76dd2d9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00862">kalman.hpp:862</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa5702b0eb84c2624d32cd92c00d79c4f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00791">kalman.hpp:791</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa7d4aabdff70198a9b48f8cb8f31fe3d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00883">kalman.hpp:883</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa8808beaa04f881b5eaace5e7c73b465"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00252">kalman.hpp:252</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aac004214bb38a41811941949857fac4a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; innovation</div><div class="ttdoc">Returns the innovation column vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01009">kalman.hpp:1009</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aadce185c0e8bf0097fa9e92769266a8d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00424">kalman.hpp:424</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab5a7ee90d052e7a79786c6bf2354d445"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const state &amp;value)</div><div class="ttdoc">Sets the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00349">kalman.hpp:349</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab5e36130dfdd20d31788e5888d94e899"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; gain</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00997">kalman.hpp:997</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab613b1870eeef157b0ffdaaebdbd4092"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(output_model &amp;&amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00811">kalman.hpp:811</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aba01a0145a12d7107f4cd570ebee2148"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00534">kalman.hpp:534</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abbdf0007fe1e36bba2cba6e7eaa8d4dd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01192">kalman.hpp:1192</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abeecd5f98be0e4fb04fcbd1fc6ecfe88"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00246">kalman.hpp:246</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac5e7a7f4918c45c66414ac864546295f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00824">kalman.hpp:824</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac91dc308c1db5ca073940ceba4803772"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac91dc308c1db5ca073940ceba4803772">fcarouge::kalman::implementation</a></div><div class="ttdeci">internal::kalman&lt; Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity, internal::repack_t&lt; UpdateTypes &gt;, internal::repack_t&lt; PredictionTypes &gt; &gt; implementation</div><div class="ttdoc">Implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00193">kalman.hpp:196</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acb3b1d04c231c1fa41b0dcea5beb09b0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00229">kalman.hpp:229</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acc88f8a63363cb5fe7533bfec3ee6011"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const output_model &amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00801">kalman.hpp:801</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad58f15facb009ca9a7088391687ef95d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01057">kalman.hpp:1057</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad6942765cdccf4d09fce412632f779b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad9cd0356b8d14e9ce68c386926c5d5d3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad9cd0356b8d14e9ce68c386926c5d5d3">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00965">kalman.hpp:965</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_adaaca0b4d2629296e4fc51c81e8e5563"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; innovation_uncertainty</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01021">kalman.hpp:1021</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_adc4b96d66f5f0c669a3399d6d57236cc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00620">kalman.hpp:620</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae02c51da28b27d3adbc8796ab5e3512a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01075">kalman.hpp:1075</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae6e634a3e45c653ec5f33992b6b3bd4b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae6e634a3e45c653ec5f33992b6b3bd4b">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00982">kalman.hpp:982</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae9228dd40c51d67ea70c1bb921d64250"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00671">kalman.hpp:671</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aef3503fc748a504e895bdd95a7ca6c1d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(estimate_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00444">kalman.hpp:444</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af21cbe2d0bc04f6dae8c1b6c02eb2833"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00470">kalman.hpp:470</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af374ab30a5a1a7eee7e5aaffa939c3bd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00685">kalman.hpp:685</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af3a40ed1445001249448f1eedaf330c1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af3c5d0d70a3c0426a0802fdd85e7eeef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00226">kalman.hpp:226</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af80601f5377d8e3cf9aba514ad2c0734"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734">fcarouge::kalman::operator()</a></div><div class="ttdeci">constexpr void operator()(const auto &amp;...arguments)</div><div class="ttdoc">Runs a step of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01137">kalman.hpp:1137</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af8d6f479798f305c207fdc67c07a2b5a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00223">kalman.hpp:223</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afaca19dbd315febb87fa494c37279a98"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state estimate column vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00385">kalman.hpp:385</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afae9e103ff365a53281f27028ff4a0ea"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00234">kalman.hpp:234</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afb59a5dc3ce7d7dc82c3615b0bc1a176"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00839">kalman.hpp:839</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afc434e5783a0200c0380e6765975bd6b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(state_transition &amp;&amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00705">kalman.hpp:705</a></div></div>
<div class="ttc" id="aformat_8hpp_xhtml"><div class="ttname"><a href="format_8hpp.xhtml">format.hpp</a></div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_a19baaa3fe4523729db807408c3771dc3"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#a19baaa3fe4523729db807408c3771dc3">fcarouge::eigen::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; Type, State, Output, Input, transpose, symmetrize, divide, identity_matrix, UpdateTypes, PredictionTypes &gt; kalman</div><div class="ttdoc">Eigen-based Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00074">kalman_eigen.hpp:76</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_ab99c4b80cb5488c202a697e056134bae"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">fcarouge::eigen::identity_matrix</a></div><div class="ttdeci">internal::identity_matrix identity_matrix</div><div class="ttdoc">Function object for providing an Eigen identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00061">kalman_eigen.hpp:61</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a567d18fbfbf6f8d1543bca57ba706f22"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">fcarouge::internal::repack_t</a></div><div class="ttdeci">typename repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00064">kalman.hpp:64</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a990c3b3d2e7c4889c7f666cc8e82c503"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">fcarouge::internal::empty_pack</a></div><div class="ttdeci">pack&lt;&gt; empty_pack</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00053">kalman.hpp:53</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="baseline_8cpp_source.xhtml#l00046">baseline.cpp:47</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa5a28afb4550bbcbd55d875351de6e27"><div class="ttname"><a href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a></div><div class="ttdeci">internal::pack&lt; Types... &gt; pack</div><div class="ttdoc">Convenience tuple-like pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00080">kalman.hpp:80</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_af07a5637ebbb4bd8c0244134151732ca"><div class="ttname"><a href="namespacefcarouge.xhtml#af07a5637ebbb4bd8c0244134151732ca">fcarouge::empty_pack</a></div><div class="ttdeci">internal::empty_pack empty_pack</div><div class="ttdoc">Convenience tuple-like empty pack type.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00077">kalman.hpp:77</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml">fcarouge::identity_matrix</a></div><div class="ttdoc">Function object for providing an identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml_a3bc3899543cf8c8e0b11afc1412cf087"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">fcarouge::identity_matrix::operator()</a></div><div class="ttdeci">constexpr auto operator()() const noexcept</div><div class="ttdoc">Returns 1, the 1-by-1 identity matrix equivalent.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00070">kalman.hpp:70</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Thu Aug 11 2022 01:45:30 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
