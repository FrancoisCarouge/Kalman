<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="format_8hpp.xhtml">internal/format.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;tuple&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml">   63</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1identity__matrix.xhtml">identity_matrix</a> {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">   70</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">operator()</a>() const noexcept</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    <span class="keywordflow">return</span> Type{ 1 };</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  }</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>};</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keyword">typename</span> Type = double, <span class="keyword">typename</span> State = Type, <span class="keyword">typename</span> Output = State,</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keyword">typename</span> Input = State, <span class="keyword">typename</span> Transpose = std::identity,</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="keyword">typename</span> Symmetrize = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    <span class="keyword">typename</span> Identity = <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a>, <span class="keyword">typename</span> UpdateTypes = std::tuple&lt;&gt;,</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    <span class="keyword">typename</span> PredictionTypes = std::tuple&lt;&gt;&gt;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  160</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>{</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a246dd53d4cbad22494cfe0e0307c334e">  170</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a246dd53d4cbad22494cfe0e0307c334e">implementation</a> =</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1eigen_1_1internal.xhtml#a41a6a60c1495641760e4ac1dfffca2b8">internal::kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>                       Identity, UpdateTypes, PredictionTypes&gt;;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a97467558f5082addc0661d58db3aa447">  181</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a97467558f5082addc0661d58db3aa447">value_type</a> = Type;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">  184</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> = <span class="keyword">typename</span> implementation::state;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">  189</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">output</a> = <span class="keyword">typename</span> implementation::output;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">  192</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">input</a> = <span class="keyword">typename</span> implementation::input;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">  197</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> = <span class="keyword">typename</span> implementation::estimate_uncertainty;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">  200</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> = <span class="keyword">typename</span> implementation::process_uncertainty;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">  203</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> = <span class="keyword">typename</span> implementation::output_uncertainty;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">  208</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> = <span class="keyword">typename</span> implementation::state_transition;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">  213</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> = <span class="keyword">typename</span> implementation::output_model;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">  218</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> = <span class="keyword">typename</span> implementation::input_control;</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">  221</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">gain</a> = <span class="keyword">typename</span> implementation::gain;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">  224</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">innovation</a> = <span class="keyword">typename</span> implementation::innovation;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">  227</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>      <span class="keyword">typename</span> implementation::innovation_uncertainty;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">  238</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">  249</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">  261</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">  275</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">  291</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">  297</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state estimate vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">  311</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">x</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a></div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  {</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x;</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  }</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">  321</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">x</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> &amp;value)</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  {</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = value;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>  }</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">  331</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a> &amp;&amp;value)</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>  {</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(value);</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>  }</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">  344</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  {</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a>{ value, values... });</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  }</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">  357</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">x</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>  {</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">state</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>  }</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span> </div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation vector Z is unexpectedly &quot;</span></div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">  370</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">z</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">output</a></div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>  {</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.z;</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  }</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control vector U is unexpectedly &quot;</span></div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a53562fa4b2be4d6d43f019642e99e735">  382</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a53562fa4b2be4d6d43f019642e99e735">u</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">input</a></div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  {</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.u;</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>  }</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span> </div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>  [[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">  394</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">p</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a></div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>  {</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p;</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  }</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">  404</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">p</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  {</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = value;</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  }</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">  414</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  {</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(value);</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>  }</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span> </div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">  427</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">p</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>  {</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>  }</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span> </div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">  440</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">p</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>  {</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.p = std::move(</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">estimate_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>                              std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>  }</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span> </div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>  [[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">  454</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">q</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a></div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>  {</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q;</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>  }</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">  464</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>  {</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = value;</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>  }</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span> </div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">  474</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>  {</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(value);</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>  }</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span> </div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">  487</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>  {</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>  }</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span> </div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">  504</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">q</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>  {</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.q = std::move(</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">process_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>                             std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span>  }</div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span> </div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">  524</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno">  525</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span>  {</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_process_q = callable;</div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>  }</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span> </div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">  540</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">q</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>  {</div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_process_q = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span>  }</div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span> </div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span>              <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">  557</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">r</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a></div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span>  {</div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r;</div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span>  }</div>
<div class="line"><a id="l00561" name="l00561"></a><span class="lineno">  561</span> </div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">  567</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00568" name="l00568"></a><span class="lineno">  568</span>  {</div>
<div class="line"><a id="l00569" name="l00569"></a><span class="lineno">  569</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = value;</div>
<div class="line"><a id="l00570" name="l00570"></a><span class="lineno">  570</span>  }</div>
<div class="line"><a id="l00571" name="l00571"></a><span class="lineno">  571</span> </div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">  577</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00578" name="l00578"></a><span class="lineno">  578</span>  {</div>
<div class="line"><a id="l00579" name="l00579"></a><span class="lineno">  579</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(value);</div>
<div class="line"><a id="l00580" name="l00580"></a><span class="lineno">  580</span>  }</div>
<div class="line"><a id="l00581" name="l00581"></a><span class="lineno">  581</span> </div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">  590</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00593" name="l00593"></a><span class="lineno">  593</span>  {</div>
<div class="line"><a id="l00594" name="l00594"></a><span class="lineno">  594</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00595" name="l00595"></a><span class="lineno">  595</span>  }</div>
<div class="line"><a id="l00596" name="l00596"></a><span class="lineno">  596</span> </div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">  605</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">r</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>  {</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.r = std::move(</div>
<div class="line"><a id="l00610" name="l00610"></a><span class="lineno">  610</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">output_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00611" name="l00611"></a><span class="lineno">  611</span>                            std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00612" name="l00612"></a><span class="lineno">  612</span>  }</div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span> </div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">  625</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00627" name="l00627"></a><span class="lineno">  627</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00628" name="l00628"></a><span class="lineno">  628</span>  {</div>
<div class="line"><a id="l00629" name="l00629"></a><span class="lineno">  629</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_observation_r = callable;</div>
<div class="line"><a id="l00630" name="l00630"></a><span class="lineno">  630</span>  }</div>
<div class="line"><a id="l00631" name="l00631"></a><span class="lineno">  631</span> </div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">  641</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">r</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno">  642</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00644" name="l00644"></a><span class="lineno">  644</span>  {</div>
<div class="line"><a id="l00645" name="l00645"></a><span class="lineno">  645</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.noise_observation_r = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00646" name="l00646"></a><span class="lineno">  646</span>  }</div>
<div class="line"><a id="l00647" name="l00647"></a><span class="lineno">  647</span> </div>
<div class="line"><a id="l00653" name="l00653"></a><span class="lineno">  653</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l00654" name="l00654"></a><span class="lineno">  654</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00655" name="l00655"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">  655</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">f</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a></div>
<div class="line"><a id="l00656" name="l00656"></a><span class="lineno">  656</span>  {</div>
<div class="line"><a id="l00657" name="l00657"></a><span class="lineno">  657</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f;</div>
<div class="line"><a id="l00658" name="l00658"></a><span class="lineno">  658</span>  }</div>
<div class="line"><a id="l00659" name="l00659"></a><span class="lineno">  659</span> </div>
<div class="line"><a id="l00665" name="l00665"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">  665</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> &amp;value)</div>
<div class="line"><a id="l00666" name="l00666"></a><span class="lineno">  666</span>  {</div>
<div class="line"><a id="l00667" name="l00667"></a><span class="lineno">  667</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = value;</div>
<div class="line"><a id="l00668" name="l00668"></a><span class="lineno">  668</span>  }</div>
<div class="line"><a id="l00669" name="l00669"></a><span class="lineno">  669</span> </div>
<div class="line"><a id="l00675" name="l00675"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">  675</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a> &amp;&amp;value)</div>
<div class="line"><a id="l00676" name="l00676"></a><span class="lineno">  676</span>  {</div>
<div class="line"><a id="l00677" name="l00677"></a><span class="lineno">  677</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(value);</div>
<div class="line"><a id="l00678" name="l00678"></a><span class="lineno">  678</span>  }</div>
<div class="line"><a id="l00679" name="l00679"></a><span class="lineno">  679</span> </div>
<div class="line"><a id="l00688" name="l00688"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">  688</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00689" name="l00689"></a><span class="lineno">  689</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00690" name="l00690"></a><span class="lineno">  690</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00691" name="l00691"></a><span class="lineno">  691</span>  {</div>
<div class="line"><a id="l00692" name="l00692"></a><span class="lineno">  692</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a>{ value, values... });</div>
<div class="line"><a id="l00693" name="l00693"></a><span class="lineno">  693</span>  }</div>
<div class="line"><a id="l00694" name="l00694"></a><span class="lineno">  694</span> </div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">  703</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">f</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00705" name="l00705"></a><span class="lineno">  705</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00706" name="l00706"></a><span class="lineno">  706</span>  {</div>
<div class="line"><a id="l00707" name="l00707"></a><span class="lineno">  707</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.f = std::move(</div>
<div class="line"><a id="l00708" name="l00708"></a><span class="lineno">  708</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">state_transition</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00709" name="l00709"></a><span class="lineno">  709</span>                          std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00710" name="l00710"></a><span class="lineno">  710</span>  }</div>
<div class="line"><a id="l00711" name="l00711"></a><span class="lineno">  711</span> </div>
<div class="line"><a id="l00726" name="l00726"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">  726</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00727" name="l00727"></a><span class="lineno">  727</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00728" name="l00728"></a><span class="lineno">  728</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00729" name="l00729"></a><span class="lineno">  729</span>  {</div>
<div class="line"><a id="l00730" name="l00730"></a><span class="lineno">  730</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_state_f = callable;</div>
<div class="line"><a id="l00731" name="l00731"></a><span class="lineno">  731</span>  }</div>
<div class="line"><a id="l00732" name="l00732"></a><span class="lineno">  732</span> </div>
<div class="line"><a id="l00747" name="l00747"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">  747</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">f</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00748" name="l00748"></a><span class="lineno">  748</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00749" name="l00749"></a><span class="lineno">  749</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00750" name="l00750"></a><span class="lineno">  750</span>  {</div>
<div class="line"><a id="l00751" name="l00751"></a><span class="lineno">  751</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_state_f = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00752" name="l00752"></a><span class="lineno">  752</span>  }</div>
<div class="line"><a id="l00753" name="l00753"></a><span class="lineno">  753</span> </div>
<div class="line"><a id="l00759" name="l00759"></a><span class="lineno">  759</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l00760" name="l00760"></a><span class="lineno">  760</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">  761</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">h</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a></div>
<div class="line"><a id="l00762" name="l00762"></a><span class="lineno">  762</span>  {</div>
<div class="line"><a id="l00763" name="l00763"></a><span class="lineno">  763</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h;</div>
<div class="line"><a id="l00764" name="l00764"></a><span class="lineno">  764</span>  }</div>
<div class="line"><a id="l00765" name="l00765"></a><span class="lineno">  765</span> </div>
<div class="line"><a id="l00771" name="l00771"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">  771</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> &amp;value)</div>
<div class="line"><a id="l00772" name="l00772"></a><span class="lineno">  772</span>  {</div>
<div class="line"><a id="l00773" name="l00773"></a><span class="lineno">  773</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = value;</div>
<div class="line"><a id="l00774" name="l00774"></a><span class="lineno">  774</span>  }</div>
<div class="line"><a id="l00775" name="l00775"></a><span class="lineno">  775</span> </div>
<div class="line"><a id="l00781" name="l00781"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">  781</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a> &amp;&amp;value)</div>
<div class="line"><a id="l00782" name="l00782"></a><span class="lineno">  782</span>  {</div>
<div class="line"><a id="l00783" name="l00783"></a><span class="lineno">  783</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = std::move(value);</div>
<div class="line"><a id="l00784" name="l00784"></a><span class="lineno">  784</span>  }</div>
<div class="line"><a id="l00785" name="l00785"></a><span class="lineno">  785</span> </div>
<div class="line"><a id="l00794" name="l00794"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">  794</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00795" name="l00795"></a><span class="lineno">  795</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00796" name="l00796"></a><span class="lineno">  796</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00797" name="l00797"></a><span class="lineno">  797</span>  {</div>
<div class="line"><a id="l00798" name="l00798"></a><span class="lineno">  798</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a>{ value, values... });</div>
<div class="line"><a id="l00799" name="l00799"></a><span class="lineno">  799</span>  }</div>
<div class="line"><a id="l00800" name="l00800"></a><span class="lineno">  800</span> </div>
<div class="line"><a id="l00809" name="l00809"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">  809</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">h</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno">  810</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno">  811</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span>  {</div>
<div class="line"><a id="l00813" name="l00813"></a><span class="lineno">  813</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.h =</div>
<div class="line"><a id="l00814" name="l00814"></a><span class="lineno">  814</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">output_model</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00815" name="l00815"></a><span class="lineno">  815</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00816" name="l00816"></a><span class="lineno">  816</span>  }</div>
<div class="line"><a id="l00817" name="l00817"></a><span class="lineno">  817</span> </div>
<div class="line"><a id="l00832" name="l00832"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">  832</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00833" name="l00833"></a><span class="lineno">  833</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00834" name="l00834"></a><span class="lineno">  834</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00835" name="l00835"></a><span class="lineno">  835</span>  {</div>
<div class="line"><a id="l00836" name="l00836"></a><span class="lineno">  836</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation_state_h = callable;</div>
<div class="line"><a id="l00837" name="l00837"></a><span class="lineno">  837</span>  }</div>
<div class="line"><a id="l00838" name="l00838"></a><span class="lineno">  838</span> </div>
<div class="line"><a id="l00853" name="l00853"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">  853</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">h</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00854" name="l00854"></a><span class="lineno">  854</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00855" name="l00855"></a><span class="lineno">  855</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00856" name="l00856"></a><span class="lineno">  856</span>  {</div>
<div class="line"><a id="l00857" name="l00857"></a><span class="lineno">  857</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation_state_h = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00858" name="l00858"></a><span class="lineno">  858</span>  }</div>
<div class="line"><a id="l00859" name="l00859"></a><span class="lineno">  859</span> </div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno">  865</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l00866" name="l00866"></a><span class="lineno">  866</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00867" name="l00867"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acfd95771566862774f497a6f4f8abd3a">  867</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acfd95771566862774f497a6f4f8abd3a">g</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a></div>
<div class="line"><a id="l00868" name="l00868"></a><span class="lineno">  868</span>  {</div>
<div class="line"><a id="l00869" name="l00869"></a><span class="lineno">  869</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g;</div>
<div class="line"><a id="l00870" name="l00870"></a><span class="lineno">  870</span>  }</div>
<div class="line"><a id="l00871" name="l00871"></a><span class="lineno">  871</span> </div>
<div class="line"><a id="l00877" name="l00877"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aeea0fa495c33bafae4b13606134b5423">  877</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aeea0fa495c33bafae4b13606134b5423">g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> &amp;value)</div>
<div class="line"><a id="l00878" name="l00878"></a><span class="lineno">  878</span>  {</div>
<div class="line"><a id="l00879" name="l00879"></a><span class="lineno">  879</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = value;</div>
<div class="line"><a id="l00880" name="l00880"></a><span class="lineno">  880</span>  }</div>
<div class="line"><a id="l00881" name="l00881"></a><span class="lineno">  881</span> </div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae7190992c2ee81bff829b59a49b17b81">  887</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae7190992c2ee81bff829b59a49b17b81">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l00888" name="l00888"></a><span class="lineno">  888</span>  {</div>
<div class="line"><a id="l00889" name="l00889"></a><span class="lineno">  889</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = std::move(value);</div>
<div class="line"><a id="l00890" name="l00890"></a><span class="lineno">  890</span>  }</div>
<div class="line"><a id="l00891" name="l00891"></a><span class="lineno">  891</span> </div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a564b5b2ba630638f6020991a70d5ecff">  900</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a564b5b2ba630638f6020991a70d5ecff">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span>      !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00902" name="l00902"></a><span class="lineno">  902</span>          <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00903" name="l00903"></a><span class="lineno">  903</span>          std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00904" name="l00904"></a><span class="lineno">  904</span>  {</div>
<div class="line"><a id="l00905" name="l00905"></a><span class="lineno">  905</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a>{ value, values... });</div>
<div class="line"><a id="l00906" name="l00906"></a><span class="lineno">  906</span>  }</div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno">  907</span> </div>
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab4ebaa3c866c2f057d7559a1ed5a1cec">  916</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab4ebaa3c866c2f057d7559a1ed5a1cec">g</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>      !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span>          <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span>          std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>  {</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.g =</div>
<div class="line"><a id="l00922" name="l00922"></a><span class="lineno">  922</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">input_control</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00923" name="l00923"></a><span class="lineno">  923</span>                                 std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00924" name="l00924"></a><span class="lineno">  924</span>  }</div>
<div class="line"><a id="l00925" name="l00925"></a><span class="lineno">  925</span> </div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9a4599f06657a0d81c132609398af9dc">  935</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9a4599f06657a0d81c132609398af9dc">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00938" name="l00938"></a><span class="lineno">  938</span>  {</div>
<div class="line"><a id="l00939" name="l00939"></a><span class="lineno">  939</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_control_g = callable;</div>
<div class="line"><a id="l00940" name="l00940"></a><span class="lineno">  940</span>  }</div>
<div class="line"><a id="l00941" name="l00941"></a><span class="lineno">  941</span> </div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0fafd6538d978628c250ddf366fadaa7">  951</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0fafd6538d978628c250ddf366fadaa7">g</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno">  953</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno">  954</span>  {</div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition_control_g = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00956" name="l00956"></a><span class="lineno">  956</span>  }</div>
<div class="line"><a id="l00957" name="l00957"></a><span class="lineno">  957</span> </div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>  [[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">  965</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">k</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">gain</a></div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno">  966</span>  {</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno">  967</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.k;</div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span>  }</div>
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno">  969</span> </div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation vector Y is unexpectedly &quot;</span></div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno">  976</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a">  977</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a">y</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">innovation</a></div>
<div class="line"><a id="l00978" name="l00978"></a><span class="lineno">  978</span>  {</div>
<div class="line"><a id="l00979" name="l00979"></a><span class="lineno">  979</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.y;</div>
<div class="line"><a id="l00980" name="l00980"></a><span class="lineno">  980</span>  }</div>
<div class="line"><a id="l00981" name="l00981"></a><span class="lineno">  981</span> </div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno">  987</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation uncertainty matrix S is unexpectedly &quot;</span></div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563">  989</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563">s</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">innovation_uncertainty</a></div>
<div class="line"><a id="l00990" name="l00990"></a><span class="lineno">  990</span>  {</div>
<div class="line"><a id="l00991" name="l00991"></a><span class="lineno">  991</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.s;</div>
<div class="line"><a id="l00992" name="l00992"></a><span class="lineno">  992</span>  }</div>
<div class="line"><a id="l00993" name="l00993"></a><span class="lineno">  993</span> </div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df"> 1007</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df">transition</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span>  {</div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"> 1009</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition = callable;</div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span>  }</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"> 1011</span> </div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d"> 1025</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d">transition</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01026" name="l01026"></a><span class="lineno"> 1026</span>  {</div>
<div class="line"><a id="l01027" name="l01027"></a><span class="lineno"> 1027</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.transition = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01028" name="l01028"></a><span class="lineno"> 1028</span>  }</div>
<div class="line"><a id="l01029" name="l01029"></a><span class="lineno"> 1029</span> </div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a"> 1043</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a">observation</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01044" name="l01044"></a><span class="lineno"> 1044</span>  {</div>
<div class="line"><a id="l01045" name="l01045"></a><span class="lineno"> 1045</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation = callable;</div>
<div class="line"><a id="l01046" name="l01046"></a><span class="lineno"> 1046</span>  }</div>
<div class="line"><a id="l01047" name="l01047"></a><span class="lineno"> 1047</span> </div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021"> 1061</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021">observation</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01062" name="l01062"></a><span class="lineno"> 1062</span>  {</div>
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"> 1063</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.observation = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01064" name="l01064"></a><span class="lineno"> 1064</span>  }</div>
<div class="line"><a id="l01065" name="l01065"></a><span class="lineno"> 1065</span> </div>
<div class="line"><a id="l01067" name="l01067"></a><span class="lineno"> 1067</span> </div>
<div class="line"><a id="l01070" name="l01070"></a><span class="lineno"> 1070</span> </div>
<div class="line"><a id="l01104" name="l01104"></a><span class="lineno"> 1104</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... InputTypes&gt;</div>
<div class="line"><a id="l01105" name="l01105"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734"> 1105</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734">operator()</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01106" name="l01106"></a><span class="lineno"> 1106</span>  {</div>
<div class="line"><a id="l01107" name="l01107"></a><span class="lineno"> 1107</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.template operator()&lt;InputTypes...&gt;(arguments...);</div>
<div class="line"><a id="l01108" name="l01108"></a><span class="lineno"> 1108</span>  }</div>
<div class="line"><a id="l01109" name="l01109"></a><span class="lineno"> 1109</span> </div>
<div class="line"><a id="l01127" name="l01127"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e"> 1127</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01128" name="l01128"></a><span class="lineno"> 1128</span>  {</div>
<div class="line"><a id="l01129" name="l01129"></a><span class="lineno"> 1129</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.update(arguments...);</div>
<div class="line"><a id="l01130" name="l01130"></a><span class="lineno"> 1130</span>  }</div>
<div class="line"><a id="l01131" name="l01131"></a><span class="lineno"> 1131</span> </div>
<div class="line"><a id="l01148" name="l01148"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53"> 1148</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">predict</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01149" name="l01149"></a><span class="lineno"> 1149</span>  {</div>
<div class="line"><a id="l01150" name="l01150"></a><span class="lineno"> 1150</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>.predict(arguments...);</div>
<div class="line"><a id="l01151" name="l01151"></a><span class="lineno"> 1151</span>  }</div>
<div class="line"><a id="l01152" name="l01152"></a><span class="lineno"> 1152</span> </div>
<div class="line"><a id="l01154" name="l01154"></a><span class="lineno"> 1154</span> </div>
<div class="line"><a id="l01155" name="l01155"></a><span class="lineno"> 1155</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l01158" name="l01158"></a><span class="lineno"> 1158</span> </div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd"> 1160</a></span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a246dd53d4cbad22494cfe0e0307c334e">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">filter</a>;</div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"> 1161</span> </div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"> 1163</span>};</div>
<div class="line"><a id="l01164" name="l01164"></a><span class="lineno"> 1164</span> </div>
<div class="line"><a id="l01165" name="l01165"></a><span class="lineno"> 1165</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01166" name="l01166"></a><span class="lineno"> 1166</span> </div>
<div class="line"><a id="l01167" name="l01167"></a><span class="lineno"> 1167</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00160">kalman.hpp:161</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a00c6d53aab568dd3cc4571152db95259"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a00c6d53aab568dd3cc4571152db95259">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00454">kalman.hpp:454</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0fafd6538d978628c250ddf366fadaa7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0fafd6538d978628c250ddf366fadaa7">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00951">kalman.hpp:951</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a154cbaed3f255ec32b08031b2de47feb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a154cbaed3f255ec32b08031b2de47feb">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00311">kalman.hpp:311</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a183e35fba1627a3af01538b488e237c9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a183e35fba1627a3af01538b488e237c9">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1bb6a28f6cbaa2261c6544ee7c742048"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1bb6a28f6cbaa2261c6544ee7c742048">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00427">kalman.hpp:427</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a246dd53d4cbad22494cfe0e0307c334e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a246dd53d4cbad22494cfe0e0307c334e">fcarouge::kalman::implementation</a></div><div class="ttdeci">internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, UpdateTypes, PredictionTypes &gt; implementation</div><div class="ttdoc">Implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00170">kalman.hpp:172</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2ec45f447d6d62484e5fb33984eb8429"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2ec45f447d6d62484e5fb33984eb8429">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00540">kalman.hpp:540</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a309c42d18498494bc82ff7f35a94e176"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a309c42d18498494bc82ff7f35a94e176">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a321eca5e446f93eac94a25478967a27e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a321eca5e446f93eac94a25478967a27e">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01127">kalman.hpp:1127</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a34031f643cc88ad51facb3777de765aa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a34031f643cc88ad51facb3777de765aa">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00557">kalman.hpp:557</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3cc2d50409afb049780832d0c20d4a80"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3cc2d50409afb049780832d0c20d4a80">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00524">kalman.hpp:524</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3d6a0db13f620c9c8e201d1146e76ca7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3d6a0db13f620c9c8e201d1146e76ca7">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00703">kalman.hpp:703</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4b07e737006f154c24b14c2f6f435086"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4b07e737006f154c24b14c2f6f435086">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(output_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00577">kalman.hpp:577</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4ba479d9fc5945d9b70e73231e47db36"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4ba479d9fc5945d9b70e73231e47db36">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00688">kalman.hpp:688</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a52e03adc57b1f3f293077ef688f155b6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a52e03adc57b1f3f293077ef688f155b6">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00344">kalman.hpp:344</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a53562fa4b2be4d6d43f019642e99e735"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a53562fa4b2be4d6d43f019642e99e735">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; input</div><div class="ttdoc">Returns the last control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00382">kalman.hpp:382</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a546e3b8fcd1880d3dd9a2b57c939d442"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a546e3b8fcd1880d3dd9a2b57c939d442">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00184">kalman.hpp:184</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a564b5b2ba630638f6020991a70d5ecff"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a564b5b2ba630638f6020991a70d5ecff">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00900">kalman.hpp:900</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5ec2f7b55fc8c6129b7bed3b203bf643"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5ec2f7b55fc8c6129b7bed3b203bf643">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const state_transition &amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00665">kalman.hpp:665</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a617b081df14bd8787306ecfc0bfeac63"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a617b081df14bd8787306ecfc0bfeac63">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00605">kalman.hpp:605</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6199ad3f51d6a22231e698c5ca44c03f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6199ad3f51d6a22231e698c5ca44c03f">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00189">kalman.hpp:189</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6713091dfcd048c2193f67d1e2c5cb53"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6713091dfcd048c2193f67d1e2c5cb53">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01148">kalman.hpp:1148</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6b2bf4534f9e000c397390cfe1889021"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6b2bf4534f9e000c397390cfe1889021">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01061">kalman.hpp:1061</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6b7e91726edbc04dbdbc07f7c03e26fc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6b7e91726edbc04dbdbc07f7c03e26fc">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const estimate_uncertainty &amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00404">kalman.hpp:404</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6f6c8a881ebdc16f7cb1ec40c70f69c1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6f6c8a881ebdc16f7cb1ec40c70f69c1">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; output</div><div class="ttdoc">Returns the last observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00370">kalman.hpp:370</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7116593d403257113ca6801086321e76"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7116593d403257113ca6801086321e76">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00221">kalman.hpp:221</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7174015cd42360ccf03eee62ffde2378"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7174015cd42360ccf03eee62ffde2378">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(process_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00474">kalman.hpp:474</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a736879575cc64e6aefbbd2cd9d0aa871"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a736879575cc64e6aefbbd2cd9d0aa871">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(state &amp;&amp;value)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00331">kalman.hpp:331</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a741efe3cc185e5043a2fbeaebf87d75b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a741efe3cc185e5043a2fbeaebf87d75b">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a74b6538274bf1a812d3dc130b455255d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a74b6538274bf1a812d3dc130b455255d">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00227">kalman.hpp:228</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a75f87c154718b0c55dc46254c18bc00e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a75f87c154718b0c55dc46254c18bc00e">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00747">kalman.hpp:747</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a791753b3b6d9d97a1772736d4e545507"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a791753b3b6d9d97a1772736d4e545507">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00213">kalman.hpp:213</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a79bc98a5366156d2d70f99af11deb0ef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a79bc98a5366156d2d70f99af11deb0ef">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00726">kalman.hpp:726</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7bd4f95b389a30297d4db6975a879fe4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7bd4f95b389a30297d4db6975a879fe4">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const process_uncertainty &amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00464">kalman.hpp:464</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a85dfa2b7c0b14d4c30ac6d32192950df"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a85dfa2b7c0b14d4c30ac6d32192950df">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01007">kalman.hpp:1007</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8e08c701082cc8e64006777d478e3996"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8e08c701082cc8e64006777d478e3996">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00625">kalman.hpp:625</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a92874ec3ecb10ab906df5bdf434b7899"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a92874ec3ecb10ab906df5bdf434b7899">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00192">kalman.hpp:192</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a92d14c0efb4bdcb2ccb79d42703a90bf"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a92d14c0efb4bdcb2ccb79d42703a90bf">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00487">kalman.hpp:487</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a938ef30cf92accd1f894295e641fd6f8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a938ef30cf92accd1f894295e641fd6f8">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const output_uncertainty &amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00567">kalman.hpp:567</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a97467558f5082addc0661d58db3aa447"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a97467558f5082addc0661d58db3aa447">fcarouge::kalman::value_type</a></div><div class="ttdeci">Type value_type</div><div class="ttdoc">The type of the filtered data elements.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00181">kalman.hpp:181</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9a4599f06657a0d81c132609398af9dc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9a4599f06657a0d81c132609398af9dc">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00935">kalman.hpp:935</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9b5ffd2e8909423a38e9df24e6cf119d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9b5ffd2e8909423a38e9df24e6cf119d">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa20df32aefa13084aec1c030b76dd2d9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa20df32aefa13084aec1c030b76dd2d9">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00832">kalman.hpp:832</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa5702b0eb84c2624d32cd92c00d79c4f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa5702b0eb84c2624d32cd92c00d79c4f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00761">kalman.hpp:761</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa7d4aabdff70198a9b48f8cb8f31fe3d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa7d4aabdff70198a9b48f8cb8f31fe3d">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00853">kalman.hpp:853</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa8808beaa04f881b5eaace5e7c73b465"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa8808beaa04f881b5eaace5e7c73b465">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00224">kalman.hpp:224</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aac004214bb38a41811941949857fac4a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aac004214bb38a41811941949857fac4a">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; innovation</div><div class="ttdoc">Returns the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00977">kalman.hpp:977</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aadce185c0e8bf0097fa9e92769266a8d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aadce185c0e8bf0097fa9e92769266a8d">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00394">kalman.hpp:394</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab4ebaa3c866c2f057d7559a1ed5a1cec"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab4ebaa3c866c2f057d7559a1ed5a1cec">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00916">kalman.hpp:916</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab5a7ee90d052e7a79786c6bf2354d445"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab5a7ee90d052e7a79786c6bf2354d445">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const state &amp;value)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00321">kalman.hpp:321</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab5e36130dfdd20d31788e5888d94e899"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab5e36130dfdd20d31788e5888d94e899">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; gain</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00965">kalman.hpp:965</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab613b1870eeef157b0ffdaaebdbd4092"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab613b1870eeef157b0ffdaaebdbd4092">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(output_model &amp;&amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00781">kalman.hpp:781</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aba01a0145a12d7107f4cd570ebee2148"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aba01a0145a12d7107f4cd570ebee2148">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00504">kalman.hpp:504</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abbdf0007fe1e36bba2cba6e7eaa8d4dd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abbdf0007fe1e36bba2cba6e7eaa8d4dd">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01160">kalman.hpp:1160</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abeecd5f98be0e4fb04fcbd1fc6ecfe88"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abeecd5f98be0e4fb04fcbd1fc6ecfe88">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00218">kalman.hpp:218</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac5e7a7f4918c45c66414ac864546295f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac5e7a7f4918c45c66414ac864546295f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00794">kalman.hpp:794</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acb3b1d04c231c1fa41b0dcea5beb09b0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acb3b1d04c231c1fa41b0dcea5beb09b0">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00203">kalman.hpp:203</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acc88f8a63363cb5fe7533bfec3ee6011"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acc88f8a63363cb5fe7533bfec3ee6011">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const output_model &amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00771">kalman.hpp:771</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acfd95771566862774f497a6f4f8abd3a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acfd95771566862774f497a6f4f8abd3a">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00867">kalman.hpp:867</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad58f15facb009ca9a7088391687ef95d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad58f15facb009ca9a7088391687ef95d">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01025">kalman.hpp:1025</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad6942765cdccf4d09fce412632f779b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad6942765cdccf4d09fce412632f779b3">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_adaaca0b4d2629296e4fc51c81e8e5563"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#adaaca0b4d2629296e4fc51c81e8e5563">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; innovation_uncertainty</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00989">kalman.hpp:989</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_adc4b96d66f5f0c669a3399d6d57236cc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#adc4b96d66f5f0c669a3399d6d57236cc">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00590">kalman.hpp:590</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae02c51da28b27d3adbc8796ab5e3512a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae02c51da28b27d3adbc8796ab5e3512a">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01043">kalman.hpp:1043</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae7190992c2ee81bff829b59a49b17b81"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae7190992c2ee81bff829b59a49b17b81">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(input_control &amp;&amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00887">kalman.hpp:887</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae9228dd40c51d67ea70c1bb921d64250"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae9228dd40c51d67ea70c1bb921d64250">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00641">kalman.hpp:641</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aeea0fa495c33bafae4b13606134b5423"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aeea0fa495c33bafae4b13606134b5423">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const input_control &amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00877">kalman.hpp:877</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aef3503fc748a504e895bdd95a7ca6c1d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aef3503fc748a504e895bdd95a7ca6c1d">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(estimate_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00414">kalman.hpp:414</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af21cbe2d0bc04f6dae8c1b6c02eb2833"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af21cbe2d0bc04f6dae8c1b6c02eb2833">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00440">kalman.hpp:440</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af374ab30a5a1a7eee7e5aaffa939c3bd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af374ab30a5a1a7eee7e5aaffa939c3bd">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00655">kalman.hpp:655</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af3a40ed1445001249448f1eedaf330c1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af3a40ed1445001249448f1eedaf330c1">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af3c5d0d70a3c0426a0802fdd85e7eeef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af3c5d0d70a3c0426a0802fdd85e7eeef">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00200">kalman.hpp:200</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af80601f5377d8e3cf9aba514ad2c0734"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af80601f5377d8e3cf9aba514ad2c0734">fcarouge::kalman::operator()</a></div><div class="ttdeci">constexpr void operator()(const auto &amp;...arguments)</div><div class="ttdoc">Runs a step of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01105">kalman.hpp:1105</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af8d6f479798f305c207fdc67c07a2b5a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af8d6f479798f305c207fdc67c07a2b5a">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00197">kalman.hpp:197</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afaca19dbd315febb87fa494c37279a98"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afaca19dbd315febb87fa494c37279a98">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00357">kalman.hpp:357</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afae9e103ff365a53281f27028ff4a0ea"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afae9e103ff365a53281f27028ff4a0ea">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00208">kalman.hpp:208</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afb59a5dc3ce7d7dc82c3615b0bc1a176"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afb59a5dc3ce7d7dc82c3615b0bc1a176">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00809">kalman.hpp:809</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afc434e5783a0200c0380e6765975bd6b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afc434e5783a0200c0380e6765975bd6b">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(state_transition &amp;&amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00675">kalman.hpp:675</a></div></div>
<div class="ttc" id="aformat_8hpp_xhtml"><div class="ttname"><a href="format_8hpp.xhtml">format.hpp</a></div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_1_1internal_xhtml_a41a6a60c1495641760e4ac1dfffca2b8"><div class="ttname"><a href="namespacefcarouge_1_1eigen_1_1internal.xhtml#a41a6a60c1495641760e4ac1dfffca2b8">fcarouge::eigen::internal::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; Type, std::conditional_t&lt; State==1, Type, Eigen::Vector&lt; Type, State &gt; &gt;, std::conditional_t&lt; Output==1, Type, Eigen::Vector&lt; Type, Output &gt; &gt;, std::conditional_t&lt; Input==1, Type, Eigen::Vector&lt; Type, Input &gt; &gt;, transpose, symmetrize, divide, identity_matrix, UpdateArguments, PredictionArguments &gt; kalman</div><div class="ttdef"><b>Definition:</b> <a href="eigen_8hpp_source.xhtml#l00250">eigen.hpp:254</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_ab99c4b80cb5488c202a697e056134bae"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">fcarouge::eigen::identity_matrix</a></div><div class="ttdeci">internal::identity_matrix identity_matrix</div><div class="ttdoc">Function object for providing an Eigen identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00062">kalman_eigen.hpp:62</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="benchmark__full_8cpp_source.xhtml#l00046">benchmark_full.cpp:47</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml">fcarouge::identity_matrix</a></div><div class="ttdoc">Function object for providing an identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml_a3bc3899543cf8c8e0b11afc1412cf087"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">fcarouge::identity_matrix::operator()</a></div><div class="ttdeci">constexpr auto operator()() const noexcept</div><div class="ttdoc">Returns 1, the 1-by-1 identity matrix equivalent.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00070">kalman.hpp:70</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Fri Jul 15 2022 05:39:15 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
