<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="format_8hpp.xhtml">internal/format.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml">   62</a></span><span class="keyword">struct </span><a class="code hl_struct" href="structfcarouge_1_1identity__matrix.xhtml">identity_matrix</a> {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">   69</a></span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">operator()</a>() const noexcept</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">return</span> Type{ 1 };</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>};</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    <span class="keyword">typename</span> State = double, <span class="keyword">typename</span> Output = State, <span class="keyword">typename</span> Input = State,</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    <span class="keyword">typename</span> Transpose = std::identity, <span class="keyword">typename</span> Symmetrize = std::identity,</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;, <span class="keyword">typename</span> Identity = <a class="code hl_typedef" href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">identity_matrix</a>,</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keyword">typename</span> UpdateTypes = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">internal::empty_pack_t</a>,</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="keyword">typename</span> PredictionTypes = <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">internal::empty_pack_t</a>&gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  158</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab36b602d354fad0d0d0aa93abcdd9f01">  168</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab36b602d354fad0d0d0aa93abcdd9f01">implementation</a> =</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>      <a class="code hl_typedef" href="namespacefcarouge_1_1eigen_1_1internal.xhtml#ac3f78a5abfd36f0bcecb8830569436c6">internal::kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>                       Identity, <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;UpdateTypes&gt;</a>,</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>                       <a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">internal::repack_t&lt;PredictionTypes&gt;</a>&gt;;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">  180</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a> = <span class="keyword">typename</span> implementation::state;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7fd585072f9799aa546943934e1a38e1">  185</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7fd585072f9799aa546943934e1a38e1">output</a> = <span class="keyword">typename</span> implementation::output;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">  188</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">input</a> = <span class="keyword">typename</span> implementation::input;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">  193</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a> = <span class="keyword">typename</span> implementation::estimate_uncertainty;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">  196</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a> = <span class="keyword">typename</span> implementation::process_uncertainty;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">  199</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a> = <span class="keyword">typename</span> implementation::output_uncertainty;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">  204</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a> = <span class="keyword">typename</span> implementation::state_transition;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">  209</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a> = <span class="keyword">typename</span> implementation::output_model;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">  214</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a> = <span class="keyword">typename</span> implementation::input_control;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad1eeee2aae7756cb1a24350ff802de2a">  217</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ad1eeee2aae7756cb1a24350ff802de2a">gain</a> = <span class="keyword">typename</span> implementation::gain;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a222414fb9c93edb378a0156aa278a811">  220</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a222414fb9c93edb378a0156aa278a811">innovation</a> = <span class="keyword">typename</span> implementation::innovation;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab485e684ce0723c3d6de5dec389c88a6">  223</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab485e684ce0723c3d6de5dec389c88a6">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>      <span class="keyword">typename</span> implementation::innovation_uncertainty;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a59a9e100ebc62a6d4db11a7e65a06b12">  234</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a59a9e100ebc62a6d4db11a7e65a06b12">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa3064ce3ec5d541ddb849a7b530b5124">  245</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa3064ce3ec5d541ddb849a7b530b5124">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a97c4057f94bf097d2075c2b019a1a9e5">  257</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a97c4057f94bf097d2075c2b019a1a9e5">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4ae5a09664832ca35039c426a4a15cc6">  271</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ae5a09664832ca35039c426a4a15cc6">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa2f0430be3a57809a6bdca479c341954">  287</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa2f0430be3a57809a6bdca479c341954">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aefcc6608c7aa96cd7ea0ab658fd5da54">  293</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aefcc6608c7aa96cd7ea0ab658fd5da54">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state estimate vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7da73fc2bef3808cb47836bf9e8208e5">  307</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7da73fc2bef3808cb47836bf9e8208e5">x</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  {</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.x;</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  }</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7f45fec5e2a499c7874350f27ff16959">  317</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7f45fec5e2a499c7874350f27ff16959">x</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a> &amp;value)</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  {</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.x = value;</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  }</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span> </div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0c655b621eaaea59e65cce6abe12dbd7">  327</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0c655b621eaaea59e65cce6abe12dbd7">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a> &amp;&amp;value)</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  {</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.x = std::move(value);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  }</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a232d3cdfe6af3eed0cfe3bbfc1a6a51b">  340</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a232d3cdfe6af3eed0cfe3bbfc1a6a51b">x</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>  {</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a>{ value, values... });</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  }</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span> </div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a04f87358de723f8ae31cd0098b54feeb">  353</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a04f87358de723f8ae31cd0098b54feeb">x</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>  {</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.x = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">state</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  }</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation vector Z is unexpectedly &quot;</span></div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abaa0de7e5f1ad089a9d7842add690431">  366</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abaa0de7e5f1ad089a9d7842add690431">z</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7fd585072f9799aa546943934e1a38e1">output</a></div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  {</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.z;</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>  }</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control vector U is unexpectedly &quot;</span></div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7552965d826e59f1f337ba2220999643">  378</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7552965d826e59f1f337ba2220999643">u</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">input</a></div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>  {</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.u;</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  }</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span> </div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>  [[nodiscard(<span class="stringliteral">&quot;The returned estimated covariance matrix P is unexpectedly &quot;</span></div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a868e7283042616c9fd32ea86745c3ec4">  390</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a868e7283042616c9fd32ea86745c3ec4">p</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a></div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>  {</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.p;</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>  }</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span> </div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a922687019e99df6169eb09ddaa396bd7">  400</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a922687019e99df6169eb09ddaa396bd7">p</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  {</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.p = value;</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>  }</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span> </div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac5cb329547421eabc8bb91f2c16329b7">  410</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac5cb329547421eabc8bb91f2c16329b7">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>  {</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.p = std::move(value);</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  }</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span> </div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7c7a9c929365a87872d95b62a4d159c5">  423</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a7c7a9c929365a87872d95b62a4d159c5">p</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>  {</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.p = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>  }</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span> </div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4b285cd67a50650112fc13f7caccee07">  436</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4b285cd67a50650112fc13f7caccee07">p</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  {</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.p = std::move(</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">estimate_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>                              std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>  }</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span> </div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>  [[nodiscard(<span class="stringliteral">&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</span></div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a080eaccb34518fef7cc0c54df8f73256">  450</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a080eaccb34518fef7cc0c54df8f73256">q</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a></div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>  {</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.q;</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>  }</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a83e4f8a0a73353e11ddebbd1b8d1d82f">  460</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a83e4f8a0a73353e11ddebbd1b8d1d82f">q</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  {</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.q = value;</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>  }</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span> </div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3e5dbe4814f6b42a296c23498010d37f">  470</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3e5dbe4814f6b42a296c23498010d37f">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>  {</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.q = std::move(value);</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>  }</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span> </div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af613ee5f0bf4d914c3b551c1f0c56243">  483</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af613ee5f0bf4d914c3b551c1f0c56243">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>  {</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.q = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>  }</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span> </div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2ff65c799a4c81478238546c6c1346c5">  500</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2ff65c799a4c81478238546c6c1346c5">q</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>  {</div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.q = std::move(</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">process_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>                             std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>  }</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span> </div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a33f0875f7b0284b9350529018e6a27af">  520</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a33f0875f7b0284b9350529018e6a27af">q</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span>  {</div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.noise_process_q = callable;</div>
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno">  525</span>  }</div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span> </div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6bb341c2ac1843c8027c02d480f37891">  536</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6bb341c2ac1843c8027c02d480f37891">q</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_process_function,</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>  {</div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.noise_process_q = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>  }</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span> </div>
<div class="line"><a id="l00551" name="l00551"></a><span class="lineno">  551</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span>              <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a313170cbaab37277331127b200168da2">  553</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a313170cbaab37277331127b200168da2">r</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a></div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>  {</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.r;</div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span>  }</div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span> </div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2817f91f637370aea02b56fbf076fa01">  563</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2817f91f637370aea02b56fbf076fa01">r</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span>  {</div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.r = value;</div>
<div class="line"><a id="l00566" name="l00566"></a><span class="lineno">  566</span>  }</div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span> </div>
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa0619da7600a0124f811314fd2021815">  573</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa0619da7600a0124f811314fd2021815">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>  {</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.r = std::move(value);</div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span>  }</div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno">  577</span> </div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a527f0da68c4138bad2438b63fb1f58d5">  586</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a527f0da68c4138bad2438b63fb1f58d5">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>  {</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.r = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>  }</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span> </div>
<div class="line"><a id="l00601" name="l00601"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af6500c205da750d018f4f8f05dba3a17">  601</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af6500c205da750d018f4f8f05dba3a17">r</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00602" name="l00602"></a><span class="lineno">  602</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00603" name="l00603"></a><span class="lineno">  603</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00604" name="l00604"></a><span class="lineno">  604</span>  {</div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno">  605</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.r = std::move(</div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">output_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>                            std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>  }</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span> </div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9085a5ff6f7f9a868f177afb6859ccab">  621</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9085a5ff6f7f9a868f177afb6859ccab">r</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00623" name="l00623"></a><span class="lineno">  623</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>  {</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.noise_observation_r = callable;</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span>  }</div>
<div class="line"><a id="l00627" name="l00627"></a><span class="lineno">  627</span> </div>
<div class="line"><a id="l00637" name="l00637"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab7ad017f47c9bdea9dc4410caac3f516">  637</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab7ad017f47c9bdea9dc4410caac3f516">r</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00638" name="l00638"></a><span class="lineno">  638</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::noise_observation_function,</div>
<div class="line"><a id="l00639" name="l00639"></a><span class="lineno">  639</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00640" name="l00640"></a><span class="lineno">  640</span>  {</div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno">  641</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.noise_observation_r = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno">  642</span>  }</div>
<div class="line"><a id="l00643" name="l00643"></a><span class="lineno">  643</span> </div>
<div class="line"><a id="l00649" name="l00649"></a><span class="lineno">  649</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l00650" name="l00650"></a><span class="lineno">  650</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00651" name="l00651"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9f9048640ddd90cd1169f739ed787aa8">  651</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9f9048640ddd90cd1169f739ed787aa8">f</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a></div>
<div class="line"><a id="l00652" name="l00652"></a><span class="lineno">  652</span>  {</div>
<div class="line"><a id="l00653" name="l00653"></a><span class="lineno">  653</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.f;</div>
<div class="line"><a id="l00654" name="l00654"></a><span class="lineno">  654</span>  }</div>
<div class="line"><a id="l00655" name="l00655"></a><span class="lineno">  655</span> </div>
<div class="line"><a id="l00661" name="l00661"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0a36196d86b79b19e6456eb09fedd369">  661</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0a36196d86b79b19e6456eb09fedd369">f</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a> &amp;value)</div>
<div class="line"><a id="l00662" name="l00662"></a><span class="lineno">  662</span>  {</div>
<div class="line"><a id="l00663" name="l00663"></a><span class="lineno">  663</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.f = value;</div>
<div class="line"><a id="l00664" name="l00664"></a><span class="lineno">  664</span>  }</div>
<div class="line"><a id="l00665" name="l00665"></a><span class="lineno">  665</span> </div>
<div class="line"><a id="l00671" name="l00671"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a353d4448d3be51931e658b14bea01f2e">  671</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a353d4448d3be51931e658b14bea01f2e">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a> &amp;&amp;value)</div>
<div class="line"><a id="l00672" name="l00672"></a><span class="lineno">  672</span>  {</div>
<div class="line"><a id="l00673" name="l00673"></a><span class="lineno">  673</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.f = std::move(value);</div>
<div class="line"><a id="l00674" name="l00674"></a><span class="lineno">  674</span>  }</div>
<div class="line"><a id="l00675" name="l00675"></a><span class="lineno">  675</span> </div>
<div class="line"><a id="l00684" name="l00684"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a12b929c9339de8b90bfcdb64d4a43b9f">  684</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a12b929c9339de8b90bfcdb64d4a43b9f">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00685" name="l00685"></a><span class="lineno">  685</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00686" name="l00686"></a><span class="lineno">  686</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00687" name="l00687"></a><span class="lineno">  687</span>  {</div>
<div class="line"><a id="l00688" name="l00688"></a><span class="lineno">  688</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.f = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a>{ value, values... });</div>
<div class="line"><a id="l00689" name="l00689"></a><span class="lineno">  689</span>  }</div>
<div class="line"><a id="l00690" name="l00690"></a><span class="lineno">  690</span> </div>
<div class="line"><a id="l00699" name="l00699"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a08b65bcb4971e1c62186a3ad74792b77">  699</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a08b65bcb4971e1c62186a3ad74792b77">f</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00700" name="l00700"></a><span class="lineno">  700</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00701" name="l00701"></a><span class="lineno">  701</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00702" name="l00702"></a><span class="lineno">  702</span>  {</div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno">  703</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.f = std::move(</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span>        <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">state_transition</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00705" name="l00705"></a><span class="lineno">  705</span>                          std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00706" name="l00706"></a><span class="lineno">  706</span>  }</div>
<div class="line"><a id="l00707" name="l00707"></a><span class="lineno">  707</span> </div>
<div class="line"><a id="l00722" name="l00722"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0867cdc0eb2634c60f6ff580f8ced54c">  722</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0867cdc0eb2634c60f6ff580f8ced54c">f</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00723" name="l00723"></a><span class="lineno">  723</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00724" name="l00724"></a><span class="lineno">  724</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00725" name="l00725"></a><span class="lineno">  725</span>  {</div>
<div class="line"><a id="l00726" name="l00726"></a><span class="lineno">  726</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition_state_f = callable;</div>
<div class="line"><a id="l00727" name="l00727"></a><span class="lineno">  727</span>  }</div>
<div class="line"><a id="l00728" name="l00728"></a><span class="lineno">  728</span> </div>
<div class="line"><a id="l00743" name="l00743"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a04e79c76b38977011c643a2abdf822b9">  743</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a04e79c76b38977011c643a2abdf822b9">f</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00744" name="l00744"></a><span class="lineno">  744</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_state_function,</div>
<div class="line"><a id="l00745" name="l00745"></a><span class="lineno">  745</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00746" name="l00746"></a><span class="lineno">  746</span>  {</div>
<div class="line"><a id="l00747" name="l00747"></a><span class="lineno">  747</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition_state_f = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00748" name="l00748"></a><span class="lineno">  748</span>  }</div>
<div class="line"><a id="l00749" name="l00749"></a><span class="lineno">  749</span> </div>
<div class="line"><a id="l00755" name="l00755"></a><span class="lineno">  755</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l00756" name="l00756"></a><span class="lineno">  756</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00757" name="l00757"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa1b7bdfd0003fada764bdff943d4b844">  757</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa1b7bdfd0003fada764bdff943d4b844">h</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a></div>
<div class="line"><a id="l00758" name="l00758"></a><span class="lineno">  758</span>  {</div>
<div class="line"><a id="l00759" name="l00759"></a><span class="lineno">  759</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.h;</div>
<div class="line"><a id="l00760" name="l00760"></a><span class="lineno">  760</span>  }</div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno">  761</span> </div>
<div class="line"><a id="l00767" name="l00767"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae4f7ba705650fe606d346969b4542461">  767</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae4f7ba705650fe606d346969b4542461">h</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a> &amp;value)</div>
<div class="line"><a id="l00768" name="l00768"></a><span class="lineno">  768</span>  {</div>
<div class="line"><a id="l00769" name="l00769"></a><span class="lineno">  769</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.h = value;</div>
<div class="line"><a id="l00770" name="l00770"></a><span class="lineno">  770</span>  }</div>
<div class="line"><a id="l00771" name="l00771"></a><span class="lineno">  771</span> </div>
<div class="line"><a id="l00777" name="l00777"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae3890f39ad42f502ced221c523589fb5">  777</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ae3890f39ad42f502ced221c523589fb5">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a> &amp;&amp;value)</div>
<div class="line"><a id="l00778" name="l00778"></a><span class="lineno">  778</span>  {</div>
<div class="line"><a id="l00779" name="l00779"></a><span class="lineno">  779</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.h = std::move(value);</div>
<div class="line"><a id="l00780" name="l00780"></a><span class="lineno">  780</span>  }</div>
<div class="line"><a id="l00781" name="l00781"></a><span class="lineno">  781</span> </div>
<div class="line"><a id="l00790" name="l00790"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aea1066ada451a1c7567532a9b1e5d4e7">  790</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aea1066ada451a1c7567532a9b1e5d4e7">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00791" name="l00791"></a><span class="lineno">  791</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00792" name="l00792"></a><span class="lineno">  792</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00793" name="l00793"></a><span class="lineno">  793</span>  {</div>
<div class="line"><a id="l00794" name="l00794"></a><span class="lineno">  794</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.h = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a>{ value, values... });</div>
<div class="line"><a id="l00795" name="l00795"></a><span class="lineno">  795</span>  }</div>
<div class="line"><a id="l00796" name="l00796"></a><span class="lineno">  796</span> </div>
<div class="line"><a id="l00805" name="l00805"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a27858579a85494808867e330e494e00f">  805</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a27858579a85494808867e330e494e00f">h</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00806" name="l00806"></a><span class="lineno">  806</span>      !std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00807" name="l00807"></a><span class="lineno">  807</span>                            std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00808" name="l00808"></a><span class="lineno">  808</span>  {</div>
<div class="line"><a id="l00809" name="l00809"></a><span class="lineno">  809</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.h =</div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno">  810</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">output_model</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno">  811</span>                                std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span>  }</div>
<div class="line"><a id="l00813" name="l00813"></a><span class="lineno">  813</span> </div>
<div class="line"><a id="l00828" name="l00828"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab61b4e18f7d84884be30714fc798abff">  828</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab61b4e18f7d84884be30714fc798abff">h</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00829" name="l00829"></a><span class="lineno">  829</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00830" name="l00830"></a><span class="lineno">  830</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00831" name="l00831"></a><span class="lineno">  831</span>  {</div>
<div class="line"><a id="l00832" name="l00832"></a><span class="lineno">  832</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.observation_state_h = callable;</div>
<div class="line"><a id="l00833" name="l00833"></a><span class="lineno">  833</span>  }</div>
<div class="line"><a id="l00834" name="l00834"></a><span class="lineno">  834</span> </div>
<div class="line"><a id="l00849" name="l00849"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa4759de1fd24b2ca223cde81d2c43113">  849</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aa4759de1fd24b2ca223cde81d2c43113">h</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00850" name="l00850"></a><span class="lineno">  850</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::observation_state_function,</div>
<div class="line"><a id="l00851" name="l00851"></a><span class="lineno">  851</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00852" name="l00852"></a><span class="lineno">  852</span>  {</div>
<div class="line"><a id="l00853" name="l00853"></a><span class="lineno">  853</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.observation_state_h = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00854" name="l00854"></a><span class="lineno">  854</span>  }</div>
<div class="line"><a id="l00855" name="l00855"></a><span class="lineno">  855</span> </div>
<div class="line"><a id="l00861" name="l00861"></a><span class="lineno">  861</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l00862" name="l00862"></a><span class="lineno">  862</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00863" name="l00863"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a149f2679e5030db829b2916baa69009f">  863</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a149f2679e5030db829b2916baa69009f">g</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a></div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span>  {</div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno">  865</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.g;</div>
<div class="line"><a id="l00866" name="l00866"></a><span class="lineno">  866</span>  }</div>
<div class="line"><a id="l00867" name="l00867"></a><span class="lineno">  867</span> </div>
<div class="line"><a id="l00873" name="l00873"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac6ebbd1e5efadf03c81583516ba1272c">  873</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac6ebbd1e5efadf03c81583516ba1272c">g</a>(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a> &amp;value)</div>
<div class="line"><a id="l00874" name="l00874"></a><span class="lineno">  874</span>  {</div>
<div class="line"><a id="l00875" name="l00875"></a><span class="lineno">  875</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.g = value;</div>
<div class="line"><a id="l00876" name="l00876"></a><span class="lineno">  876</span>  }</div>
<div class="line"><a id="l00877" name="l00877"></a><span class="lineno">  877</span> </div>
<div class="line"><a id="l00883" name="l00883"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a34e8f0ca78055ab821fe459887fc3d49">  883</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a34e8f0ca78055ab821fe459887fc3d49">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l00884" name="l00884"></a><span class="lineno">  884</span>  {</div>
<div class="line"><a id="l00885" name="l00885"></a><span class="lineno">  885</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.g = std::move(value);</div>
<div class="line"><a id="l00886" name="l00886"></a><span class="lineno">  886</span>  }</div>
<div class="line"><a id="l00887" name="l00887"></a><span class="lineno">  887</span> </div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a078ec9389c2496b3fabff75660ae7f7b">  896</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a078ec9389c2496b3fabff75660ae7f7b">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno">  897</span>      !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno">  898</span>          <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00899" name="l00899"></a><span class="lineno">  899</span>          std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span>  {</div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.g = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a>{ value, values... });</div>
<div class="line"><a id="l00902" name="l00902"></a><span class="lineno">  902</span>  }</div>
<div class="line"><a id="l00903" name="l00903"></a><span class="lineno">  903</span> </div>
<div class="line"><a id="l00912" name="l00912"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9376bea14746f52a50858c9325dcf1ef">  912</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9376bea14746f52a50858c9325dcf1ef">g</a>(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00913" name="l00913"></a><span class="lineno">  913</span>      !std::is_assignable_v&lt;</div>
<div class="line"><a id="l00914" name="l00914"></a><span class="lineno">  914</span>          <span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00915" name="l00915"></a><span class="lineno">  915</span>          std::decay_t&lt;<span class="keyword">decltype</span>(value)&gt;&gt;)</div>
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno">  916</span>  {</div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.g =</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span>        std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">input_control</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span>                                 std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span>  }</div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span> </div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adb799e8ced902d8aaff9325a612bc1c5">  931</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#adb799e8ced902d8aaff9325a612bc1c5">g</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno">  933</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span>  {</div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno">  935</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition_control_g = callable;</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno">  936</span>  }</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span> </div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a86bee746cff3d08347157b36a05a7a1a">  947</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a86bee746cff3d08347157b36a05a7a1a">g</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span>(</div>
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno">  948</span>      std::is_assignable_v&lt;<span class="keyword">typename</span> implementation::transition_control_function,</div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span>                           std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;)</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span>  {</div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition_control_g = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span>  }</div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno">  953</span> </div>
<div class="line"><a id="l00959" name="l00959"></a><span class="lineno">  959</span>  [[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l00960" name="l00960"></a><span class="lineno">  960</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00961" name="l00961"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9be5fe520d542131af481d239c5a924c">  961</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a9be5fe520d542131af481d239c5a924c">k</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ad1eeee2aae7756cb1a24350ff802de2a">gain</a></div>
<div class="line"><a id="l00962" name="l00962"></a><span class="lineno">  962</span>  {</div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.k;</div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span>  }</div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno">  965</span> </div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno">  971</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation vector Y is unexpectedly &quot;</span></div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno">  972</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00973" name="l00973"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a111c882bc52c97a207789cc5db6aacf3">  973</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a111c882bc52c97a207789cc5db6aacf3">y</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a222414fb9c93edb378a0156aa278a811">innovation</a></div>
<div class="line"><a id="l00974" name="l00974"></a><span class="lineno">  974</span>  {</div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.y;</div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno">  976</span>  }</div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno">  977</span> </div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span>  [[nodiscard(<span class="stringliteral">&quot;The returned innovation uncertainty matrix S is unexpectedly &quot;</span></div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2ba7c68ea0f157085f5710f35797d499">  985</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2ba7c68ea0f157085f5710f35797d499">s</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab485e684ce0723c3d6de5dec389c88a6">innovation_uncertainty</a></div>
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno">  986</span>  {</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno">  987</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.s;</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>  }</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span> </div>
<div class="line"><a id="l01003" name="l01003"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5157efe03fa59171da02dc6dcce0b2cd"> 1003</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5157efe03fa59171da02dc6dcce0b2cd">transition</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01004" name="l01004"></a><span class="lineno"> 1004</span>  {</div>
<div class="line"><a id="l01005" name="l01005"></a><span class="lineno"> 1005</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition = callable;</div>
<div class="line"><a id="l01006" name="l01006"></a><span class="lineno"> 1006</span>  }</div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"> 1007</span> </div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a193c41ece11420b7eb0573fe0428efa7"> 1021</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a193c41ece11420b7eb0573fe0428efa7">transition</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span>  {</div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.transition = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"> 1024</span>  }</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span> </div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afaabe5997ea40e19a88811ef477895d7"> 1039</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afaabe5997ea40e19a88811ef477895d7">observation</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable)</div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"> 1040</span>  {</div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.observation = callable;</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"> 1042</span>  }</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span> </div>
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aaf36b1b1209a66a74c86b27681eb28dc"> 1057</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aaf36b1b1209a66a74c86b27681eb28dc">observation</a>(<span class="keyword">auto</span> &amp;&amp;callable)</div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span>  {</div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.observation = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span>  }</div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"> 1061</span> </div>
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"> 1063</span> </div>
<div class="line"><a id="l01066" name="l01066"></a><span class="lineno"> 1066</span> </div>
<div class="line"><a id="l01100" name="l01100"></a><span class="lineno"> 1100</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... InputTypes&gt;</div>
<div class="line"><a id="l01101" name="l01101"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aab1dba08047eb5eb08dfbc8095ea1861"> 1101</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aab1dba08047eb5eb08dfbc8095ea1861">operator()</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01102" name="l01102"></a><span class="lineno"> 1102</span>  {</div>
<div class="line"><a id="l01103" name="l01103"></a><span class="lineno"> 1103</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.template operator()&lt;InputTypes...&gt;(arguments...);</div>
<div class="line"><a id="l01104" name="l01104"></a><span class="lineno"> 1104</span>  }</div>
<div class="line"><a id="l01105" name="l01105"></a><span class="lineno"> 1105</span> </div>
<div class="line"><a id="l01123" name="l01123"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a71b11bb6c9a898533dfd86ce6eef5c20"> 1123</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a71b11bb6c9a898533dfd86ce6eef5c20">update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01124" name="l01124"></a><span class="lineno"> 1124</span>  {</div>
<div class="line"><a id="l01125" name="l01125"></a><span class="lineno"> 1125</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.update(arguments...);</div>
<div class="line"><a id="l01126" name="l01126"></a><span class="lineno"> 1126</span>  }</div>
<div class="line"><a id="l01127" name="l01127"></a><span class="lineno"> 1127</span> </div>
<div class="line"><a id="l01144" name="l01144"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a326b305473fba0a1efc17660c94eb199"> 1144</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a326b305473fba0a1efc17660c94eb199">predict</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...arguments)</div>
<div class="line"><a id="l01145" name="l01145"></a><span class="lineno"> 1145</span>  {</div>
<div class="line"><a id="l01146" name="l01146"></a><span class="lineno"> 1146</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>.predict(arguments...);</div>
<div class="line"><a id="l01147" name="l01147"></a><span class="lineno"> 1147</span>  }</div>
<div class="line"><a id="l01148" name="l01148"></a><span class="lineno"> 1148</span> </div>
<div class="line"><a id="l01150" name="l01150"></a><span class="lineno"> 1150</span> </div>
<div class="line"><a id="l01151" name="l01151"></a><span class="lineno"> 1151</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l01154" name="l01154"></a><span class="lineno"> 1154</span> </div>
<div class="line"><a id="l01156" name="l01156"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8"> 1156</a></span>  <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ab36b602d354fad0d0d0aa93abcdd9f01">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">filter</a>;</div>
<div class="line"><a id="l01157" name="l01157"></a><span class="lineno"> 1157</span> </div>
<div class="line"><a id="l01159" name="l01159"></a><span class="lineno"> 1159</span>};</div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"> 1160</span> </div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"> 1161</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01162" name="l01162"></a><span class="lineno"> 1162</span> </div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"> 1163</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00158">kalman.hpp:159</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a04e79c76b38977011c643a2abdf822b9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a04e79c76b38977011c643a2abdf822b9">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00743">kalman.hpp:743</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a04f87358de723f8ae31cd0098b54feeb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a04f87358de723f8ae31cd0098b54feeb">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00353">kalman.hpp:353</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a078ec9389c2496b3fabff75660ae7f7b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a078ec9389c2496b3fabff75660ae7f7b">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00896">kalman.hpp:896</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a080eaccb34518fef7cc0c54df8f73256"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a080eaccb34518fef7cc0c54df8f73256">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00450">kalman.hpp:450</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0867cdc0eb2634c60f6ff580f8ced54c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0867cdc0eb2634c60f6ff580f8ced54c">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00722">kalman.hpp:722</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a08b65bcb4971e1c62186a3ad74792b77"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a08b65bcb4971e1c62186a3ad74792b77">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00699">kalman.hpp:699</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0a36196d86b79b19e6456eb09fedd369"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0a36196d86b79b19e6456eb09fedd369">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const state_transition &amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00661">kalman.hpp:661</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0c655b621eaaea59e65cce6abe12dbd7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0c655b621eaaea59e65cce6abe12dbd7">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(state &amp;&amp;value)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00327">kalman.hpp:327</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1102f87212b368e4e55bcd5d637a600c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1102f87212b368e4e55bcd5d637a600c">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00180">kalman.hpp:180</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a111c882bc52c97a207789cc5db6aacf3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a111c882bc52c97a207789cc5db6aacf3">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; innovation</div><div class="ttdoc">Returns the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00973">kalman.hpp:973</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a12b929c9339de8b90bfcdb64d4a43b9f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a12b929c9339de8b90bfcdb64d4a43b9f">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00684">kalman.hpp:684</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a149f2679e5030db829b2916baa69009f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a149f2679e5030db829b2916baa69009f">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00863">kalman.hpp:863</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a15928894f06259752d02d9ee26b2e47e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a15928894f06259752d02d9ee26b2e47e">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00193">kalman.hpp:193</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1642332d5ad9d1e135bbe5220961de64"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1642332d5ad9d1e135bbe5220961de64">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00209">kalman.hpp:209</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a193c41ece11420b7eb0573fe0428efa7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a193c41ece11420b7eb0573fe0428efa7">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01021">kalman.hpp:1021</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a222414fb9c93edb378a0156aa278a811"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a222414fb9c93edb378a0156aa278a811">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00220">kalman.hpp:220</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a232d3cdfe6af3eed0cfe3bbfc1a6a51b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a232d3cdfe6af3eed0cfe3bbfc1a6a51b">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00340">kalman.hpp:340</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a27858579a85494808867e330e494e00f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a27858579a85494808867e330e494e00f">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00805">kalman.hpp:805</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2817f91f637370aea02b56fbf076fa01"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2817f91f637370aea02b56fbf076fa01">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const output_uncertainty &amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00563">kalman.hpp:563</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2ba7c68ea0f157085f5710f35797d499"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2ba7c68ea0f157085f5710f35797d499">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; innovation_uncertainty</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00985">kalman.hpp:985</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2ff65c799a4c81478238546c6c1346c5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2ff65c799a4c81478238546c6c1346c5">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00500">kalman.hpp:500</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a313170cbaab37277331127b200168da2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a313170cbaab37277331127b200168da2">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00553">kalman.hpp:553</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a326b305473fba0a1efc17660c94eb199"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a326b305473fba0a1efc17660c94eb199">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const auto &amp;...arguments)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01144">kalman.hpp:1144</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a33f0875f7b0284b9350529018e6a27af"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a33f0875f7b0284b9350529018e6a27af">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00520">kalman.hpp:520</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a34e8f0ca78055ab821fe459887fc3d49"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a34e8f0ca78055ab821fe459887fc3d49">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(input_control &amp;&amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00883">kalman.hpp:883</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a353d4448d3be51931e658b14bea01f2e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a353d4448d3be51931e658b14bea01f2e">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(state_transition &amp;&amp;value)</div><div class="ttdoc">Sets the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00671">kalman.hpp:671</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3e5dbe4814f6b42a296c23498010d37f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3e5dbe4814f6b42a296c23498010d37f">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(process_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00470">kalman.hpp:470</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4ae5a09664832ca35039c426a4a15cc6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4ae5a09664832ca35039c426a4a15cc6">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4b285cd67a50650112fc13f7caccee07"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4b285cd67a50650112fc13f7caccee07">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00436">kalman.hpp:436</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5157efe03fa59171da02dc6dcce0b2cd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5157efe03fa59171da02dc6dcce0b2cd">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state transition function f(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01003">kalman.hpp:1003</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a527f0da68c4138bad2438b63fb1f58d5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a527f0da68c4138bad2438b63fb1f58d5">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00586">kalman.hpp:586</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a59a9e100ebc62a6d4db11a7e65a06b12"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a59a9e100ebc62a6d4db11a7e65a06b12">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a59c62d02fbc8be939e05a135b0cec3b8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a59c62d02fbc8be939e05a135b0cec3b8">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00214">kalman.hpp:214</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a642727d695ea4a1fee490ff7dd6ad7f8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a642727d695ea4a1fee490ff7dd6ad7f8">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01156">kalman.hpp:1156</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6bb341c2ac1843c8027c02d480f37891"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6bb341c2ac1843c8027c02d480f37891">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00536">kalman.hpp:536</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a71b11bb6c9a898533dfd86ce6eef5c20"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a71b11bb6c9a898533dfd86ce6eef5c20">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...arguments)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01123">kalman.hpp:1123</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7552965d826e59f1f337ba2220999643"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7552965d826e59f1f337ba2220999643">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; input</div><div class="ttdoc">Returns the last control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00378">kalman.hpp:378</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7c7a9c929365a87872d95b62a4d159c5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7c7a9c929365a87872d95b62a4d159c5">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00423">kalman.hpp:423</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7da73fc2bef3808cb47836bf9e8208e5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7da73fc2bef3808cb47836bf9e8208e5">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00307">kalman.hpp:307</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7f45fec5e2a499c7874350f27ff16959"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7f45fec5e2a499c7874350f27ff16959">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr void x(const state &amp;value)</div><div class="ttdoc">Sets the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00317">kalman.hpp:317</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7fd585072f9799aa546943934e1a38e1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7fd585072f9799aa546943934e1a38e1">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00185">kalman.hpp:185</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a83e4f8a0a73353e11ddebbd1b8d1d82f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a83e4f8a0a73353e11ddebbd1b8d1d82f">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const process_uncertainty &amp;value)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00460">kalman.hpp:460</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a868e7283042616c9fd32ea86745c3ec4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a868e7283042616c9fd32ea86745c3ec4">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00390">kalman.hpp:390</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a86bee746cff3d08347157b36a05a7a1a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a86bee746cff3d08347157b36a05a7a1a">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00947">kalman.hpp:947</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9085a5ff6f7f9a868f177afb6859ccab"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9085a5ff6f7f9a868f177afb6859ccab">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(const auto &amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00621">kalman.hpp:621</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a922687019e99df6169eb09ddaa396bd7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a922687019e99df6169eb09ddaa396bd7">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(const estimate_uncertainty &amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00400">kalman.hpp:400</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9376bea14746f52a50858c9325dcf1ef"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9376bea14746f52a50858c9325dcf1ef">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00912">kalman.hpp:912</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a95e201e1563f135b128edbf2c9793e56"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a95e201e1563f135b128edbf2c9793e56">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00196">kalman.hpp:196</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a97c4057f94bf097d2075c2b019a1a9e5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a97c4057f94bf097d2075c2b019a1a9e5">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9be5fe520d542131af481d239c5a924c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9be5fe520d542131af481d239c5a924c">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; gain</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00961">kalman.hpp:961</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9f9048640ddd90cd1169f739ed787aa8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9f9048640ddd90cd1169f739ed787aa8">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00651">kalman.hpp:651</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9fac97289314ad4018774b6afbd73716"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9fac97289314ad4018774b6afbd73716">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00199">kalman.hpp:199</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa0619da7600a0124f811314fd2021815"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa0619da7600a0124f811314fd2021815">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(output_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00573">kalman.hpp:573</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa1b7bdfd0003fada764bdff943d4b844"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa1b7bdfd0003fada764bdff943d4b844">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00757">kalman.hpp:757</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa2f0430be3a57809a6bdca479c341954"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa2f0430be3a57809a6bdca479c341954">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa3064ce3ec5d541ddb849a7b530b5124"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa3064ce3ec5d541ddb849a7b530b5124">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa4759de1fd24b2ca223cde81d2c43113"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa4759de1fd24b2ca223cde81d2c43113">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00849">kalman.hpp:849</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aab1dba08047eb5eb08dfbc8095ea1861"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aab1dba08047eb5eb08dfbc8095ea1861">fcarouge::kalman::operator()</a></div><div class="ttdeci">constexpr void operator()(const auto &amp;...arguments)</div><div class="ttdoc">Runs a step of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01101">kalman.hpp:1101</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aaf36b1b1209a66a74c86b27681eb28dc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aaf36b1b1209a66a74c86b27681eb28dc">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01057">kalman.hpp:1057</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab36b602d354fad0d0d0aa93abcdd9f01"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab36b602d354fad0d0d0aa93abcdd9f01">fcarouge::kalman::implementation</a></div><div class="ttdeci">internal::kalman&lt; State, Output, Input, Transpose, Symmetrize, Divide, Identity, internal::repack_t&lt; UpdateTypes &gt;, internal::repack_t&lt; PredictionTypes &gt; &gt; implementation</div><div class="ttdoc">Implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00168">kalman.hpp:171</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab485e684ce0723c3d6de5dec389c88a6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab485e684ce0723c3d6de5dec389c88a6">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00223">kalman.hpp:224</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab61b4e18f7d84884be30714fc798abff"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab61b4e18f7d84884be30714fc798abff">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00828">kalman.hpp:828</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab763d09902667e195848fa899e310beb"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab763d09902667e195848fa899e310beb">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00204">kalman.hpp:204</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab7ad017f47c9bdea9dc4410caac3f516"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab7ad017f47c9bdea9dc4410caac3f516">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00637">kalman.hpp:637</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abaa0de7e5f1ad089a9d7842add690431"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abaa0de7e5f1ad089a9d7842add690431">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; output</div><div class="ttdoc">Returns the last observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00366">kalman.hpp:366</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac5cb329547421eabc8bb91f2c16329b7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac5cb329547421eabc8bb91f2c16329b7">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr void p(estimate_uncertainty &amp;&amp;value)</div><div class="ttdoc">Sets the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00410">kalman.hpp:410</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac6ebbd1e5efadf03c81583516ba1272c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac6ebbd1e5efadf03c81583516ba1272c">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const input_control &amp;value)</div><div class="ttdoc">Sets the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00873">kalman.hpp:873</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aca54b5a1f438d4c6299ac36035450d3c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aca54b5a1f438d4c6299ac36035450d3c">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00188">kalman.hpp:188</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ad1eeee2aae7756cb1a24350ff802de2a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ad1eeee2aae7756cb1a24350ff802de2a">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00217">kalman.hpp:217</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_adb799e8ced902d8aaff9325a612bc1c5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#adb799e8ced902d8aaff9325a612bc1c5">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(const auto &amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00931">kalman.hpp:931</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae3890f39ad42f502ced221c523589fb5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae3890f39ad42f502ced221c523589fb5">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(output_model &amp;&amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00777">kalman.hpp:777</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae4f7ba705650fe606d346969b4542461"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae4f7ba705650fe606d346969b4542461">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const output_model &amp;value)</div><div class="ttdoc">Sets the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00767">kalman.hpp:767</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aea1066ada451a1c7567532a9b1e5d4e7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aea1066ada451a1c7567532a9b1e5d4e7">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the observation, measurement transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00790">kalman.hpp:790</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aefcc6608c7aa96cd7ea0ab658fd5da54"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aefcc6608c7aa96cd7ea0ab658fd5da54">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af613ee5f0bf4d914c3b551c1f0c56243"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af613ee5f0bf4d914c3b551c1f0c56243">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(const auto &amp;value, const auto &amp;...values)</div><div class="ttdoc">Sets the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00483">kalman.hpp:483</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af6500c205da750d018f4f8f05dba3a17"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af6500c205da750d018f4f8f05dba3a17">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;value, auto &amp;&amp;...values)</div><div class="ttdoc">Sets the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00601">kalman.hpp:601</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afaabe5997ea40e19a88811ef477895d7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afaabe5997ea40e19a88811ef477895d7">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const auto &amp;callable)</div><div class="ttdoc">Sets the extended state observation function h(x).</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01039">kalman.hpp:1039</a></div></div>
<div class="ttc" id="aformat_8hpp_xhtml"><div class="ttname"><a href="format_8hpp.xhtml">format.hpp</a></div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_1_1internal_xhtml_ac3f78a5abfd36f0bcecb8830569436c6"><div class="ttname"><a href="namespacefcarouge_1_1eigen_1_1internal.xhtml#ac3f78a5abfd36f0bcecb8830569436c6">fcarouge::eigen::internal::kalman</a></div><div class="ttdeci">fcarouge::kalman&lt; std::conditional_t&lt; State==1, Type, Eigen::Vector&lt; Type, State &gt; &gt;, std::conditional_t&lt; Output==1, Type, Eigen::Vector&lt; Type, Output &gt; &gt;, std::conditional_t&lt; Input==0||Input==1, Type, Eigen::Vector&lt; Type, Input &gt; &gt;, transpose, symmetrize, divide, identity_matrix, UpdateTypes, PredictionTypes &gt; kalman</div><div class="ttdef"><b>Definition:</b> <a href="eigen_8hpp_source.xhtml#l00257">eigen.hpp:263</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1eigen_xhtml_ab99c4b80cb5488c202a697e056134bae"><div class="ttname"><a href="namespacefcarouge_1_1eigen.xhtml#ab99c4b80cb5488c202a697e056134bae">fcarouge::eigen::identity_matrix</a></div><div class="ttdeci">internal::identity_matrix identity_matrix</div><div class="ttdoc">Function object for providing an Eigen identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman__eigen_8hpp_source.xhtml#l00062">kalman_eigen.hpp:62</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a0d6c05cd68e6807d952e8c7344d5df5a"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a0d6c05cd68e6807d952e8c7344d5df5a">fcarouge::internal::empty_pack_t</a></div><div class="ttdeci">pack&lt;&gt; empty_pack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00051">kalman.hpp:51</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a567d18fbfbf6f8d1543bca57ba706f22"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a567d18fbfbf6f8d1543bca57ba706f22">fcarouge::internal::repack_t</a></div><div class="ttdeci">typename repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00062">kalman.hpp:62</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="benchmark__full_8cpp_source.xhtml#l00046">benchmark_full.cpp:47</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml">fcarouge::identity_matrix</a></div><div class="ttdoc">Function object for providing an identity matrix.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00062">kalman.hpp:62</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity__matrix_xhtml_a3bc3899543cf8c8e0b11afc1412cf087"><div class="ttname"><a href="structfcarouge_1_1identity__matrix.xhtml#a3bc3899543cf8c8e0b11afc1412cf087">fcarouge::identity_matrix::operator()</a></div><div class="ttdeci">constexpr auto operator()() const noexcept</div><div class="ttdoc">Returns 1, the 1-by-1 identity matrix equivalent.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00069">kalman.hpp:69</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Sun Jul 24 2022 01:26:11 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
