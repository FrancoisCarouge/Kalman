<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman
   &#160;<span id="projectnumber">0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">kalman.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">Version 0.1.0</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">means.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">software under copyright law.</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transpose.xhtml">   49</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code" href="structfcarouge_1_1transpose.xhtml">transpose</a> {</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structfcarouge_1_1transpose.xhtml#a8512af46ed8ccaf21f00a3570f479f4f">   50</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="structfcarouge_1_1transpose.xhtml#a8512af46ed8ccaf21f00a3570f479f4f">operator()</a>(<span class="keyword">const</span> Type &amp;value)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;};</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="structfcarouge_1_1symmetrize.xhtml">   56</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a> {</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structfcarouge_1_1symmetrize.xhtml#ad415bde58d2d636cea9deb94765115f6">   57</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="structfcarouge_1_1symmetrize.xhtml#ad415bde58d2d636cea9deb94765115f6">operator()</a>(<span class="keyword">const</span> Type &amp;value)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;};</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divide.xhtml">   63</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Numerator, <span class="keyword">typename</span> Denominator&gt; <span class="keyword">struct </span><a class="code" href="structfcarouge_1_1divide.xhtml">divide</a> {</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structfcarouge_1_1divide.xhtml#a96aeaad0ad45ee085036258dc8e332f2">   64</a></span>&#160;  <span class="keyword">auto</span> <a class="code" href="structfcarouge_1_1divide.xhtml#a96aeaad0ad45ee085036258dc8e332f2">operator()</a>(<span class="keyword">const</span> Numerator &amp;numerator, <span class="keyword">const</span> Denominator &amp;denominator)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> numerator / denominator;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;};</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity.xhtml">   70</a></span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span><a class="code" href="structfcarouge_1_1identity.xhtml">identity</a> {</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="structfcarouge_1_1identity.xhtml#a72feaecdc46f00a6cc472843b3757371">   71</a></span>&#160;  Type <a class="code" href="structfcarouge_1_1identity.xhtml#a72feaecdc46f00a6cc472843b3757371">operator()</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">   77</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">extrapolate_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordflow">return</span> State{ f * x };</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#aba1ee7114d412e16f5368788b3ed133c">   84</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">extrapolate_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;g,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                       <span class="keyword">const</span> <span class="keyword">auto</span> &amp;u)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">return</span> State{ f * x + g * u };</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">class </span>Transpose&gt;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a9fa8ef3ebc122ecb5970fe5d5da5cb3d">   93</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#a9fa8ef3ebc122ecb5970fe5d5da5cb3d">extrapolate_covariance</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">using</span> state_transition_f =</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(f)&gt;&gt;;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  Transpose&lt;state_transition_f&gt; <a class="code" href="structfcarouge_1_1transpose.xhtml">transpose</a>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordflow">return</span> estimate_uncertainty_p{ f * p * <a class="code" href="structfcarouge_1_1transpose.xhtml">transpose</a>(f) + q };</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize&gt;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a64c7abdbe0f3ab4923de70c86f602037">  106</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacefcarouge.xhtml#a64c7abdbe0f3ab4923de70c86f602037">predict</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">extrapolate_state</a>(x, f);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  p = <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize&gt;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#af1d214d789868b3303c570e6bc55d2fe">  118</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacefcarouge.xhtml#a64c7abdbe0f3ab4923de70c86f602037">predict</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;f, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;q, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;g,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;             <span class="keyword">const</span> <span class="keyword">auto</span> &amp;u)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">extrapolate_state</a>(x, f, g, u);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  p = <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>(extrapolate_covariance&lt;Transpose&gt;(p, f, q));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">  129</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">update_state</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;x, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;k, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;z, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">using</span> State = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(x)&gt;&gt;;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">return</span> State{ x + k * (z - h * x) };</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a61240a1a51b9bc2273b24f0459f4fc21">  138</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#a61240a1a51b9bc2273b24f0459f4fc21">update_covariance</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;k, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                       <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">using</span> gain = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(k)&gt;&gt;;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  Transpose&lt;estimate_uncertainty_p&gt; transpose_p;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  Transpose&lt;gain&gt; transpose_k;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  Identity&lt;estimate_uncertainty_p&gt; i;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">return</span> estimate_uncertainty_p{ (i() - k * h) * p * transpose_p(i() - k * h) +</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                 k * r * transpose_k(k) };</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide&gt;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#afae063c524e1b8112db42713307a7ee3">  154</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="namespacefcarouge.xhtml#afae063c524e1b8112db42713307a7ee3">weight_gain</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">using</span> observation_h = std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(h)&gt;&gt;;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">using</span> measurement_uncertainty_r =</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(r)&gt;&gt;;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">using</span> gain = std::invoke_result_t&lt;Transpose&lt;observation_h&gt;, observation_h&gt;;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  Transpose&lt;observation_h&gt; transpose_h;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  Divide&lt;gain, measurement_uncertainty_r&gt; <a class="code" href="structfcarouge_1_1divide.xhtml">divide</a>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> gain{ <a class="code" href="structfcarouge_1_1divide.xhtml">divide</a>(p * transpose_h(h), h * p * transpose_h(h) + r) };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose,</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide,</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity&gt;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="namespacefcarouge.xhtml#a276af45ca31e2b68b57a4b4015363984">  170</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespacefcarouge.xhtml#a276af45ca31e2b68b57a4b4015363984">update</a>(<span class="keyword">auto</span> &amp;x, <span class="keyword">auto</span> &amp;p, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;h, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;r, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;z)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">const</span> <span class="keyword">auto</span> k{ weight_gain&lt;Transpose, Divide&gt;(p, h, r) };</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  x = <a class="code" href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">update_state</a>(x, k, z, h);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">using</span> estimate_uncertainty_p =</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      std::remove_reference_t&lt;std::remove_cv_t&lt;decltype(p)&gt;&gt;;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  Symmetrize&lt;estimate_uncertainty_p&gt; <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  p = <a class="code" href="structfcarouge_1_1symmetrize.xhtml">symmetrize</a>(update_covariance&lt;Transpose, Identity&gt;(p, k, h, r));</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> State, <span class="keyword">typename</span> Output = State, <span class="keyword">typename</span> Input = State,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Transpose = transpose,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Symmetrize = symmetrize,</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>, <span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Divide = divide,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;          <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="keyword">typename</span> Identity = identity&gt;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  187</a></span>&#160;<span class="keyword">class </span><a class="code" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;{</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a66add6395a46dfb17547075e42613f26">  190</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a66add6395a46dfb17547075e42613f26">state_x</a> = State;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ace2ad9bd9be720f51660009b53243ffc">  191</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#ace2ad9bd9be720f51660009b53243ffc">output_z</a> = Output;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9cab65fe7c4583e2b3fae46a330b18e6">  192</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a9cab65fe7c4583e2b3fae46a330b18e6">input_u</a> = Input;</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#affbdb02f408d84c4a845dff9563e9847">  193</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#affbdb02f408d84c4a845dff9563e9847">estimate_uncertainty_p</a> =</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      std::invoke_result_t&lt;Divide&lt;State, State&gt;, State, State&gt;;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a13d8e6b961de3e0237a8b3510c6bcbe9">  195</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a13d8e6b961de3e0237a8b3510c6bcbe9">process_noise_uncertainty_q</a> =</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      std::invoke_result_t&lt;Divide&lt;State, State&gt;, State, State&gt;;</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4339d154f26daedf40715e5d824b8353">  197</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a4339d154f26daedf40715e5d824b8353">state_transition_f</a> =</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      std::invoke_result_t&lt;Divide&lt;State, State&gt;, State, State&gt;;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae5b74959471fe83fc610c61f46046fd4">  199</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#ae5b74959471fe83fc610c61f46046fd4">observation_h</a> =</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      std::invoke_result_t&lt;Divide&lt;Output, State&gt;, Output, State&gt;;</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a56b54c09195f0b8c12d3fcd2baa7fb70">  201</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a56b54c09195f0b8c12d3fcd2baa7fb70">measurement_uncertainty_r</a> =</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      std::invoke_result_t&lt;Divide&lt;Output, Output&gt;, Output, Output&gt;;</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa75ec19accf3a89cc1aaef008a79adf3">  203</a></span>&#160;  <span class="keyword">using</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#aa75ec19accf3a89cc1aaef008a79adf3">control_g</a> = std::invoke_result_t&lt;Divide&lt;State, Output&gt;, State, Output&gt;;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">  205</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#a66add6395a46dfb17547075e42613f26">state_x</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">state</a>;</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">  206</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#affbdb02f408d84c4a845dff9563e9847">estimate_uncertainty_p</a> <a class="code" href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">estimate_uncertainty</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aba1ecbde914cc2fac4665ef4a78defe4">  207</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#a4339d154f26daedf40715e5d824b8353">state_transition_f</a> (*<a class="code" href="classfcarouge_1_1kalman.xhtml#aba1ecbde914cc2fac4665ef4a78defe4">transition_state</a>)();</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9ccbd2f6e4b08e0aeb06713ce6592f03">  208</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#a13d8e6b961de3e0237a8b3510c6bcbe9">process_noise_uncertainty_q</a> (*<a class="code" href="classfcarouge_1_1kalman.xhtml#a9ccbd2f6e4b08e0aeb06713ce6592f03">noise_process</a>)();</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a70df4cde595667d2ef74416035f20f3e">  209</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#ae5b74959471fe83fc610c61f46046fd4">observation_h</a> (*<a class="code" href="classfcarouge_1_1kalman.xhtml#a70df4cde595667d2ef74416035f20f3e">transition_observation</a>)();</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2cc7907dcec448f501675fba396732e9">  210</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#a56b54c09195f0b8c12d3fcd2baa7fb70">measurement_uncertainty_r</a> (*<a class="code" href="classfcarouge_1_1kalman.xhtml#a2cc7907dcec448f501675fba396732e9">noise_observation</a>)();</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab8de4645e2f46c83e3347946d3f1b2ce">  211</a></span>&#160;  <a class="code" href="classfcarouge_1_1kalman.xhtml#aa75ec19accf3a89cc1aaef008a79adf3">control_g</a> (*<a class="code" href="classfcarouge_1_1kalman.xhtml#ab8de4645e2f46c83e3347946d3f1b2ce">transition_control</a>)();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a69d976c1d9b106014ff99ebb0d4e6422">  213</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a69d976c1d9b106014ff99ebb0d4e6422">predict</a>()</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> f{ <a class="code" href="classfcarouge_1_1kalman.xhtml#aba1ecbde914cc2fac4665ef4a78defe4">transition_state</a>() };</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> q{ <a class="code" href="classfcarouge_1_1kalman.xhtml#a9ccbd2f6e4b08e0aeb06713ce6592f03">noise_process</a>() };</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    fcarouge::predict&lt;Transpose, Symmetrize&gt;(<a class="code" href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">state</a>, <a class="code" href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">estimate_uncertainty</a>, f, q);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1ab76d0861c933b6aded2f23b9b9623e">  220</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a1ab76d0861c933b6aded2f23b9b9623e">predict</a>(<span class="keyword">const</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#a9cab65fe7c4583e2b3fae46a330b18e6">input_u</a> &amp;input)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> f{ <a class="code" href="classfcarouge_1_1kalman.xhtml#aba1ecbde914cc2fac4665ef4a78defe4">transition_state</a>() };</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> q{ <a class="code" href="classfcarouge_1_1kalman.xhtml#a9ccbd2f6e4b08e0aeb06713ce6592f03">noise_process</a>() };</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> g{ <a class="code" href="classfcarouge_1_1kalman.xhtml#ab8de4645e2f46c83e3347946d3f1b2ce">transition_control</a>() };</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    fcarouge::predict&lt;Transpose, Symmetrize&gt;(<a class="code" href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">state</a>, <a class="code" href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">estimate_uncertainty</a>, f, q,</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                             g, input);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa5b0289f4e8a4682487c5a2c0fcca097">  229</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#aa5b0289f4e8a4682487c5a2c0fcca097">update</a>(<span class="keyword">const</span> <a class="code" href="classfcarouge_1_1kalman.xhtml#ace2ad9bd9be720f51660009b53243ffc">output_z</a> &amp;output)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> h{ <a class="code" href="classfcarouge_1_1kalman.xhtml#a70df4cde595667d2ef74416035f20f3e">transition_observation</a>() };</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> r{ <a class="code" href="classfcarouge_1_1kalman.xhtml#a2cc7907dcec448f501675fba396732e9">noise_observation</a>() };</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    fcarouge::update&lt;Transpose, Symmetrize, Divide, Identity&gt;(</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">state</a>, <a class="code" href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">estimate_uncertainty</a>, h, r, output);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;};</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00187">kalman.hpp:188</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a13d8e6b961de3e0237a8b3510c6bcbe9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a13d8e6b961de3e0237a8b3510c6bcbe9">fcarouge::kalman::process_noise_uncertainty_q</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; process_noise_uncertainty_q</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00195">kalman.hpp:196</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1ab76d0861c933b6aded2f23b9b9623e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1ab76d0861c933b6aded2f23b9b9623e">fcarouge::kalman::predict</a></div><div class="ttdeci">void predict(const input_u &amp;input)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00220">kalman.hpp:220</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2cc7907dcec448f501675fba396732e9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2cc7907dcec448f501675fba396732e9">fcarouge::kalman::noise_observation</a></div><div class="ttdeci">measurement_uncertainty_r(* noise_observation)()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00210">kalman.hpp:210</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4339d154f26daedf40715e5d824b8353"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4339d154f26daedf40715e5d824b8353">fcarouge::kalman::state_transition_f</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; state_transition_f</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00197">kalman.hpp:198</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a56b54c09195f0b8c12d3fcd2baa7fb70"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a56b54c09195f0b8c12d3fcd2baa7fb70">fcarouge::kalman::measurement_uncertainty_r</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; Output, Output &gt;, Output, Output &gt; measurement_uncertainty_r</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00201">kalman.hpp:202</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a66add6395a46dfb17547075e42613f26"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a66add6395a46dfb17547075e42613f26">fcarouge::kalman::state_x</a></div><div class="ttdeci">State state_x</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00190">kalman.hpp:190</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a69d976c1d9b106014ff99ebb0d4e6422"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a69d976c1d9b106014ff99ebb0d4e6422">fcarouge::kalman::predict</a></div><div class="ttdeci">void predict()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00213">kalman.hpp:213</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a70df4cde595667d2ef74416035f20f3e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a70df4cde595667d2ef74416035f20f3e">fcarouge::kalman::transition_observation</a></div><div class="ttdeci">observation_h(* transition_observation)()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00209">kalman.hpp:209</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9cab65fe7c4583e2b3fae46a330b18e6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9cab65fe7c4583e2b3fae46a330b18e6">fcarouge::kalman::input_u</a></div><div class="ttdeci">Input input_u</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00192">kalman.hpp:192</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9ccbd2f6e4b08e0aeb06713ce6592f03"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9ccbd2f6e4b08e0aeb06713ce6592f03">fcarouge::kalman::noise_process</a></div><div class="ttdeci">process_noise_uncertainty_q(* noise_process)()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00208">kalman.hpp:208</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa5b0289f4e8a4682487c5a2c0fcca097"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa5b0289f4e8a4682487c5a2c0fcca097">fcarouge::kalman::update</a></div><div class="ttdeci">void update(const output_z &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00229">kalman.hpp:229</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aa75ec19accf3a89cc1aaef008a79adf3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aa75ec19accf3a89cc1aaef008a79adf3">fcarouge::kalman::control_g</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, Output &gt;, State, Output &gt; control_g</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00203">kalman.hpp:203</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab8de4645e2f46c83e3347946d3f1b2ce"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab8de4645e2f46c83e3347946d3f1b2ce">fcarouge::kalman::transition_control</a></div><div class="ttdeci">control_g(* transition_control)()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00211">kalman.hpp:211</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aba1ecbde914cc2fac4665ef4a78defe4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aba1ecbde914cc2fac4665ef4a78defe4">fcarouge::kalman::transition_state</a></div><div class="ttdeci">state_transition_f(* transition_state)()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00207">kalman.hpp:207</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acc2408de5fd79926184b4e739b9f1ba0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acc2408de5fd79926184b4e739b9f1ba0">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">estimate_uncertainty_p estimate_uncertainty</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00206">kalman.hpp:206</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ace2ad9bd9be720f51660009b53243ffc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ace2ad9bd9be720f51660009b53243ffc">fcarouge::kalman::output_z</a></div><div class="ttdeci">Output output_z</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00191">kalman.hpp:191</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ae5b74959471fe83fc610c61f46046fd4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ae5b74959471fe83fc610c61f46046fd4">fcarouge::kalman::observation_h</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; Output, State &gt;, Output, State &gt; observation_h</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00199">kalman.hpp:200</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af9904d3f701ed6269f098001829e7d29"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af9904d3f701ed6269f098001829e7d29">fcarouge::kalman::state</a></div><div class="ttdeci">state_x state</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00205">kalman.hpp:205</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_affbdb02f408d84c4a845dff9563e9847"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#affbdb02f408d84c4a845dff9563e9847">fcarouge::kalman::estimate_uncertainty_p</a></div><div class="ttdeci">std::invoke_result_t&lt; Divide&lt; State, State &gt;, State, State &gt; estimate_uncertainty_p</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00193">kalman.hpp:194</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="benchmark_8cpp_source.xhtml#l00043">benchmark.cpp:44</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a276af45ca31e2b68b57a4b4015363984"><div class="ttname"><a href="namespacefcarouge.xhtml#a276af45ca31e2b68b57a4b4015363984">fcarouge::update</a></div><div class="ttdeci">void update(auto &amp;x, auto &amp;p, const auto &amp;h, const auto &amp;r, const auto &amp;z)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00170">kalman.hpp:170</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a4dc9ea585453f05f12e9f765d08d545f"><div class="ttname"><a href="namespacefcarouge.xhtml#a4dc9ea585453f05f12e9f765d08d545f">fcarouge::extrapolate_state</a></div><div class="ttdeci">auto extrapolate_state(const auto &amp;x, const auto &amp;f)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00077">kalman.hpp:77</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a61240a1a51b9bc2273b24f0459f4fc21"><div class="ttname"><a href="namespacefcarouge.xhtml#a61240a1a51b9bc2273b24f0459f4fc21">fcarouge::update_covariance</a></div><div class="ttdeci">auto update_covariance(const auto &amp;p, const auto &amp;k, const auto &amp;h, const auto &amp;r)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00138">kalman.hpp:138</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a61a69029a3b95a26748d6bb35e6b33b6"><div class="ttname"><a href="namespacefcarouge.xhtml#a61a69029a3b95a26748d6bb35e6b33b6">fcarouge::update_state</a></div><div class="ttdeci">auto update_state(const auto &amp;x, const auto &amp;k, const auto &amp;z, const auto &amp;h)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00129">kalman.hpp:129</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a64c7abdbe0f3ab4923de70c86f602037"><div class="ttname"><a href="namespacefcarouge.xhtml#a64c7abdbe0f3ab4923de70c86f602037">fcarouge::predict</a></div><div class="ttdeci">void predict(auto &amp;x, auto &amp;p, const auto &amp;f, const auto &amp;q)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00106">kalman.hpp:106</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a9fa8ef3ebc122ecb5970fe5d5da5cb3d"><div class="ttname"><a href="namespacefcarouge.xhtml#a9fa8ef3ebc122ecb5970fe5d5da5cb3d">fcarouge::extrapolate_covariance</a></div><div class="ttdeci">auto extrapolate_covariance(const auto &amp;p, const auto &amp;f, const auto &amp;q)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00093">kalman.hpp:93</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_afae063c524e1b8112db42713307a7ee3"><div class="ttname"><a href="namespacefcarouge.xhtml#afae063c524e1b8112db42713307a7ee3">fcarouge::weight_gain</a></div><div class="ttdeci">auto weight_gain(const auto &amp;p, const auto &amp;h, const auto &amp;r)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00154">kalman.hpp:154</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divide_xhtml"><div class="ttname"><a href="structfcarouge_1_1divide.xhtml">fcarouge::divide</a></div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1divide_xhtml_a96aeaad0ad45ee085036258dc8e332f2"><div class="ttname"><a href="structfcarouge_1_1divide.xhtml#a96aeaad0ad45ee085036258dc8e332f2">fcarouge::divide::operator()</a></div><div class="ttdeci">auto operator()(const Numerator &amp;numerator, const Denominator &amp;denominator)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00064">kalman.hpp:64</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity_xhtml"><div class="ttname"><a href="structfcarouge_1_1identity.xhtml">fcarouge::identity</a></div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00070">kalman.hpp:70</a></div></div>
<div class="ttc" id="astructfcarouge_1_1identity_xhtml_a72feaecdc46f00a6cc472843b3757371"><div class="ttname"><a href="structfcarouge_1_1identity.xhtml#a72feaecdc46f00a6cc472843b3757371">fcarouge::identity::operator()</a></div><div class="ttdeci">Type operator()()</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00071">kalman.hpp:71</a></div></div>
<div class="ttc" id="astructfcarouge_1_1symmetrize_xhtml"><div class="ttname"><a href="structfcarouge_1_1symmetrize.xhtml">fcarouge::symmetrize</a></div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00056">kalman.hpp:56</a></div></div>
<div class="ttc" id="astructfcarouge_1_1symmetrize_xhtml_ad415bde58d2d636cea9deb94765115f6"><div class="ttname"><a href="structfcarouge_1_1symmetrize.xhtml#ad415bde58d2d636cea9deb94765115f6">fcarouge::symmetrize::operator()</a></div><div class="ttdeci">auto operator()(const Type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00057">kalman.hpp:57</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transpose_xhtml"><div class="ttname"><a href="structfcarouge_1_1transpose.xhtml">fcarouge::transpose</a></div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00049">kalman.hpp:49</a></div></div>
<div class="ttc" id="astructfcarouge_1_1transpose_xhtml_a8512af46ed8ccaf21f00a3570f479f4f"><div class="ttname"><a href="structfcarouge_1_1transpose.xhtml#a8512af46ed8ccaf21f00a3570f479f4f">fcarouge::transpose::operator()</a></div><div class="ttdeci">auto operator()(const Type &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00050">kalman.hpp:50</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Sun Apr 3 2022 04:55:30 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
