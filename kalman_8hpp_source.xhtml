<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: include/fcarouge/kalman.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.1.0</span>
   </div>
   <div id="projectbrief">Kalman Filter for C++</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search",'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('kalman_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle"><div class="title">kalman.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="kalman_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*_  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> | |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> | &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> |  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> | . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> |_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter for C++</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.1.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_KALMAN_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#include &quot;<a class="code" href="internal_2kalman_8hpp.xhtml">internal/kalman.hpp</a>&quot;</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#include &quot;<a class="code" href="kalman__operator_8hpp.xhtml">internal/kalman_operator.hpp</a>&quot;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#include &lt;functional&gt;</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge.xhtml">fcarouge</a></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="keyword">template</span> &lt;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="keyword">typename</span> Type = double, <span class="keyword">typename</span> State = Type, <span class="keyword">typename</span> Output = State,</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keyword">typename</span> Input = State, <span class="keyword">typename</span> Transpose = std::identity,</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keyword">typename</span> Symmetrize = std::identity, <span class="keyword">typename</span> Divide = std::divides&lt;void&gt;,</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keyword">typename</span> Identity = internal::identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml">  118</a></span><span class="keyword">class </span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>{</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2879383b3c018de9da9801d2082f9713">  125</a></span>  <span class="keyword">using</span> <a class="code hl_struct" href="structfcarouge_1_1internal_1_1kalman.xhtml">implementation</a> =</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      <a class="code hl_struct" href="structfcarouge_1_1internal_1_1kalman.xhtml">internal::kalman</a>&lt;State, Output, Input, Transpose, Symmetrize, Divide,</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>                       Identity, PredictionArguments...&gt;;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8c5b5958b505bc7dbfe396559d408a8a">  136</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a8c5b5958b505bc7dbfe396559d408a8a">value_type</a> = Type;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">  139</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">implementation::state</a>;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">  144</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">implementation::output</a>;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a84b9242641a17d3ee45167fcca8c9e0c">  147</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a84b9242641a17d3ee45167fcca8c9e0c">input</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">implementation::input</a>;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">  152</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">implementation::estimate_uncertainty</a>;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">  155</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">implementation::process_uncertainty</a>;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">  158</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">implementation::output_uncertainty</a>;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">  163</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">implementation::state_transition</a>;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">  168</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">implementation::output_model</a>;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">  173</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">implementation::input_control</a>;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">  176</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">gain</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">implementation::gain</a>;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">  179</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a> = <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">implementation::innovation</a>;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">  182</a></span>  <span class="keyword">using</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">innovation_uncertainty</a> =</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>      <span class="keyword">typename</span> <a class="code hl_typedef" href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">implementation::innovation_uncertainty</a>;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3711c00c961692b20c398c21f83a11cc">  193</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3711c00c961692b20c398c21f83a11cc">kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#abdd41b063f863347987d886c49621e39">  204</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#abdd41b063f863347987d886c49621e39">kalman</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2c39c64ad83dcc6fa948d3b2c08e60aa">  216</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2c39c64ad83dcc6fa948d3b2c08e60aa">kalman</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span> = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8270d34b62666449cb9acb43fba6a7ae">  230</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a8270d34b62666449cb9acb43fba6a7ae">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;other) -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#afb3443e4f233dc6a775551f074148b2e">  246</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#afb3443e4f233dc6a775551f074148b2e">operator=</a>(<a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp;&amp;other) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>      -&gt; <a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a> &amp; = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af33cdb91db27c653f109a06c016f9cf7">  252</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af33cdb91db27c653f109a06c016f9cf7">~kalman</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state estimate vector X is unexpectedly &quot;</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a>;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;value);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;&amp;value);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  [[nodiscard(&quot;The returned <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4902a8386c2506824507080a57170bc6">observation</a> vector Z is unexpectedly &quot;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a775d92b5ed7b1cdc2b6591dc4267af7e">z</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a>;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>  [[nodiscard(&quot;The returned control vector U is unexpectedly &quot;</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4f812a58b1635e7a8f9e6f613b7e24f0">  328</a></span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4f812a58b1635e7a8f9e6f613b7e24f0">u</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a84b9242641a17d3ee45167fcca8c9e0c">input</a>;</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  [[nodiscard(&quot;The returned estimated covariance matrix P is unexpectedly &quot;</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a>;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span> </div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span> </div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span> </div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  [[nodiscard(&quot;The returned process noise covariance matrix Q is unexpectedly &quot;</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a>;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span> </div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span> </div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a556623f2e309d756ef375ed0171a471b">  430</a></span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>(const auto &amp;callable) requires std::is_invocable_r_v &lt;</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a>,</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>      std::decay_t&lt;decltype(callable)&gt;,</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>  const PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>  {</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a544930b1a04f11123f9cb61b79556e">noise_process_q</a> = callable;</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>  }</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span> </div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac778dee689935e9fd7f22e6279404c8b">  448</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac778dee689935e9fd7f22e6279404c8b">q</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a>,</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>  <span class="keyword">const</span> PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>  {</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a544930b1a04f11123f9cb61b79556e">noise_process_q</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>  }</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span> </div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation noise covariance matrix R is &quot;</span></div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>              <span class="stringliteral">&quot;unexpectedly discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a>;</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span> </div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> &amp;value);</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span> </div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> &amp;&amp;value);</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span> </div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span> </div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span> </div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adfdfd0aedf4a47d4e7aee854819f0a6a">  512</a></span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>(const auto &amp;callable) requires std::is_invocable_r_v&lt;</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a>, std::decay_t&lt;decltype(callable)&gt;&gt;</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>  {</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a67cfd73334ae1202616e8e24c9b5c6d9">noise_observation_r</a> = callable;</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>  }</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span> </div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a3f0df6719f062e036eb0d0ba589057c2">  527</a></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a3f0df6719f062e036eb0d0ba589057c2">r</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v&lt;</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a>, std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;&gt;</div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>  {</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a67cfd73334ae1202616e8e24c9b5c6d9">noise_observation_r</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>  }</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span> </div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>  [[nodiscard(<span class="stringliteral">&quot;The returned state transition matrix F is unexpectedly &quot;</span></div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a>;</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span> </div>
<div class="line"><a id="l00547" name="l00547"></a><span class="lineno">  547</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> &amp;value);</div>
<div class="line"><a id="l00548" name="l00548"></a><span class="lineno">  548</span> </div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> &amp;&amp;value);</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span> </div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span> </div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span> </div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span>  inline constexpr <span class="keywordtype">void</span></div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adc62beb3c4966490cf0beb903ca2c32e">  586</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>(const auto &amp;callable) requires std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a>,</div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span>      std::decay_t&lt;decltype(callable)&gt;,</div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span>  const PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>  {</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5de3662dc7198c5cec86f743c6015aa7">transition_state_f</a> = callable;</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>  }</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span> </div>
<div class="line"><a id="l00602" name="l00602"></a><span class="lineno">  602</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00603" name="l00603"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af60d3900dcf7aa355aec9cbeb49717c1">  603</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af60d3900dcf7aa355aec9cbeb49717c1">f</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a>,</div>
<div class="line"><a id="l00604" name="l00604"></a><span class="lineno">  604</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno">  605</span>  <span class="keyword">const</span> PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span>  {</div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a5de3662dc7198c5cec86f743c6015aa7">transition_state_f</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>  }</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span> </div>
<div class="line"><a id="l00615" name="l00615"></a><span class="lineno">  615</span>  [[nodiscard(<span class="stringliteral">&quot;The returned observation transition matrix H is unexpectedly &quot;</span></div>
<div class="line"><a id="l00616" name="l00616"></a><span class="lineno">  616</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00617" name="l00617"></a><span class="lineno">  617</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a>;</div>
<div class="line"><a id="l00618" name="l00618"></a><span class="lineno">  618</span> </div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> &amp;value);</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span> </div>
<div class="line"><a id="l00631" name="l00631"></a><span class="lineno">  631</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> &amp;&amp;value);</div>
<div class="line"><a id="l00632" name="l00632"></a><span class="lineno">  632</span> </div>
<div class="line"><a id="l00641" name="l00641"></a><span class="lineno">  641</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00642" name="l00642"></a><span class="lineno">  642</span> </div>
<div class="line"><a id="l00651" name="l00651"></a><span class="lineno">  651</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00652" name="l00652"></a><span class="lineno">  652</span> </div>
<div class="line"><a id="l00664" name="l00664"></a><span class="lineno">  664</span>  inline constexpr <span class="keywordtype">void</span></div>
<div class="line"><a id="l00665" name="l00665"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a87d960bf092b4d09b96cab469c41bdcf">  665</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>(const auto &amp;callable) requires std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a>,</div>
<div class="line"><a id="l00666" name="l00666"></a><span class="lineno">  666</span>      std::decay_t&lt;decltype(callable)&gt;,</div>
<div class="line"><a id="l00667" name="l00667"></a><span class="lineno">  667</span>  const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp; &gt;</div>
<div class="line"><a id="l00668" name="l00668"></a><span class="lineno">  668</span>  {</div>
<div class="line"><a id="l00669" name="l00669"></a><span class="lineno">  669</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">observation_state_h</a> = callable;</div>
<div class="line"><a id="l00670" name="l00670"></a><span class="lineno">  670</span>  }</div>
<div class="line"><a id="l00671" name="l00671"></a><span class="lineno">  671</span> </div>
<div class="line"><a id="l00681" name="l00681"></a><span class="lineno">  681</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00682" name="l00682"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0a97953f6cfb11823bf7175a859f383c">  682</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a0a97953f6cfb11823bf7175a859f383c">h</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a>,</div>
<div class="line"><a id="l00683" name="l00683"></a><span class="lineno">  683</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00684" name="l00684"></a><span class="lineno">  684</span>  <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp; &gt;</div>
<div class="line"><a id="l00685" name="l00685"></a><span class="lineno">  685</span>  {</div>
<div class="line"><a id="l00686" name="l00686"></a><span class="lineno">  686</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">observation_state_h</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00687" name="l00687"></a><span class="lineno">  687</span>  }</div>
<div class="line"><a id="l00688" name="l00688"></a><span class="lineno">  688</span> </div>
<div class="line"><a id="l00694" name="l00694"></a><span class="lineno">  694</span>  [[nodiscard(<span class="stringliteral">&quot;The returned control transition matrix G is unexpectedly &quot;</span></div>
<div class="line"><a id="l00695" name="l00695"></a><span class="lineno">  695</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00696" name="l00696"></a><span class="lineno">  696</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a>;</div>
<div class="line"><a id="l00697" name="l00697"></a><span class="lineno">  697</span> </div>
<div class="line"><a id="l00703" name="l00703"></a><span class="lineno">  703</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>(const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> &amp;value);</div>
<div class="line"><a id="l00704" name="l00704"></a><span class="lineno">  704</span> </div>
<div class="line"><a id="l00710" name="l00710"></a><span class="lineno">  710</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> &amp;&amp;value);</div>
<div class="line"><a id="l00711" name="l00711"></a><span class="lineno">  711</span> </div>
<div class="line"><a id="l00720" name="l00720"></a><span class="lineno">  720</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>(const auto &amp;value, const auto &amp;...values);</div>
<div class="line"><a id="l00721" name="l00721"></a><span class="lineno">  721</span> </div>
<div class="line"><a id="l00730" name="l00730"></a><span class="lineno">  730</span>  inline constexpr <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>(auto &amp;&amp;value, auto &amp;&amp;...values);</div>
<div class="line"><a id="l00731" name="l00731"></a><span class="lineno">  731</span> </div>
<div class="line"><a id="l00741" name="l00741"></a><span class="lineno">  741</span>  inline constexpr <span class="keywordtype">void</span></div>
<div class="line"><a id="l00742" name="l00742"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a35d105bfccef4f52164862ef81517e10">  742</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>(const auto &amp;callable) requires std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a>,</div>
<div class="line"><a id="l00743" name="l00743"></a><span class="lineno">  743</span>      std::decay_t&lt;decltype(callable)&gt;,</div>
<div class="line"><a id="l00744" name="l00744"></a><span class="lineno">  744</span>  const PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00745" name="l00745"></a><span class="lineno">  745</span>  {</div>
<div class="line"><a id="l00746" name="l00746"></a><span class="lineno">  746</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">transition_control_g</a> = callable;</div>
<div class="line"><a id="l00747" name="l00747"></a><span class="lineno">  747</span>  }</div>
<div class="line"><a id="l00748" name="l00748"></a><span class="lineno">  748</span> </div>
<div class="line"><a id="l00758" name="l00758"></a><span class="lineno">  758</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00759" name="l00759"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab2db8e0f326cb9e620168480899f80e7">  759</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ab2db8e0f326cb9e620168480899f80e7">g</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a>,</div>
<div class="line"><a id="l00760" name="l00760"></a><span class="lineno">  760</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00761" name="l00761"></a><span class="lineno">  761</span>  <span class="keyword">const</span> PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00762" name="l00762"></a><span class="lineno">  762</span>  {</div>
<div class="line"><a id="l00763" name="l00763"></a><span class="lineno">  763</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">transition_control_g</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00764" name="l00764"></a><span class="lineno">  764</span>  }</div>
<div class="line"><a id="l00765" name="l00765"></a><span class="lineno">  765</span> </div>
<div class="line"><a id="l00771" name="l00771"></a><span class="lineno">  771</span>  [[nodiscard(<span class="stringliteral">&quot;The returned gain matrix K is unexpectedly &quot;</span></div>
<div class="line"><a id="l00772" name="l00772"></a><span class="lineno">  772</span>              <span class="stringliteral">&quot;discarded.&quot;</span>)]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00773" name="l00773"></a><span class="lineno">  773</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4f4614f96ad5a959cc04c3b76b30df56">k</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">gain</a>;</div>
<div class="line"><a id="l00774" name="l00774"></a><span class="lineno">  774</span> </div>
<div class="line"><a id="l00780" name="l00780"></a><span class="lineno">  780</span>  [[nodiscard(&quot;The returned <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a> vector Y is unexpectedly &quot;</div>
<div class="line"><a id="l00781" name="l00781"></a><span class="lineno">  781</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00782" name="l00782"></a><span class="lineno">  782</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a539aa5fc86af0bb2bdbb2d1c834b61a4">y</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a>;</div>
<div class="line"><a id="l00783" name="l00783"></a><span class="lineno">  783</span> </div>
<div class="line"><a id="l00789" name="l00789"></a><span class="lineno">  789</span>  [[nodiscard(&quot;The returned <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a> uncertainty matrix S is unexpectedly &quot;</div>
<div class="line"><a id="l00790" name="l00790"></a><span class="lineno">  790</span>              &quot;discarded.&quot;)]] inline constexpr auto</div>
<div class="line"><a id="l00791" name="l00791"></a><span class="lineno">  791</span>  <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4835d24ec7b4fd4cc7197b7ccf73f617">s</a>() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">innovation_uncertainty</a>;</div>
<div class="line"><a id="l00792" name="l00792"></a><span class="lineno">  792</span> </div>
<div class="line"><a id="l00793" name="l00793"></a><span class="lineno">  793</span>  inline constexpr <span class="keywordtype">void</span></div>
<div class="line"><a id="l00794" name="l00794"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4a09b31c36d29ad4eb014682a730d01d">  794</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4a09b31c36d29ad4eb014682a730d01d">transition</a>(const auto &amp;callable) requires std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a>,</div>
<div class="line"><a id="l00795" name="l00795"></a><span class="lineno">  795</span>      std::decay_t&lt;decltype(callable)&gt;,</div>
<div class="line"><a id="l00796" name="l00796"></a><span class="lineno">  796</span>  const <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;, const PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00797" name="l00797"></a><span class="lineno">  797</span>  {</div>
<div class="line"><a id="l00798" name="l00798"></a><span class="lineno">  798</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">transition</a> = callable;</div>
<div class="line"><a id="l00799" name="l00799"></a><span class="lineno">  799</span>  }</div>
<div class="line"><a id="l00800" name="l00800"></a><span class="lineno">  800</span> </div>
<div class="line"><a id="l00801" name="l00801"></a><span class="lineno">  801</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00802" name="l00802"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aeed636a3d67148c33752dd6d4be4381d">  802</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#aeed636a3d67148c33752dd6d4be4381d">transition</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a>,</div>
<div class="line"><a id="l00803" name="l00803"></a><span class="lineno">  803</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00804" name="l00804"></a><span class="lineno">  804</span>  <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;, <span class="keyword">const</span> PredictionArguments &amp;... &gt;</div>
<div class="line"><a id="l00805" name="l00805"></a><span class="lineno">  805</span>  {</div>
<div class="line"><a id="l00806" name="l00806"></a><span class="lineno">  806</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">transition</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00807" name="l00807"></a><span class="lineno">  807</span>  }</div>
<div class="line"><a id="l00808" name="l00808"></a><span class="lineno">  808</span> </div>
<div class="line"><a id="l00809" name="l00809"></a><span class="lineno">  809</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00810" name="l00810"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4902a8386c2506824507080a57170bc6">  810</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4902a8386c2506824507080a57170bc6">observation</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a>,</div>
<div class="line"><a id="l00811" name="l00811"></a><span class="lineno">  811</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00812" name="l00812"></a><span class="lineno">  812</span>  <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp; &gt;</div>
<div class="line"><a id="l00813" name="l00813"></a><span class="lineno">  813</span>  {</div>
<div class="line"><a id="l00814" name="l00814"></a><span class="lineno">  814</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">observation</a> = callable;</div>
<div class="line"><a id="l00815" name="l00815"></a><span class="lineno">  815</span>  }</div>
<div class="line"><a id="l00816" name="l00816"></a><span class="lineno">  816</span> </div>
<div class="line"><a id="l00817" name="l00817"></a><span class="lineno">  817</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00818" name="l00818"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a2c15cbc941160cab5c51f5b1612714b8">  818</a></span>      <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a2c15cbc941160cab5c51f5b1612714b8">observation</a>(<span class="keyword">auto</span> &amp;&amp;callable) <span class="keyword">requires</span> std::is_invocable_r_v &lt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a>,</div>
<div class="line"><a id="l00819" name="l00819"></a><span class="lineno">  819</span>      std::decay_t&lt;<span class="keyword">decltype</span>(callable)&gt;,</div>
<div class="line"><a id="l00820" name="l00820"></a><span class="lineno">  820</span>  <span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp; &gt;</div>
<div class="line"><a id="l00821" name="l00821"></a><span class="lineno">  821</span>  {</div>
<div class="line"><a id="l00822" name="l00822"></a><span class="lineno">  822</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_variable" href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">observation</a> = std::forward&lt;decltype(callable)&gt;(callable);</div>
<div class="line"><a id="l00823" name="l00823"></a><span class="lineno">  823</span>  }</div>
<div class="line"><a id="l00824" name="l00824"></a><span class="lineno">  824</span> </div>
<div class="line"><a id="l00826" name="l00826"></a><span class="lineno">  826</span> </div>
<div class="line"><a id="l00829" name="l00829"></a><span class="lineno">  829</span> </div>
<div class="line"><a id="l00840" name="l00840"></a><span class="lineno">  840</span>  <span class="comment">// fair matching rule.</span></div>
<div class="line"><a id="l00858" name="l00858"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1e49b408cd795e92589a34f506813a6a">  858</a></span><span class="comment"></span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a1e49b408cd795e92589a34f506813a6a">operator()</a>(<span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line"><a id="l00859" name="l00859"></a><span class="lineno">  859</span>                                   <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...input_u,</div>
<div class="line"><a id="l00860" name="l00860"></a><span class="lineno">  860</span>                                   <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...output_z)</div>
<div class="line"><a id="l00861" name="l00861"></a><span class="lineno">  861</span>  {</div>
<div class="line"><a id="l00862" name="l00862"></a><span class="lineno">  862</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_function" href="structfcarouge_1_1internal_1_1kalman.xhtml#a549f84cd3dc8cbb3fdefd52aef3c35cc">update</a>(output_z...);</div>
<div class="line"><a id="l00863" name="l00863"></a><span class="lineno">  863</span>    <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>.<a class="code hl_function" href="structfcarouge_1_1internal_1_1kalman.xhtml#ab86860dc9f2992f0fb3c6b71e980c187">predict</a>(arguments..., input_u...);</div>
<div class="line"><a id="l00864" name="l00864"></a><span class="lineno">  864</span>  }</div>
<div class="line"><a id="l00865" name="l00865"></a><span class="lineno">  865</span> </div>
<div class="line"><a id="l00879" name="l00879"></a><span class="lineno">  879</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af0c0297d0d677737625e9fa99c2bb28f">update</a>(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...output_z);</div>
<div class="line"><a id="l00880" name="l00880"></a><span class="lineno">  880</span> </div>
<div class="line"><a id="l00896" name="l00896"></a><span class="lineno">  896</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acd1393a459126fdd0fa1e276e2f7d0bc">predict</a>(<span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line"><a id="l00897" name="l00897"></a><span class="lineno">  897</span>                                <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...input_u);</div>
<div class="line"><a id="l00898" name="l00898"></a><span class="lineno">  898</span> </div>
<div class="line"><a id="l00900" name="l00900"></a><span class="lineno">  900</span> </div>
<div class="line"><a id="l00901" name="l00901"></a><span class="lineno">  901</span>  <span class="keyword">private</span>:</div>
<div class="line"><a id="l00904" name="l00904"></a><span class="lineno">  904</span> </div>
<div class="line"><a id="l00906" name="l00906"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">  906</a></span>  <a class="code hl_struct" href="structfcarouge_1_1internal_1_1kalman.xhtml">implementation</a> <a class="code hl_variable" href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">filter</a>;</div>
<div class="line"><a id="l00907" name="l00907"></a><span class="lineno">  907</span> </div>
<div class="line"><a id="l00909" name="l00909"></a><span class="lineno">  909</span>};</div>
<div class="line"><a id="l00910" name="l00910"></a><span class="lineno">  910</span> </div>
<div class="line"><a id="l00911" name="l00911"></a><span class="lineno">  911</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00912" name="l00912"></a><span class="lineno">  912</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00913" name="l00913"></a><span class="lineno">  913</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00914" name="l00914"></a><span class="lineno">  914</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00915" name="l00915"></a><span class="lineno">  915</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00916" name="l00916"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">  916</a></span>       PredictionArguments...&gt;::x() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a></div>
<div class="line"><a id="l00917" name="l00917"></a><span class="lineno">  917</span>{</div>
<div class="line"><a id="l00918" name="l00918"></a><span class="lineno">  918</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a>;</div>
<div class="line"><a id="l00919" name="l00919"></a><span class="lineno">  919</span>}</div>
<div class="line"><a id="l00920" name="l00920"></a><span class="lineno">  920</span> </div>
<div class="line"><a id="l00921" name="l00921"></a><span class="lineno">  921</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00922" name="l00922"></a><span class="lineno">  922</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00923" name="l00923"></a><span class="lineno">  923</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00924" name="l00924"></a><span class="lineno">  924</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00925" name="l00925"></a><span class="lineno">  925</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00926" name="l00926"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae555fabafed5e62507a3277259a8d5cf">  926</a></span>       PredictionArguments...&gt;::x(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;value)</div>
<div class="line"><a id="l00927" name="l00927"></a><span class="lineno">  927</span>{</div>
<div class="line"><a id="l00928" name="l00928"></a><span class="lineno">  928</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a> = value;</div>
<div class="line"><a id="l00929" name="l00929"></a><span class="lineno">  929</span>}</div>
<div class="line"><a id="l00930" name="l00930"></a><span class="lineno">  930</span> </div>
<div class="line"><a id="l00931" name="l00931"></a><span class="lineno">  931</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00932" name="l00932"></a><span class="lineno">  932</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00933" name="l00933"></a><span class="lineno">  933</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00934" name="l00934"></a><span class="lineno">  934</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00935" name="l00935"></a><span class="lineno">  935</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00936" name="l00936"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4143e5126dbb431afc6656388a60ecc6">  936</a></span>       PredictionArguments...&gt;::x(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a> &amp;&amp;value)</div>
<div class="line"><a id="l00937" name="l00937"></a><span class="lineno">  937</span>{</div>
<div class="line"><a id="l00938" name="l00938"></a><span class="lineno">  938</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a> = std::move(value);</div>
<div class="line"><a id="l00939" name="l00939"></a><span class="lineno">  939</span>}</div>
<div class="line"><a id="l00940" name="l00940"></a><span class="lineno">  940</span> </div>
<div class="line"><a id="l00941" name="l00941"></a><span class="lineno">  941</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00942" name="l00942"></a><span class="lineno">  942</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00943" name="l00943"></a><span class="lineno">  943</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00944" name="l00944"></a><span class="lineno">  944</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00945" name="l00945"></a><span class="lineno">  945</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00946" name="l00946"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acb35b3deb5e763d7da221a1fd68b640d">  946</a></span>       PredictionArguments...&gt;::x(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l00947" name="l00947"></a><span class="lineno">  947</span>{</div>
<div class="line"><a id="l00948" name="l00948"></a><span class="lineno">  948</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a> = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a>{ value, values... });</div>
<div class="line"><a id="l00949" name="l00949"></a><span class="lineno">  949</span>}</div>
<div class="line"><a id="l00950" name="l00950"></a><span class="lineno">  950</span> </div>
<div class="line"><a id="l00951" name="l00951"></a><span class="lineno">  951</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00952" name="l00952"></a><span class="lineno">  952</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00953" name="l00953"></a><span class="lineno">  953</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00954" name="l00954"></a><span class="lineno">  954</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00955" name="l00955"></a><span class="lineno">  955</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00956" name="l00956"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a17e7e3f2742bc4a51dabe18a18736a60">  956</a></span>       PredictionArguments...&gt;::x(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l00957" name="l00957"></a><span class="lineno">  957</span>{</div>
<div class="line"><a id="l00958" name="l00958"></a><span class="lineno">  958</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">x</a> = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">state</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l00959" name="l00959"></a><span class="lineno">  959</span>                              std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l00960" name="l00960"></a><span class="lineno">  960</span>}</div>
<div class="line"><a id="l00961" name="l00961"></a><span class="lineno">  961</span> </div>
<div class="line"><a id="l00962" name="l00962"></a><span class="lineno">  962</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00963" name="l00963"></a><span class="lineno">  963</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00964" name="l00964"></a><span class="lineno">  964</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00965" name="l00965"></a><span class="lineno">  965</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00966" name="l00966"></a><span class="lineno">  966</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00967" name="l00967"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a775d92b5ed7b1cdc2b6591dc4267af7e">  967</a></span>       PredictionArguments...&gt;::z() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">output</a></div>
<div class="line"><a id="l00968" name="l00968"></a><span class="lineno">  968</span>{</div>
<div class="line"><a id="l00969" name="l00969"></a><span class="lineno">  969</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a775d92b5ed7b1cdc2b6591dc4267af7e">z</a>;</div>
<div class="line"><a id="l00970" name="l00970"></a><span class="lineno">  970</span>}</div>
<div class="line"><a id="l00971" name="l00971"></a><span class="lineno">  971</span> </div>
<div class="line"><a id="l00972" name="l00972"></a><span class="lineno">  972</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00973" name="l00973"></a><span class="lineno">  973</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00974" name="l00974"></a><span class="lineno">  974</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00975" name="l00975"></a><span class="lineno">  975</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00976" name="l00976"></a><span class="lineno">  976</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00977" name="l00977"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">  977</a></span>       PredictionArguments...&gt;::p() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a></div>
<div class="line"><a id="l00978" name="l00978"></a><span class="lineno">  978</span>{</div>
<div class="line"><a id="l00979" name="l00979"></a><span class="lineno">  979</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a>;</div>
<div class="line"><a id="l00980" name="l00980"></a><span class="lineno">  980</span>}</div>
<div class="line"><a id="l00981" name="l00981"></a><span class="lineno">  981</span> </div>
<div class="line"><a id="l00982" name="l00982"></a><span class="lineno">  982</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00983" name="l00983"></a><span class="lineno">  983</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00984" name="l00984"></a><span class="lineno">  984</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00985" name="l00985"></a><span class="lineno">  985</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00986" name="l00986"></a><span class="lineno">  986</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00987" name="l00987"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a828b1ebb9a217690515d13e71919cb84">  987</a></span>       PredictionArguments...&gt;::p(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l00988" name="l00988"></a><span class="lineno">  988</span>{</div>
<div class="line"><a id="l00989" name="l00989"></a><span class="lineno">  989</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a> = value;</div>
<div class="line"><a id="l00990" name="l00990"></a><span class="lineno">  990</span>}</div>
<div class="line"><a id="l00991" name="l00991"></a><span class="lineno">  991</span> </div>
<div class="line"><a id="l00992" name="l00992"></a><span class="lineno">  992</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l00993" name="l00993"></a><span class="lineno">  993</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l00994" name="l00994"></a><span class="lineno">  994</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l00995" name="l00995"></a><span class="lineno">  995</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l00996" name="l00996"></a><span class="lineno">  996</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l00997" name="l00997"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ad7d96f203b15b786387c831a20764bd5">  997</a></span>       PredictionArguments...&gt;::p(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l00998" name="l00998"></a><span class="lineno">  998</span>{</div>
<div class="line"><a id="l00999" name="l00999"></a><span class="lineno">  999</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a> = std::move(value);</div>
<div class="line"><a id="l01000" name="l01000"></a><span class="lineno"> 1000</span>}</div>
<div class="line"><a id="l01001" name="l01001"></a><span class="lineno"> 1001</span> </div>
<div class="line"><a id="l01002" name="l01002"></a><span class="lineno"> 1002</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01003" name="l01003"></a><span class="lineno"> 1003</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01004" name="l01004"></a><span class="lineno"> 1004</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01005" name="l01005"></a><span class="lineno"> 1005</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01006" name="l01006"></a><span class="lineno"> 1006</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01007" name="l01007"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a72bcf8c51e2a64941314ab114d026b42"> 1007</a></span>       PredictionArguments...&gt;::p(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01008" name="l01008"></a><span class="lineno"> 1008</span>{</div>
<div class="line"><a id="l01009" name="l01009"></a><span class="lineno"> 1009</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a> = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l01010" name="l01010"></a><span class="lineno"> 1010</span>}</div>
<div class="line"><a id="l01011" name="l01011"></a><span class="lineno"> 1011</span> </div>
<div class="line"><a id="l01012" name="l01012"></a><span class="lineno"> 1012</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01013" name="l01013"></a><span class="lineno"> 1013</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01014" name="l01014"></a><span class="lineno"> 1014</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01015" name="l01015"></a><span class="lineno"> 1015</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01016" name="l01016"></a><span class="lineno"> 1016</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01017" name="l01017"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac2971219f51722acc7f16039b20b033f"> 1017</a></span>       PredictionArguments...&gt;::p(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01018" name="l01018"></a><span class="lineno"> 1018</span>{</div>
<div class="line"><a id="l01019" name="l01019"></a><span class="lineno"> 1019</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">p</a> = std::move(</div>
<div class="line"><a id="l01020" name="l01020"></a><span class="lineno"> 1020</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">estimate_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01021" name="l01021"></a><span class="lineno"> 1021</span>                            std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01022" name="l01022"></a><span class="lineno"> 1022</span>}</div>
<div class="line"><a id="l01023" name="l01023"></a><span class="lineno"> 1023</span> </div>
<div class="line"><a id="l01024" name="l01024"></a><span class="lineno"> 1024</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01025" name="l01025"></a><span class="lineno"> 1025</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01026" name="l01026"></a><span class="lineno"> 1026</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01027" name="l01027"></a><span class="lineno"> 1027</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01028" name="l01028"></a><span class="lineno"> 1028</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01029" name="l01029"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7"> 1029</a></span>       PredictionArguments...&gt;::q() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a></div>
<div class="line"><a id="l01030" name="l01030"></a><span class="lineno"> 1030</span>{</div>
<div class="line"><a id="l01031" name="l01031"></a><span class="lineno"> 1031</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a>;</div>
<div class="line"><a id="l01032" name="l01032"></a><span class="lineno"> 1032</span>}</div>
<div class="line"><a id="l01033" name="l01033"></a><span class="lineno"> 1033</span> </div>
<div class="line"><a id="l01035" name="l01035"></a><span class="lineno"> 1035</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01036" name="l01036"></a><span class="lineno"> 1036</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01037" name="l01037"></a><span class="lineno"> 1037</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01038" name="l01038"></a><span class="lineno"> 1038</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01039" name="l01039"></a><span class="lineno"> 1039</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01040" name="l01040"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a009565f056f1deb87a35f0e90c071ace"> 1040</a></span>       PredictionArguments...&gt;::q(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l01041" name="l01041"></a><span class="lineno"> 1041</span>{</div>
<div class="line"><a id="l01042" name="l01042"></a><span class="lineno"> 1042</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a> = value;</div>
<div class="line"><a id="l01043" name="l01043"></a><span class="lineno"> 1043</span>}</div>
<div class="line"><a id="l01044" name="l01044"></a><span class="lineno"> 1044</span> </div>
<div class="line"><a id="l01046" name="l01046"></a><span class="lineno"> 1046</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01047" name="l01047"></a><span class="lineno"> 1047</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01048" name="l01048"></a><span class="lineno"> 1048</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01049" name="l01049"></a><span class="lineno"> 1049</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01050" name="l01050"></a><span class="lineno"> 1050</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01051" name="l01051"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ada6203e61d5ce10b5cf0c975228038da"> 1051</a></span>       PredictionArguments...&gt;::q(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l01052" name="l01052"></a><span class="lineno"> 1052</span>{</div>
<div class="line"><a id="l01053" name="l01053"></a><span class="lineno"> 1053</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a> = std::move(value);</div>
<div class="line"><a id="l01054" name="l01054"></a><span class="lineno"> 1054</span>}</div>
<div class="line"><a id="l01055" name="l01055"></a><span class="lineno"> 1055</span> </div>
<div class="line"><a id="l01057" name="l01057"></a><span class="lineno"> 1057</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01058" name="l01058"></a><span class="lineno"> 1058</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01059" name="l01059"></a><span class="lineno"> 1059</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01060" name="l01060"></a><span class="lineno"> 1060</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01061" name="l01061"></a><span class="lineno"> 1061</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01062" name="l01062"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a66430f17480527d89070d7af2029edd9"> 1062</a></span>       PredictionArguments...&gt;::q(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01063" name="l01063"></a><span class="lineno"> 1063</span>{</div>
<div class="line"><a id="l01064" name="l01064"></a><span class="lineno"> 1064</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a> = std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a>{ value, values... });</div>
<div class="line"><a id="l01065" name="l01065"></a><span class="lineno"> 1065</span>}</div>
<div class="line"><a id="l01066" name="l01066"></a><span class="lineno"> 1066</span> </div>
<div class="line"><a id="l01068" name="l01068"></a><span class="lineno"> 1068</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01069" name="l01069"></a><span class="lineno"> 1069</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01070" name="l01070"></a><span class="lineno"> 1070</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01071" name="l01071"></a><span class="lineno"> 1071</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01072" name="l01072"></a><span class="lineno"> 1072</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01073" name="l01073"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab45a5313a880da2554b3f37fab13b05d"> 1073</a></span>       PredictionArguments...&gt;::q(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01074" name="l01074"></a><span class="lineno"> 1074</span>{</div>
<div class="line"><a id="l01075" name="l01075"></a><span class="lineno"> 1075</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">q</a> = std::move(</div>
<div class="line"><a id="l01076" name="l01076"></a><span class="lineno"> 1076</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">process_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01077" name="l01077"></a><span class="lineno"> 1077</span>                           std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01078" name="l01078"></a><span class="lineno"> 1078</span>}</div>
<div class="line"><a id="l01079" name="l01079"></a><span class="lineno"> 1079</span> </div>
<div class="line"><a id="l01080" name="l01080"></a><span class="lineno"> 1080</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01081" name="l01081"></a><span class="lineno"> 1081</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01082" name="l01082"></a><span class="lineno"> 1082</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01083" name="l01083"></a><span class="lineno"> 1083</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01084" name="l01084"></a><span class="lineno"> 1084</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01085" name="l01085"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee"> 1085</a></span>       PredictionArguments...&gt;::r() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a></div>
<div class="line"><a id="l01086" name="l01086"></a><span class="lineno"> 1086</span>{</div>
<div class="line"><a id="l01087" name="l01087"></a><span class="lineno"> 1087</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a>;</div>
<div class="line"><a id="l01088" name="l01088"></a><span class="lineno"> 1088</span>}</div>
<div class="line"><a id="l01089" name="l01089"></a><span class="lineno"> 1089</span> </div>
<div class="line"><a id="l01090" name="l01090"></a><span class="lineno"> 1090</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01091" name="l01091"></a><span class="lineno"> 1091</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01092" name="l01092"></a><span class="lineno"> 1092</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01093" name="l01093"></a><span class="lineno"> 1093</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01094" name="l01094"></a><span class="lineno"> 1094</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01095" name="l01095"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aefbf7da508036b2406be232af818cd2d"> 1095</a></span>       PredictionArguments...&gt;::r(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> &amp;value)</div>
<div class="line"><a id="l01096" name="l01096"></a><span class="lineno"> 1096</span>{</div>
<div class="line"><a id="l01097" name="l01097"></a><span class="lineno"> 1097</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a> = value;</div>
<div class="line"><a id="l01098" name="l01098"></a><span class="lineno"> 1098</span>}</div>
<div class="line"><a id="l01099" name="l01099"></a><span class="lineno"> 1099</span> </div>
<div class="line"><a id="l01100" name="l01100"></a><span class="lineno"> 1100</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01101" name="l01101"></a><span class="lineno"> 1101</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01102" name="l01102"></a><span class="lineno"> 1102</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01103" name="l01103"></a><span class="lineno"> 1103</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01104" name="l01104"></a><span class="lineno"> 1104</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01105" name="l01105"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8afdf0b57b40ad3e94daa5ee5825e4b1"> 1105</a></span>       PredictionArguments...&gt;::r(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a> &amp;&amp;value)</div>
<div class="line"><a id="l01106" name="l01106"></a><span class="lineno"> 1106</span>{</div>
<div class="line"><a id="l01107" name="l01107"></a><span class="lineno"> 1107</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a> = std::move(value);</div>
<div class="line"><a id="l01108" name="l01108"></a><span class="lineno"> 1108</span>}</div>
<div class="line"><a id="l01109" name="l01109"></a><span class="lineno"> 1109</span> </div>
<div class="line"><a id="l01110" name="l01110"></a><span class="lineno"> 1110</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01111" name="l01111"></a><span class="lineno"> 1111</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01112" name="l01112"></a><span class="lineno"> 1112</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01113" name="l01113"></a><span class="lineno"> 1113</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01114" name="l01114"></a><span class="lineno"> 1114</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01115" name="l01115"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a0ac3ee0025e90abcc96734f703dad4b2"> 1115</a></span>       PredictionArguments...&gt;::r(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01116" name="l01116"></a><span class="lineno"> 1116</span>{</div>
<div class="line"><a id="l01117" name="l01117"></a><span class="lineno"> 1117</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a> = <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a>{ value, values... };</div>
<div class="line"><a id="l01118" name="l01118"></a><span class="lineno"> 1118</span>}</div>
<div class="line"><a id="l01119" name="l01119"></a><span class="lineno"> 1119</span> </div>
<div class="line"><a id="l01120" name="l01120"></a><span class="lineno"> 1120</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01121" name="l01121"></a><span class="lineno"> 1121</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01122" name="l01122"></a><span class="lineno"> 1122</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01123" name="l01123"></a><span class="lineno"> 1123</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01124" name="l01124"></a><span class="lineno"> 1124</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01125" name="l01125"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8d97fcc2556c844dd276799b794e598a"> 1125</a></span>       PredictionArguments...&gt;::r(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01126" name="l01126"></a><span class="lineno"> 1126</span>{</div>
<div class="line"><a id="l01127" name="l01127"></a><span class="lineno"> 1127</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">r</a> = std::move(</div>
<div class="line"><a id="l01128" name="l01128"></a><span class="lineno"> 1128</span>      <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">output_uncertainty</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01129" name="l01129"></a><span class="lineno"> 1129</span>                          std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01130" name="l01130"></a><span class="lineno"> 1130</span>}</div>
<div class="line"><a id="l01131" name="l01131"></a><span class="lineno"> 1131</span> </div>
<div class="line"><a id="l01132" name="l01132"></a><span class="lineno"> 1132</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01133" name="l01133"></a><span class="lineno"> 1133</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01134" name="l01134"></a><span class="lineno"> 1134</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01135" name="l01135"></a><span class="lineno"> 1135</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01136" name="l01136"></a><span class="lineno"> 1136</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01137" name="l01137"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c"> 1137</a></span>       PredictionArguments...&gt;::f() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a></div>
<div class="line"><a id="l01138" name="l01138"></a><span class="lineno"> 1138</span>{</div>
<div class="line"><a id="l01139" name="l01139"></a><span class="lineno"> 1139</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a>;</div>
<div class="line"><a id="l01140" name="l01140"></a><span class="lineno"> 1140</span>}</div>
<div class="line"><a id="l01141" name="l01141"></a><span class="lineno"> 1141</span> </div>
<div class="line"><a id="l01142" name="l01142"></a><span class="lineno"> 1142</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01143" name="l01143"></a><span class="lineno"> 1143</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01144" name="l01144"></a><span class="lineno"> 1144</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01145" name="l01145"></a><span class="lineno"> 1145</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01146" name="l01146"></a><span class="lineno"> 1146</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01147" name="l01147"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#adfcb88d11e6acd97edc8a7b12bf9f968"> 1147</a></span>       PredictionArguments...&gt;::f(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> &amp;value)</div>
<div class="line"><a id="l01148" name="l01148"></a><span class="lineno"> 1148</span>{</div>
<div class="line"><a id="l01149" name="l01149"></a><span class="lineno"> 1149</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a> = value;</div>
<div class="line"><a id="l01150" name="l01150"></a><span class="lineno"> 1150</span>}</div>
<div class="line"><a id="l01151" name="l01151"></a><span class="lineno"> 1151</span> </div>
<div class="line"><a id="l01152" name="l01152"></a><span class="lineno"> 1152</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01153" name="l01153"></a><span class="lineno"> 1153</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01154" name="l01154"></a><span class="lineno"> 1154</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01155" name="l01155"></a><span class="lineno"> 1155</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01156" name="l01156"></a><span class="lineno"> 1156</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01157" name="l01157"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ae4b6c0b6919568edd63eed8e99611cc6"> 1157</a></span>       PredictionArguments...&gt;::f(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a> &amp;&amp;value)</div>
<div class="line"><a id="l01158" name="l01158"></a><span class="lineno"> 1158</span>{</div>
<div class="line"><a id="l01159" name="l01159"></a><span class="lineno"> 1159</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a> = std::move(value);</div>
<div class="line"><a id="l01160" name="l01160"></a><span class="lineno"> 1160</span>}</div>
<div class="line"><a id="l01161" name="l01161"></a><span class="lineno"> 1161</span> </div>
<div class="line"><a id="l01162" name="l01162"></a><span class="lineno"> 1162</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01163" name="l01163"></a><span class="lineno"> 1163</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01164" name="l01164"></a><span class="lineno"> 1164</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01165" name="l01165"></a><span class="lineno"> 1165</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01166" name="l01166"></a><span class="lineno"> 1166</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01167" name="l01167"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a63fba3b2ab5b6d43e0fc5572465e9fae"> 1167</a></span>       PredictionArguments...&gt;::f(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01168" name="l01168"></a><span class="lineno"> 1168</span>{</div>
<div class="line"><a id="l01169" name="l01169"></a><span class="lineno"> 1169</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a> = <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a>{ value, values... };</div>
<div class="line"><a id="l01170" name="l01170"></a><span class="lineno"> 1170</span>}</div>
<div class="line"><a id="l01171" name="l01171"></a><span class="lineno"> 1171</span> </div>
<div class="line"><a id="l01172" name="l01172"></a><span class="lineno"> 1172</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01173" name="l01173"></a><span class="lineno"> 1173</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01174" name="l01174"></a><span class="lineno"> 1174</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01175" name="l01175"></a><span class="lineno"> 1175</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01176" name="l01176"></a><span class="lineno"> 1176</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01177" name="l01177"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aac4006a8db6258a0370224552eac80cb"> 1177</a></span>       PredictionArguments...&gt;::f(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01178" name="l01178"></a><span class="lineno"> 1178</span>{</div>
<div class="line"><a id="l01179" name="l01179"></a><span class="lineno"> 1179</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">f</a> =</div>
<div class="line"><a id="l01180" name="l01180"></a><span class="lineno"> 1180</span>      std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">state_transition</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01181" name="l01181"></a><span class="lineno"> 1181</span>                                  std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01182" name="l01182"></a><span class="lineno"> 1182</span>}</div>
<div class="line"><a id="l01183" name="l01183"></a><span class="lineno"> 1183</span> </div>
<div class="line"><a id="l01184" name="l01184"></a><span class="lineno"> 1184</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01185" name="l01185"></a><span class="lineno"> 1185</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01186" name="l01186"></a><span class="lineno"> 1186</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01187" name="l01187"></a><span class="lineno"> 1187</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01188" name="l01188"></a><span class="lineno"> 1188</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01189" name="l01189"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893"> 1189</a></span>       PredictionArguments...&gt;::h() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a></div>
<div class="line"><a id="l01190" name="l01190"></a><span class="lineno"> 1190</span>{</div>
<div class="line"><a id="l01191" name="l01191"></a><span class="lineno"> 1191</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a>;</div>
<div class="line"><a id="l01192" name="l01192"></a><span class="lineno"> 1192</span>}</div>
<div class="line"><a id="l01193" name="l01193"></a><span class="lineno"> 1193</span> </div>
<div class="line"><a id="l01194" name="l01194"></a><span class="lineno"> 1194</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01195" name="l01195"></a><span class="lineno"> 1195</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01196" name="l01196"></a><span class="lineno"> 1196</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01197" name="l01197"></a><span class="lineno"> 1197</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01198" name="l01198"></a><span class="lineno"> 1198</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01199" name="l01199"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#ab3b5e3b9a40ed34e5d4fb7f3155834e1"> 1199</a></span>       PredictionArguments...&gt;::h(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> &amp;value)</div>
<div class="line"><a id="l01200" name="l01200"></a><span class="lineno"> 1200</span>{</div>
<div class="line"><a id="l01201" name="l01201"></a><span class="lineno"> 1201</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a> = value;</div>
<div class="line"><a id="l01202" name="l01202"></a><span class="lineno"> 1202</span>}</div>
<div class="line"><a id="l01203" name="l01203"></a><span class="lineno"> 1203</span> </div>
<div class="line"><a id="l01204" name="l01204"></a><span class="lineno"> 1204</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01205" name="l01205"></a><span class="lineno"> 1205</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01206" name="l01206"></a><span class="lineno"> 1206</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01207" name="l01207"></a><span class="lineno"> 1207</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01208" name="l01208"></a><span class="lineno"> 1208</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01209" name="l01209"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aa761a06c9b0984ba4e779f7ce8434bb6"> 1209</a></span>       PredictionArguments...&gt;::h(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a> &amp;&amp;value)</div>
<div class="line"><a id="l01210" name="l01210"></a><span class="lineno"> 1210</span>{</div>
<div class="line"><a id="l01211" name="l01211"></a><span class="lineno"> 1211</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a> = std::move(value);</div>
<div class="line"><a id="l01212" name="l01212"></a><span class="lineno"> 1212</span>}</div>
<div class="line"><a id="l01213" name="l01213"></a><span class="lineno"> 1213</span> </div>
<div class="line"><a id="l01214" name="l01214"></a><span class="lineno"> 1214</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01215" name="l01215"></a><span class="lineno"> 1215</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01216" name="l01216"></a><span class="lineno"> 1216</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01217" name="l01217"></a><span class="lineno"> 1217</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01218" name="l01218"></a><span class="lineno"> 1218</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01219" name="l01219"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a8dcf68b4aaae3099c50a0ed20008a9fe"> 1219</a></span>       PredictionArguments...&gt;::h(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01220" name="l01220"></a><span class="lineno"> 1220</span>{</div>
<div class="line"><a id="l01221" name="l01221"></a><span class="lineno"> 1221</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a> = <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a>{ value, values... };</div>
<div class="line"><a id="l01222" name="l01222"></a><span class="lineno"> 1222</span>}</div>
<div class="line"><a id="l01223" name="l01223"></a><span class="lineno"> 1223</span> </div>
<div class="line"><a id="l01224" name="l01224"></a><span class="lineno"> 1224</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01225" name="l01225"></a><span class="lineno"> 1225</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01226" name="l01226"></a><span class="lineno"> 1226</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01227" name="l01227"></a><span class="lineno"> 1227</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01228" name="l01228"></a><span class="lineno"> 1228</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01229" name="l01229"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a7c7514987378a9f414fe35b0b868e66b"> 1229</a></span>       PredictionArguments...&gt;::h(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01230" name="l01230"></a><span class="lineno"> 1230</span>{</div>
<div class="line"><a id="l01231" name="l01231"></a><span class="lineno"> 1231</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">h</a> =</div>
<div class="line"><a id="l01232" name="l01232"></a><span class="lineno"> 1232</span>      std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">output_model</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01233" name="l01233"></a><span class="lineno"> 1233</span>                              std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01234" name="l01234"></a><span class="lineno"> 1234</span>}</div>
<div class="line"><a id="l01235" name="l01235"></a><span class="lineno"> 1235</span> </div>
<div class="line"><a id="l01236" name="l01236"></a><span class="lineno"> 1236</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01237" name="l01237"></a><span class="lineno"> 1237</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01238" name="l01238"></a><span class="lineno"> 1238</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01239" name="l01239"></a><span class="lineno"> 1239</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01240" name="l01240"></a><span class="lineno"> 1240</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01241" name="l01241"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3"> 1241</a></span>       PredictionArguments...&gt;::g() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a></div>
<div class="line"><a id="l01242" name="l01242"></a><span class="lineno"> 1242</span>{</div>
<div class="line"><a id="l01243" name="l01243"></a><span class="lineno"> 1243</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a>;</div>
<div class="line"><a id="l01244" name="l01244"></a><span class="lineno"> 1244</span>}</div>
<div class="line"><a id="l01245" name="l01245"></a><span class="lineno"> 1245</span> </div>
<div class="line"><a id="l01246" name="l01246"></a><span class="lineno"> 1246</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01247" name="l01247"></a><span class="lineno"> 1247</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01248" name="l01248"></a><span class="lineno"> 1248</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01249" name="l01249"></a><span class="lineno"> 1249</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01250" name="l01250"></a><span class="lineno"> 1250</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01251" name="l01251"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a93e0214b611288f2e92e518b32b7df8f"> 1251</a></span>       PredictionArguments...&gt;::g(<span class="keyword">const</span> <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> &amp;value)</div>
<div class="line"><a id="l01252" name="l01252"></a><span class="lineno"> 1252</span>{</div>
<div class="line"><a id="l01253" name="l01253"></a><span class="lineno"> 1253</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a> = value;</div>
<div class="line"><a id="l01254" name="l01254"></a><span class="lineno"> 1254</span>}</div>
<div class="line"><a id="l01255" name="l01255"></a><span class="lineno"> 1255</span> </div>
<div class="line"><a id="l01256" name="l01256"></a><span class="lineno"> 1256</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01257" name="l01257"></a><span class="lineno"> 1257</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01258" name="l01258"></a><span class="lineno"> 1258</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01259" name="l01259"></a><span class="lineno"> 1259</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01260" name="l01260"></a><span class="lineno"> 1260</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01261" name="l01261"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aba2ca5c3be45a77e0c240aeceb9994cc"> 1261</a></span>       PredictionArguments...&gt;::g(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a> &amp;&amp;value)</div>
<div class="line"><a id="l01262" name="l01262"></a><span class="lineno"> 1262</span>{</div>
<div class="line"><a id="l01263" name="l01263"></a><span class="lineno"> 1263</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a> = std::move(value);</div>
<div class="line"><a id="l01264" name="l01264"></a><span class="lineno"> 1264</span>}</div>
<div class="line"><a id="l01265" name="l01265"></a><span class="lineno"> 1265</span> </div>
<div class="line"><a id="l01266" name="l01266"></a><span class="lineno"> 1266</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01267" name="l01267"></a><span class="lineno"> 1267</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01268" name="l01268"></a><span class="lineno"> 1268</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01269" name="l01269"></a><span class="lineno"> 1269</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01270" name="l01270"></a><span class="lineno"> 1270</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01271" name="l01271"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#aad8a339e49e1163b0b03c0636137cca2"> 1271</a></span>       PredictionArguments...&gt;::g(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...values)</div>
<div class="line"><a id="l01272" name="l01272"></a><span class="lineno"> 1272</span>{</div>
<div class="line"><a id="l01273" name="l01273"></a><span class="lineno"> 1273</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a> = <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a>{ value, values... };</div>
<div class="line"><a id="l01274" name="l01274"></a><span class="lineno"> 1274</span>}</div>
<div class="line"><a id="l01275" name="l01275"></a><span class="lineno"> 1275</span> </div>
<div class="line"><a id="l01276" name="l01276"></a><span class="lineno"> 1276</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01277" name="l01277"></a><span class="lineno"> 1277</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01278" name="l01278"></a><span class="lineno"> 1278</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01279" name="l01279"></a><span class="lineno"> 1279</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01280" name="l01280"></a><span class="lineno"> 1280</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01281" name="l01281"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a372d731f45878d9b24cf05f98c323331"> 1281</a></span>       PredictionArguments...&gt;::g(<span class="keyword">auto</span> &amp;&amp;value, <span class="keyword">auto</span> &amp;&amp;...values)</div>
<div class="line"><a id="l01282" name="l01282"></a><span class="lineno"> 1282</span>{</div>
<div class="line"><a id="l01283" name="l01283"></a><span class="lineno"> 1283</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">g</a> =</div>
<div class="line"><a id="l01284" name="l01284"></a><span class="lineno"> 1284</span>      std::move(<a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">input_control</a>{ std::forward&lt;decltype(value)&gt;(value),</div>
<div class="line"><a id="l01285" name="l01285"></a><span class="lineno"> 1285</span>                               std::forward&lt;decltype(values)&gt;(values)... });</div>
<div class="line"><a id="l01286" name="l01286"></a><span class="lineno"> 1286</span>}</div>
<div class="line"><a id="l01287" name="l01287"></a><span class="lineno"> 1287</span> </div>
<div class="line"><a id="l01288" name="l01288"></a><span class="lineno"> 1288</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01289" name="l01289"></a><span class="lineno"> 1289</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01290" name="l01290"></a><span class="lineno"> 1290</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01291" name="l01291"></a><span class="lineno"> 1291</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01292" name="l01292"></a><span class="lineno"> 1292</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01293" name="l01293"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4f4614f96ad5a959cc04c3b76b30df56"> 1293</a></span>       PredictionArguments...&gt;::k() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">gain</a></div>
<div class="line"><a id="l01294" name="l01294"></a><span class="lineno"> 1294</span>{</div>
<div class="line"><a id="l01295" name="l01295"></a><span class="lineno"> 1295</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4f4614f96ad5a959cc04c3b76b30df56">k</a>;</div>
<div class="line"><a id="l01296" name="l01296"></a><span class="lineno"> 1296</span>}</div>
<div class="line"><a id="l01297" name="l01297"></a><span class="lineno"> 1297</span> </div>
<div class="line"><a id="l01298" name="l01298"></a><span class="lineno"> 1298</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01299" name="l01299"></a><span class="lineno"> 1299</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01300" name="l01300"></a><span class="lineno"> 1300</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01301" name="l01301"></a><span class="lineno"> 1301</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01302" name="l01302"></a><span class="lineno"> 1302</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01303" name="l01303"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a539aa5fc86af0bb2bdbb2d1c834b61a4"> 1303</a></span>       PredictionArguments...&gt;::y() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">innovation</a></div>
<div class="line"><a id="l01304" name="l01304"></a><span class="lineno"> 1304</span>{</div>
<div class="line"><a id="l01305" name="l01305"></a><span class="lineno"> 1305</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a539aa5fc86af0bb2bdbb2d1c834b61a4">y</a>;</div>
<div class="line"><a id="l01306" name="l01306"></a><span class="lineno"> 1306</span>}</div>
<div class="line"><a id="l01307" name="l01307"></a><span class="lineno"> 1307</span> </div>
<div class="line"><a id="l01308" name="l01308"></a><span class="lineno"> 1308</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01309" name="l01309"></a><span class="lineno"> 1309</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01310" name="l01310"></a><span class="lineno"> 1310</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01311" name="l01311"></a><span class="lineno"> 1311</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l01312" name="l01312"></a><span class="lineno"> 1312</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01313" name="l01313"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#a4835d24ec7b4fd4cc7197b7ccf73f617"> 1313</a></span>       PredictionArguments...&gt;::s() const -&gt; <a class="code hl_typedef" href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">innovation_uncertainty</a></div>
<div class="line"><a id="l01314" name="l01314"></a><span class="lineno"> 1314</span>{</div>
<div class="line"><a id="l01315" name="l01315"></a><span class="lineno"> 1315</span>  <span class="keywordflow">return</span> filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#a4835d24ec7b4fd4cc7197b7ccf73f617">s</a>;</div>
<div class="line"><a id="l01316" name="l01316"></a><span class="lineno"> 1316</span>}</div>
<div class="line"><a id="l01317" name="l01317"></a><span class="lineno"> 1317</span> </div>
<div class="line"><a id="l01318" name="l01318"></a><span class="lineno"> 1318</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01319" name="l01319"></a><span class="lineno"> 1319</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01320" name="l01320"></a><span class="lineno"> 1320</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01321" name="l01321"></a><span class="lineno"> 1321</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01322" name="l01322"></a><span class="lineno"> 1322</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01323" name="l01323"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#af0c0297d0d677737625e9fa99c2bb28f"> 1323</a></span>       PredictionArguments...&gt;::update(<span class="keyword">const</span> <span class="keyword">auto</span> &amp;...output_z)</div>
<div class="line"><a id="l01324" name="l01324"></a><span class="lineno"> 1324</span>{</div>
<div class="line"><a id="l01325" name="l01325"></a><span class="lineno"> 1325</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#af0c0297d0d677737625e9fa99c2bb28f">update</a>(output_z...);</div>
<div class="line"><a id="l01326" name="l01326"></a><span class="lineno"> 1326</span>}</div>
<div class="line"><a id="l01327" name="l01327"></a><span class="lineno"> 1327</span> </div>
<div class="line"><a id="l01328" name="l01328"></a><span class="lineno"> 1328</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span> State, <span class="keyword">typename</span> Output, <span class="keyword">typename</span> Input,</div>
<div class="line"><a id="l01329" name="l01329"></a><span class="lineno"> 1329</span>          <span class="keyword">typename</span> Transpose, <span class="keyword">typename</span> Symmetrize, <span class="keyword">typename</span> Divide,</div>
<div class="line"><a id="l01330" name="l01330"></a><span class="lineno"> 1330</span>          <span class="keyword">typename</span> Identity, <span class="keyword">typename</span>... PredictionArguments&gt;</div>
<div class="line"><a id="l01331" name="l01331"></a><span class="lineno"> 1331</span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keywordtype">void</span></div>
<div class="line"><a id="l01332" name="l01332"></a><span class="lineno"> 1332</span><a class="code hl_class" href="classfcarouge_1_1kalman.xhtml">kalman</a>&lt;Type, State, Output, Input, Transpose, Symmetrize, Divide, Identity,</div>
<div class="line"><a id="l01333" name="l01333"></a><span class="lineno"><a class="line" href="classfcarouge_1_1kalman.xhtml#acd1393a459126fdd0fa1e276e2f7d0bc"> 1333</a></span>       PredictionArguments...&gt;::predict(<span class="keyword">const</span> PredictionArguments &amp;...arguments,</div>
<div class="line"><a id="l01334" name="l01334"></a><span class="lineno"> 1334</span>                                        <span class="keyword">const</span> <span class="keyword">auto</span> &amp;...input_u)</div>
<div class="line"><a id="l01335" name="l01335"></a><span class="lineno"> 1335</span>{</div>
<div class="line"><a id="l01336" name="l01336"></a><span class="lineno"> 1336</span>  filter.<a class="code hl_function" href="classfcarouge_1_1kalman.xhtml#acd1393a459126fdd0fa1e276e2f7d0bc">predict</a>(arguments..., input_u...);</div>
<div class="line"><a id="l01337" name="l01337"></a><span class="lineno"> 1337</span>}</div>
<div class="line"><a id="l01338" name="l01338"></a><span class="lineno"> 1338</span> </div>
<div class="line"><a id="l01339" name="l01339"></a><span class="lineno"> 1339</span>} <span class="comment">// namespace fcarouge</span></div>
<div class="line"><a id="l01340" name="l01340"></a><span class="lineno"> 1340</span> </div>
<div class="line"><a id="l01341" name="l01341"></a><span class="lineno"> 1341</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_KALMAN_HPP</span></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml">fcarouge::kalman</a></div><div class="ttdoc">Kalman filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00118">kalman.hpp:119</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a0a97953f6cfb11823bf7175a859f383c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a0a97953f6cfb11823bf7175a859f383c">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr void h(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation, measurement transition matrix H function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00682">kalman.hpp:682</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1acc8bf6f63e2dbab36e64c46ae0b455"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1acc8bf6f63e2dbab36e64c46ae0b455">fcarouge::kalman::filter</a></div><div class="ttdeci">implementation filter</div><div class="ttdoc">Encapsulates the implementation details of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00906">kalman.hpp:906</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a1e49b408cd795e92589a34f506813a6a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a1e49b408cd795e92589a34f506813a6a">fcarouge::kalman::operator()</a></div><div class="ttdeci">constexpr void operator()(const PredictionArguments &amp;...arguments, const auto &amp;...input_u, const auto &amp;...output_z)</div><div class="ttdoc">Runs a step of the filter.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00858">kalman.hpp:858</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2c15cbc941160cab5c51f5b1612714b8"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2c15cbc941160cab5c51f5b1612714b8">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(auto &amp;&amp;callable)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00818">kalman.hpp:818</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2c39c64ad83dcc6fa948d3b2c08e60aa"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2c39c64ad83dcc6fa948d3b2c08e60aa">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(kalman &amp;&amp;other) noexcept=default</div><div class="ttdoc">Move constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a2fad5a467b8d8c91213115ae08b1ee88"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a2fad5a467b8d8c91213115ae08b1ee88">fcarouge::kalman::input_control</a></div><div class="ttdeci">typename implementation::input_control input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00173">kalman.hpp:173</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a343821b73a0eaef183ed3c3441963ff2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a343821b73a0eaef183ed3c3441963ff2">fcarouge::kalman::innovation_uncertainty</a></div><div class="ttdeci">typename implementation::innovation_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00182">kalman.hpp:183</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a367e5fd4baedfc975da4239098330ecd"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a367e5fd4baedfc975da4239098330ecd">fcarouge::kalman::estimate_uncertainty</a></div><div class="ttdeci">typename implementation::estimate_uncertainty estimate_uncertainty</div><div class="ttdoc">Type of the estimated correlated variance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00152">kalman.hpp:152</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3711c00c961692b20c398c21f83a11cc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3711c00c961692b20c398c21f83a11cc">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman()=default</div><div class="ttdoc">Constructs a Kalman filter without configuration.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a3f0df6719f062e036eb0d0ba589057c2"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a3f0df6719f062e036eb0d0ba589057c2">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr void r(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the observation noise covariance matrix R function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00527">kalman.hpp:527</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4835d24ec7b4fd4cc7197b7ccf73f617"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4835d24ec7b4fd4cc7197b7ccf73f617">fcarouge::kalman::s</a></div><div class="ttdeci">constexpr auto s() const -&gt; innovation_uncertainty</div><div class="ttdoc">Returns the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01313">kalman.hpp:1313</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4902a8386c2506824507080a57170bc6"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4902a8386c2506824507080a57170bc6">fcarouge::kalman::observation</a></div><div class="ttdeci">constexpr void observation(const auto &amp;callable)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00810">kalman.hpp:810</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4a09b31c36d29ad4eb014682a730d01d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4a09b31c36d29ad4eb014682a730d01d">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(const auto &amp;callable)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00794">kalman.hpp:794</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4ccf9734622879455ce825de46dc5c4a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4ccf9734622879455ce825de46dc5c4a">fcarouge::kalman::p</a></div><div class="ttdeci">constexpr auto p() const -&gt; estimate_uncertainty</div><div class="ttdoc">Returns the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00977">kalman.hpp:977</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4f4614f96ad5a959cc04c3b76b30df56"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4f4614f96ad5a959cc04c3b76b30df56">fcarouge::kalman::k</a></div><div class="ttdeci">constexpr auto k() const -&gt; gain</div><div class="ttdoc">Returns the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01293">kalman.hpp:1293</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a4f812a58b1635e7a8f9e6f613b7e24f0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a4f812a58b1635e7a8f9e6f613b7e24f0">fcarouge::kalman::u</a></div><div class="ttdeci">constexpr auto u() const -&gt; input</div><div class="ttdoc">Returns the control vector U.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a539aa5fc86af0bb2bdbb2d1c834b61a4"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a539aa5fc86af0bb2bdbb2d1c834b61a4">fcarouge::kalman::y</a></div><div class="ttdeci">constexpr auto y() const -&gt; innovation</div><div class="ttdoc">Returns the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01303">kalman.hpp:1303</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a55c1d9a48ca85ec1bc2eafeea32fa1e5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a55c1d9a48ca85ec1bc2eafeea32fa1e5">fcarouge::kalman::innovation</a></div><div class="ttdeci">typename implementation::innovation innovation</div><div class="ttdoc">Type of the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00179">kalman.hpp:179</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5ba9379cac37072f0afe18948917b045"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5ba9379cac37072f0afe18948917b045">fcarouge::kalman::state</a></div><div class="ttdeci">typename implementation::state state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00139">kalman.hpp:139</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a5ceac5e310022d1510d96b3f919c3cc7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a5ceac5e310022d1510d96b3f919c3cc7">fcarouge::kalman::x</a></div><div class="ttdeci">constexpr auto x() const -&gt; state</div><div class="ttdoc">Returns the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00916">kalman.hpp:916</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a6cb57fff11bff8192d14757ed09ac893"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a6cb57fff11bff8192d14757ed09ac893">fcarouge::kalman::h</a></div><div class="ttdeci">constexpr auto h() const -&gt; output_model</div><div class="ttdoc">Returns the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01189">kalman.hpp:1189</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7430d4bf3df294fcadfbea5323c5b5a9"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7430d4bf3df294fcadfbea5323c5b5a9">fcarouge::kalman::output_model</a></div><div class="ttdeci">typename implementation::output_model output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00168">kalman.hpp:168</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a775d92b5ed7b1cdc2b6591dc4267af7e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a775d92b5ed7b1cdc2b6591dc4267af7e">fcarouge::kalman::z</a></div><div class="ttdeci">constexpr auto z() const -&gt; output</div><div class="ttdoc">Returns the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00967">kalman.hpp:967</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a7d458548471120dfda1b3f7d8fd2583b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a7d458548471120dfda1b3f7d8fd2583b">fcarouge::kalman::output</a></div><div class="ttdeci">typename implementation::output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00144">kalman.hpp:144</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8270d34b62666449cb9acb43fba6a7ae"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8270d34b62666449cb9acb43fba6a7ae">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(const kalman &amp;other) -&gt; kalman &amp;=default</div><div class="ttdoc">Copy assignment operator.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a837025671cf98f9fd71f05677581179c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a837025671cf98f9fd71f05677581179c">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr auto f() const -&gt; state_transition</div><div class="ttdoc">Returns the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01137">kalman.hpp:1137</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a84b9242641a17d3ee45167fcca8c9e0c"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a84b9242641a17d3ee45167fcca8c9e0c">fcarouge::kalman::input</a></div><div class="ttdeci">typename implementation::input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00147">kalman.hpp:147</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a88deb126e932cc1dc5faef5248cd75a0"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a88deb126e932cc1dc5faef5248cd75a0">fcarouge::kalman::process_uncertainty</a></div><div class="ttdeci">typename implementation::process_uncertainty process_uncertainty</div><div class="ttdoc">Type of the process noise correlated variance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00155">kalman.hpp:155</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a8c5b5958b505bc7dbfe396559d408a8a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a8c5b5958b505bc7dbfe396559d408a8a">fcarouge::kalman::value_type</a></div><div class="ttdeci">Type value_type</div><div class="ttdoc">The type of the filtered data elements.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00136">kalman.hpp:136</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a951f595f0919a6b6676a32c8df07a2ee"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a951f595f0919a6b6676a32c8df07a2ee">fcarouge::kalman::r</a></div><div class="ttdeci">constexpr auto r() const -&gt; output_uncertainty</div><div class="ttdoc">Returns the observation noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01085">kalman.hpp:1085</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a96762ae90b1e01be33634e8b781e12b3"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a96762ae90b1e01be33634e8b781e12b3">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr auto g() const -&gt; input_control</div><div class="ttdoc">Returns the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01241">kalman.hpp:1241</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_a9d1e6ad3eda34e38dbd1c5e5d90bee92"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#a9d1e6ad3eda34e38dbd1c5e5d90bee92">fcarouge::kalman::output_uncertainty</a></div><div class="ttdeci">typename implementation::output_uncertainty output_uncertainty</div><div class="ttdoc">Type of the observation noise correlated variance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00158">kalman.hpp:158</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ab2db8e0f326cb9e620168480899f80e7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ab2db8e0f326cb9e620168480899f80e7">fcarouge::kalman::g</a></div><div class="ttdeci">constexpr void g(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the control transition matrix G function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00759">kalman.hpp:759</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_abdd41b063f863347987d886c49621e39"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#abdd41b063f863347987d886c49621e39">fcarouge::kalman::kalman</a></div><div class="ttdeci">constexpr kalman(const kalman &amp;other)=default</div><div class="ttdoc">Copy constructs a filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac3ef27cffd511ac1b80d2ee51c8ebc3a"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac3ef27cffd511ac1b80d2ee51c8ebc3a">fcarouge::kalman::gain</a></div><div class="ttdeci">typename implementation::gain gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00176">kalman.hpp:176</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac778dee689935e9fd7f22e6279404c8b"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac778dee689935e9fd7f22e6279404c8b">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr void q(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the process noise covariance matrix Q function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00448">kalman.hpp:448</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_ac9defadd14ff1ad5e1601cc46ddf05a7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#ac9defadd14ff1ad5e1601cc46ddf05a7">fcarouge::kalman::q</a></div><div class="ttdeci">constexpr auto q() const -&gt; process_uncertainty</div><div class="ttdoc">Returns the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01029">kalman.hpp:1029</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_acd1393a459126fdd0fa1e276e2f7d0bc"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#acd1393a459126fdd0fa1e276e2f7d0bc">fcarouge::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</div><div class="ttdoc">Produces estimates of the state variables and uncertainties.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01333">kalman.hpp:1333</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_aeed636a3d67148c33752dd6d4be4381d"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#aeed636a3d67148c33752dd6d4be4381d">fcarouge::kalman::transition</a></div><div class="ttdeci">constexpr void transition(auto &amp;&amp;callable)</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00802">kalman.hpp:802</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af0c0297d0d677737625e9fa99c2bb28f"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af0c0297d0d677737625e9fa99c2bb28f">fcarouge::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...output_z)</div><div class="ttdoc">Updates the estimates with the outcome of a measurement.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l01323">kalman.hpp:1323</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af33cdb91db27c653f109a06c016f9cf7"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af33cdb91db27c653f109a06c016f9cf7">fcarouge::kalman::~kalman</a></div><div class="ttdeci">constexpr ~kalman()=default</div><div class="ttdoc">Destructs the kalman filter.</div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af60d3900dcf7aa355aec9cbeb49717c1"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af60d3900dcf7aa355aec9cbeb49717c1">fcarouge::kalman::f</a></div><div class="ttdeci">constexpr void f(auto &amp;&amp;callable)</div><div class="ttdoc">Sets the state transition matrix F function.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00603">kalman.hpp:603</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_af9cdb0287f8581899c14c42e5901d8f5"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#af9cdb0287f8581899c14c42e5901d8f5">fcarouge::kalman::state_transition</a></div><div class="ttdeci">typename implementation::state_transition state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="kalman_8hpp_source.xhtml#l00163">kalman.hpp:163</a></div></div>
<div class="ttc" id="aclassfcarouge_1_1kalman_xhtml_afb3443e4f233dc6a775551f074148b2e"><div class="ttname"><a href="classfcarouge_1_1kalman.xhtml#afb3443e4f233dc6a775551f074148b2e">fcarouge::kalman::operator=</a></div><div class="ttdeci">constexpr auto operator=(kalman &amp;&amp;other) noexcept -&gt; kalman &amp;=default</div><div class="ttdoc">Move assignment operator.</div></div>
<div class="ttc" id="ainternal_2kalman_8hpp_xhtml"><div class="ttname"><a href="internal_2kalman_8hpp.xhtml">kalman.hpp</a></div><div class="ttdoc">The main Kalman filter class.</div></div>
<div class="ttc" id="akalman__operator_8hpp_xhtml"><div class="ttname"><a href="kalman__operator_8hpp.xhtml">kalman_operator.hpp</a></div><div class="ttdoc">Kalman operation for standard types.</div></div>
<div class="ttc" id="anamespacefcarouge_xhtml"><div class="ttname"><a href="namespacefcarouge.xhtml">fcarouge</a></div><div class="ttdoc">Francois Carouge's projects namespace.</div><div class="ttdef"><b>Definition:</b> <a href="benchmark_8cpp_source.xhtml#l00043">benchmark.cpp:44</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml">fcarouge::internal::kalman</a></div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00053">kalman.hpp:53</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a0be139884218d5b6884cd508f9c99615"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a0be139884218d5b6884cd508f9c99615">fcarouge::internal::kalman::gain</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Transpose, output_model &gt; &gt; gain</div><div class="ttdoc">Type of the gain matrix K.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00101">kalman.hpp:101</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a15f8ae2111c2b7141eaf77bfc976eddc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a15f8ae2111c2b7141eaf77bfc976eddc">fcarouge::internal::kalman::state</a></div><div class="ttdeci">State state</div><div class="ttdoc">Type of the state estimate vector X.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00058">kalman.hpp:58</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a24749d96d76540a88823f17010c7354b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a24749d96d76540a88823f17010c7354b">fcarouge::internal::kalman::state_transition</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; state_transition</div><div class="ttdoc">Type of the state transition matrix F.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00085">kalman.hpp:86</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a25a9751abe2e43ec852df39561a9ff55"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a25a9751abe2e43ec852df39561a9ff55">fcarouge::internal::kalman::input_control</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, Input &gt; &gt; input_control</div><div class="ttdoc">Type of the control transition matrix G.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00097">kalman.hpp:98</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a41a4367c3e7dec24a9a6077cf09d3db9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a41a4367c3e7dec24a9a6077cf09d3db9">fcarouge::internal::kalman::output_model</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, State &gt; &gt; output_model</div><div class="ttdoc">Type of the observation transition matrix H.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00091">kalman.hpp:92</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a549f84cd3dc8cbb3fdefd52aef3c35cc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a549f84cd3dc8cbb3fdefd52aef3c35cc">fcarouge::internal::kalman::update</a></div><div class="ttdeci">constexpr void update(const auto &amp;...output_z)</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00237">kalman.hpp:237</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a5a40ec6020426d2dd630f6d065c061d1"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a5a40ec6020426d2dd630f6d065c061d1">fcarouge::internal::kalman::process_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; process_uncertainty</div><div class="ttdoc">Type of the process noise covariance matrix Q.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00075">kalman.hpp:76</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a5de3662dc7198c5cec86f743c6015aa7"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a5de3662dc7198c5cec86f743c6015aa7">fcarouge::internal::kalman::transition_state_f</a></div><div class="ttdeci">std::function&lt; state_transition(const PredictionArguments &amp;...)&gt; transition_state_f</div><div class="ttdoc">Compute the state transition F matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00175">kalman.hpp:175</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a67cfd73334ae1202616e8e24c9b5c6d9"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a67cfd73334ae1202616e8e24c9b5c6d9">fcarouge::internal::kalman::noise_observation_r</a></div><div class="ttdeci">std::function&lt; output_uncertainty()&gt; noise_observation_r</div><div class="ttdoc">Compute observation noise R matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00161">kalman.hpp:161</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a768ce84161980497fe1237a45011bd48"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a768ce84161980497fe1237a45011bd48">fcarouge::internal::kalman::observation_state_h</a></div><div class="ttdeci">std::function&lt; output_model(const state &amp;)&gt; observation_state_h</div><div class="ttdoc">Compute the state observation H matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00153">kalman.hpp:153</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a8755deb8bc331fb6cd8b05f8ede7a089"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a8755deb8bc331fb6cd8b05f8ede7a089">fcarouge::internal::kalman::output</a></div><div class="ttdeci">Output output</div><div class="ttdoc">Type of the observation vector Z.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00063">kalman.hpp:63</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a90a162bb13eacd80b503fd8d5c453098"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a90a162bb13eacd80b503fd8d5c453098">fcarouge::internal::kalman::innovation</a></div><div class="ttdeci">output innovation</div><div class="ttdoc">Type of the innovation vector Y.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00104">kalman.hpp:104</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9a544930b1a04f11123f9cb61b79556e"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a544930b1a04f11123f9cb61b79556e">fcarouge::internal::kalman::noise_process_q</a></div><div class="ttdeci">std::function&lt; process_uncertainty(const PredictionArguments &amp;...)&gt; noise_process_q</div><div class="ttdoc">Compute process noise Q matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00184">kalman.hpp:184</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_a9a66a8ec4bc3b44f1baf393b6942e381"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#a9a66a8ec4bc3b44f1baf393b6942e381">fcarouge::internal::kalman::transition_control_g</a></div><div class="ttdeci">std::function&lt; input_control(const PredictionArguments &amp;...)&gt; transition_control_g</div><div class="ttdoc">Compute control transition G matrix.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00193">kalman.hpp:193</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab2d5d99193ce38bbd98569819f0f0ffc"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab2d5d99193ce38bbd98569819f0f0ffc">fcarouge::internal::kalman::input</a></div><div class="ttdeci">Input input</div><div class="ttdoc">Type of the control vector U.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00066">kalman.hpp:66</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ab86860dc9f2992f0fb3c6b71e980c187"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ab86860dc9f2992f0fb3c6b71e980c187">fcarouge::internal::kalman::predict</a></div><div class="ttdeci">constexpr void predict(const PredictionArguments &amp;...arguments, const auto &amp;...input_u)</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00254">kalman.hpp:254</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_abaa5916bb3602218f307b98f46221e7b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#abaa5916bb3602218f307b98f46221e7b">fcarouge::internal::kalman::innovation_uncertainty</a></div><div class="ttdeci">output_uncertainty innovation_uncertainty</div><div class="ttdoc">Type of the innovation uncertainty matrix S.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00107">kalman.hpp:107</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ad33efc9cd3219556f5079bb8c3eb3c97"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad33efc9cd3219556f5079bb8c3eb3c97">fcarouge::internal::kalman::estimate_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, State, State &gt; &gt; estimate_uncertainty</div><div class="ttdoc">Type of the estimated covariance matrix P.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00071">kalman.hpp:72</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_ad8b6fd589bf54fe4d2a03ec2c3e9644b"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#ad8b6fd589bf54fe4d2a03ec2c3e9644b">fcarouge::internal::kalman::observation</a></div><div class="ttdeci">std::function&lt; output(const state &amp;)&gt; observation</div><div class="ttdoc">State observation function h.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00219">kalman.hpp:219</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_af1f8a5845e45546b2d7fff70aa85e134"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#af1f8a5845e45546b2d7fff70aa85e134">fcarouge::internal::kalman::output_uncertainty</a></div><div class="ttdeci">std::decay_t&lt; std::invoke_result_t&lt; Divide, Output, Output &gt; &gt; output_uncertainty</div><div class="ttdoc">Type of the observation, measurement noise covariance matrix R.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00079">kalman.hpp:80</a></div></div>
<div class="ttc" id="astructfcarouge_1_1internal_1_1kalman_xhtml_af4717515ec7921871b2db5d6a6448038"><div class="ttname"><a href="structfcarouge_1_1internal_1_1kalman.xhtml#af4717515ec7921871b2db5d6a6448038">fcarouge::internal::kalman::transition</a></div><div class="ttdeci">std::function&lt; state(const state &amp;, const PredictionArguments &amp;...)&gt; transition</div><div class="ttdoc">State transition function f.</div><div class="ttdef"><b>Definition:</b> <a href="internal_2kalman_8hpp_source.xhtml#l00207">kalman.hpp:207</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="kalman_8hpp.xhtml">kalman.hpp</a></li>
    <li class="footer">Generated on Thu Jun 23 2022 04:57:38 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.2 </li>
  </ul>
</div>
</body>
</html>
