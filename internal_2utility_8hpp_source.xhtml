<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.5"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: /github/workspace/include/fcarouge/internal/utility.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.3.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('internal_2utility_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">utility.hpp</div></div>
</div><!--header-->
<div class="contents">
<a href="internal_2utility_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  __          _      __  __          _   _</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">| |/ /    /\   | |    |  \/  |   /\   | \ | |</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">| &#39; /    /  \  | |    | \  / |  /  \  |  \| |</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">|  &lt;    / /\ \ | |    | |\/| | / /\ \ | . ` |</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">| . \  / ____ \| |____| |  | |/ ____ \| |\  |</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">|_|\_\/_/    \_\______|_|  |_/_/    \_\_| \_|</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"></span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">Kalman Filter</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">Version 0.3.0</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment">https://github.com/FrancoisCarouge/Kalman</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"></span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">SPDX-License-Identifier: Unlicense</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"></span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">This is free and unencumbered software released into the public domain.</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment"></span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="comment">Anyone is free to copy, modify, publish, use, compile, sell, or</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">distribute this software, either in source code form or as a compiled</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="comment">binary, for any purpose, commercial or non-commercial, and by any</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">means.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="comment"></span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">In jurisdictions that recognize copyright laws, the author or authors</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">of this software dedicate any and all copyright interest in the</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">software to the public domain. We make this dedication for the benefit</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="comment">of the public at large and to the detriment of our heirs and</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">successors. We intend this dedication to be an overt act of</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="comment">relinquishment in perpetuity of all present and future rights to this</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">software under copyright law.</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment"></span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="comment">MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="comment">IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="comment">OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="comment">ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">OTHER DEALINGS IN THE SOFTWARE.</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="comment"></span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="comment">For more information, please refer to &lt;https://unlicense.org&gt; */</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#ifndef FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#define FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#include &lt;concepts&gt;</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">namespace </span><a class="code hl_namespace" href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a> {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">concept </span>arithmetic = std::integral&lt;Type&gt; || std::floating_point&lt;Type&gt;;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">concept </span>algebraic = not arithmetic&lt;Type&gt;;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">concept </span>eigen = <span class="keyword">requires</span> { <span class="keyword">typename</span> Type::PlainMatrix; };</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">struct </span>empty {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> empty([[maybe_unused]] <span class="keyword">auto</span> &amp;&amp;...any) <span class="keyword">noexcept</span> {</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <span class="comment">// Constructs from anything for all initializations compatibility.</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  }</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>};</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">struct </span><a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a> {};</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">   63</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">empty_pack</a> = pack&lt;&gt;;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>repack {</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">using </span>type = Type;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>};</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>...&gt; <span class="keyword">typename</span> From, <span class="keyword">typename</span>... Types&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="keyword">struct </span>repack&lt;From&lt;Types...&gt;&gt; {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keyword">using </span>type = <a class="code hl_typedef" href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">pack</a>&lt;Types...&gt;;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> size{<span class="keyword">sizeof</span>...(Types)};</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>};</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#ac4cd64c5c6f542f9b5d314b70bf7d8aa">   75</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> From&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#ac4cd64c5c6f542f9b5d314b70bf7d8aa">repack_t</a> = repack&lt;From&gt;::type;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">   77</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> From&gt; <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">repack_s</a>{repack&lt;From&gt;::size};</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type, <span class="keyword">typename</span>... Types&gt; <span class="keyword">struct </span>first_type {</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keyword">using </span>type = Type;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>};</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a09a84321249de040016ea5d79c016482">   83</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Types&gt; <span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#a09a84321249de040016ea5d79c016482">first_t</a> = first_type&lt;Types...&gt;::type;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span> Value, <span class="keyword">auto</span>... Values&gt; <span class="keyword">struct </span>first_value {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> value{Value};</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>};</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span>... Values&gt;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a08c486af5cba5a0b71c8b2b8fd13a1d5">   90</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a08c486af5cba5a0b71c8b2b8fd13a1d5">first_v</a>{first_value&lt;Values...&gt;::value};</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword">template</span> &lt;<span class="keyword">auto</span> Begin, <span class="keyword">decltype</span>(Begin) End, <span class="keyword">decltype</span>(Begin) Increment,</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>          <span class="keyword">typename</span> Function&gt;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">   94</a></span><span class="keyword">constexpr</span> <span class="keywordtype">void</span> <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">for_constexpr</a>(Function &amp;&amp;function) {</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (Begin &lt; End) {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a90ed417b141d4a9d567a4bcfadcd6b6e">function</a>(std::integral_constant&lt;<span class="keyword">decltype</span>(Begin), Begin&gt;());</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    for_constexpr&lt;Begin + Increment, End, Increment&gt;(<a class="code hl_function" href="namespacefcarouge_1_1internal.xhtml#a90ed417b141d4a9d567a4bcfadcd6b6e">function</a>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  }</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>}</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Dependent&gt;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#a24eb1204e458c448bab3a64ba63997d2">  102</a></span><span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a24eb1204e458c448bab3a64ba63997d2">type_dependent_false</a>{<span class="keyword">sizeof</span>(Dependent) != <span class="keyword">sizeof</span>(Dependent)};</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt; <span class="keyword">struct </span>not_implemented {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> none{type_dependent_false&lt;Type&gt;};</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keyword">template</span> &lt;auto Size&gt;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">explicit</span> not_implemented(</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>      [[maybe_unused]] <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;message)[Size]) {}</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keyword">static_assert</span>(none, <span class="stringliteral">&quot;This type is not implemented. See message.&quot;</span>);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>};</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#ab8daeec88614918cebedf93dd0eeb479">  112</a></span><span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#ab8daeec88614918cebedf93dd0eeb479">adl_transpose</a>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    [](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;value) { <span class="keywordflow">return</span> <a class="code hl_function" href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">transpose</a>(value); }};</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">struct </span><a class="code hl_function" href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">transpose</a> final {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">template</span> &lt;arithmetic Arithmetic&gt;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  operator()(<span class="keyword">const</span> Arithmetic &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    <span class="keywordflow">return</span> value;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <span class="keyword">requires</span> <span class="keyword">requires</span>(Matrix value) { value.transpose(); }</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Matrix &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    <span class="keywordflow">return</span> value.transpose();</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Matrix&gt;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Matrix &amp;value)<span class="keyword"> const </span>{</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    <span class="keywordflow">return</span> <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#ab8daeec88614918cebedf93dd0eeb479">adl_transpose</a>(value);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>};</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span><span class="keyword">struct </span>deducer final {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="comment">// Built-in, arithmetic, standard division support.</span></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">template</span> &lt;arithmetic Lhs, arithmetic Rhs&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>      -&gt; <span class="keyword">decltype</span>(lhs / rhs);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="comment">// Type-erased matrix first party linear algebra support.</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, auto, auto&gt; <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> Type,</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>            <span class="keyword">auto</span> M, <span class="keyword">auto</span> N, <span class="keyword">auto</span> O&gt;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keyword">requires</span>(M &gt; 1 || O &gt; 1)</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">operator</span>()(<span class="keyword">const</span> Matrix&lt;Type, M, N&gt; &amp;lhs, <span class="keyword">const</span> Matrix&lt;Type, O, N&gt; &amp;rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>      -&gt; Matrix&lt;Type, M, O&gt;;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, auto, auto&gt; <span class="keyword">typename</span> Matrix, <span class="keyword">typename</span> Type,</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>            <span class="keyword">auto</span> N&gt;</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  operator()(<span class="keyword">const</span> Matrix&lt;Type, 1, N&gt; &amp;lhs, <span class="keyword">const</span> Matrix&lt;Type, 1, N&gt; &amp;rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>      -&gt; Type;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, auto, auto&gt; <span class="keyword">typename</span> Lhs, <span class="keyword">typename</span> Type, <span class="keyword">auto</span> M&gt;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs&lt;Type, M, 1&gt; &amp;lhs,</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>                                                 arithmetic <span class="keyword">auto</span> rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>      -&gt; Lhs&lt;Type, M, 1&gt;;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keyword">template</span> &lt;<span class="keyword">template</span> &lt;<span class="keyword">typename</span>, auto, auto&gt; <span class="keyword">typename</span> Rhs, <span class="keyword">typename</span> Type, <span class="keyword">auto</span> O&gt;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  operator()(arithmetic <span class="keyword">auto</span> lhs, <span class="keyword">const</span> Rhs&lt;Type, O, 1&gt; &amp;rhs) <span class="keyword">const</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>      -&gt; Rhs&lt;Type, 1, O&gt;;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="comment">// Type-erased Eigen third party linear algebra support.</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keyword">template</span> &lt;eigen Lhs, eigen Rhs&gt;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>      <span class="keyword">typename</span> <span class="keyword">decltype</span>(lhs * rhs.transpose())::PlainMatrix;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">template</span> &lt;eigen Lhs, arithmetic Rhs&gt;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>      <span class="keyword">typename</span> Lhs::PlainMatrix;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keyword">template</span> &lt;arithmetic Lhs, eigen Rhs&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  [[nodiscard]] <span class="keyword">inline</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> operator()(<span class="keyword">const</span> Lhs &amp;lhs,</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>                                                 <span class="keyword">const</span> Rhs &amp;rhs) <span class="keyword">const</span> -&gt;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      <span class="keyword">typename</span> <span class="keyword">decltype</span>(rhs.transpose())::PlainMatrix;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>};</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Numerator, <span class="keyword">typename</span> Denominator&gt;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno"><a class="line" href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">  198</a></span><span class="keyword">using </span><a class="code hl_typedef" href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">quotient</a> =</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    std::remove_cvref_t&lt;std::invoke_result_t&lt;deducer, Numerator, Denominator&gt;&gt;;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>} <span class="comment">// namespace fcarouge::internal</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span><span class="preprocessor">#endif </span><span class="comment">// FCAROUGE_INTERNAL_UTILITY_HPP</span></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml">fcarouge::internal</a></div><div class="ttdoc">Internal implementation details.</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a08c486af5cba5a0b71c8b2b8fd13a1d5"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a08c486af5cba5a0b71c8b2b8fd13a1d5">fcarouge::internal::first_v</a></div><div class="ttdeci">constexpr auto first_v</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00090">utility.hpp:90</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a09a84321249de040016ea5d79c016482"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a09a84321249de040016ea5d79c016482">fcarouge::internal::first_t</a></div><div class="ttdeci">first_type&lt; Types... &gt;::type first_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00083">utility.hpp:83</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a24eb1204e458c448bab3a64ba63997d2"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a24eb1204e458c448bab3a64ba63997d2">fcarouge::internal::type_dependent_false</a></div><div class="ttdeci">constexpr auto type_dependent_false</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00102">utility.hpp:102</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a4c0bbc15a41d76dd2b4b23d8566fba57"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a4c0bbc15a41d76dd2b4b23d8566fba57">fcarouge::internal::for_constexpr</a></div><div class="ttdeci">constexpr void for_constexpr(Function &amp;&amp;function)</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00094">utility.hpp:94</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a61c7050558e5ccfe40b4c5d1c5c058b9"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a61c7050558e5ccfe40b4c5d1c5c058b9">fcarouge::internal::repack_s</a></div><div class="ttdeci">constexpr auto repack_s</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00077">utility.hpp:77</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a90ed417b141d4a9d567a4bcfadcd6b6e"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a90ed417b141d4a9d567a4bcfadcd6b6e">fcarouge::internal::function</a></div><div class="ttdeci">function(Callable) -&gt; function&lt; function_traits_t&lt; Callable &gt; &gt;</div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a990c3b3d2e7c4889c7f666cc8e82c503"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a990c3b3d2e7c4889c7f666cc8e82c503">fcarouge::internal::empty_pack</a></div><div class="ttdeci">pack&lt;&gt; empty_pack</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00063">utility.hpp:63</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_aa5e5d81297e01a8f865bec3aee32b0fe"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#aa5e5d81297e01a8f865bec3aee32b0fe">fcarouge::internal::quotient</a></div><div class="ttdeci">std::remove_cvref_t&lt; std::invoke_result_t&lt; deducer, Numerator, Denominator &gt; &gt; quotient</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00198">utility.hpp:199</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ab8daeec88614918cebedf93dd0eeb479"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ab8daeec88614918cebedf93dd0eeb479">fcarouge::internal::adl_transpose</a></div><div class="ttdeci">constexpr auto adl_transpose</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00112">utility.hpp:112</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_ac4cd64c5c6f542f9b5d314b70bf7d8aa"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#ac4cd64c5c6f542f9b5d314b70bf7d8aa">fcarouge::internal::repack_t</a></div><div class="ttdeci">repack&lt; From &gt;::type repack_t</div><div class="ttdef"><b>Definition:</b> <a href="internal_2utility_8hpp_source.xhtml#l00075">utility.hpp:75</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_aa5a28afb4550bbcbd55d875351de6e27"><div class="ttname"><a href="namespacefcarouge.xhtml#aa5a28afb4550bbcbd55d875351de6e27">fcarouge::pack</a></div><div class="ttdeci">internal::pack&lt; Types... &gt; pack</div><div class="ttdef"><b>Definition:</b> <a href="utility_8hpp_source.xhtml#l00079">utility.hpp:79</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_ac922632c2da8269e8396756088ba9a1f"><div class="ttname"><a href="namespacefcarouge.xhtml#ac922632c2da8269e8396756088ba9a1f">fcarouge::transpose</a></div><div class="ttdeci">constexpr auto transpose(const matrix&lt; Type, Row, Column &gt; &amp;lhs)</div><div class="ttdef"><b>Definition:</b> <a href="naive_2fcarouge_2linalg_8hpp_source.xhtml#l00329">linalg.hpp:329</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="dir_533ca38e4d6dcb24d3c950d504c67ecf.xhtml">fcarouge</a></li><li class="navelem"><a class="el" href="dir_378fe1080454d2b2e5da42d8158af554.xhtml">internal</a></li><li class="navelem"><a class="el" href="internal_2utility_8hpp.xhtml">utility.hpp</a></li>
    <li class="footer">Generated on Sun Nov 5 2023 00:47:10 for Kalman by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.5 </li>
  </ul>
</div>
</body>
</html>
