<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Kalman: std::formatter&lt; Filter, Char &gt; Struct Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript" src="darkmode_toggle.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Kalman<span id="projectnumber">&#160;0.4.0</span>
   </div>
   <div id="projectbrief">Kalman Filter</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('structstd_1_1formatter_3_01_filter_00_01_char_01_4.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="structstd_1_1formatter_3_01_filter_00_01_char_01_4-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">std::formatter&lt; Filter, Char &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="format_8hpp_source.xhtml">format.hpp</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for std::formatter&lt; Filter, Char &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structstd_1_1formatter_3_01_filter_00_01_char_01_4__coll__graph.svg" width="144" height="111"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5d2e3ad6c11ee8798426e55c7d88799e" id="r_a5d2e3ad6c11ee8798426e55c7d88799e"><td class="memItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01_filter_00_01_char_01_4.xhtml#a5d2e3ad6c11ee8798426e55c7d88799e">parse</a> (std::basic_format_parse_context&lt; Char &gt; &amp;parse_context)</td></tr>
<tr class="separator:a5d2e3ad6c11ee8798426e55c7d88799e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a887dd3f3f177feadd1ca42785885897f" id="r_a887dd3f3f177feadd1ca42785885897f"><td class="memTemplParams" colspan="2">template&lt;typename OutputIterator &gt; </td></tr>
<tr class="memitem:a887dd3f3f177feadd1ca42785885897f"><td class="memTemplItemLeft" align="right" valign="top">constexpr auto&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="structstd_1_1formatter_3_01_filter_00_01_char_01_4.xhtml#a887dd3f3f177feadd1ca42785885897f">format</a> (const Filter &amp;filter, std::basic_format_context&lt; OutputIterator, Char &gt; &amp;format_context) const -&gt; OutputIterator</td></tr>
<tr class="separator:a887dd3f3f177feadd1ca42785885897f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;<a class="el" href="conceptfcarouge_1_1kalman__filter.xhtml">fcarouge::kalman_filter</a> Filter, typename Char&gt;<br />
struct std::formatter&lt; Filter, Char &gt;</div>
<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00053">53</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a887dd3f3f177feadd1ca42785885897f" name="a887dd3f3f177feadd1ca42785885897f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a887dd3f3f177feadd1ca42785885897f">&#9670;&#160;</a></span>format()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;<a class="el" href="conceptfcarouge_1_1kalman__filter.xhtml">fcarouge::kalman_filter</a> Filter, typename Char &gt; </div>
<div class="memtemplate">
template&lt;typename OutputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; Filter, Char &gt;::format </td>
          <td>(</td>
          <td class="paramtype">const Filter &amp;&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::basic_format_context&lt; OutputIterator, Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>format_context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const -&gt; OutputIterator </td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>P2585 may be useful in simplifying and standardizing the support. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>Generalize out internal method concept when MSVC has better if-constexpr-requires support. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd>Inconsistent usage of internal? </dd></dl>

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00061">61</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   63</span>                        {</div>
<div class="line"><span class="lineno">   64</span> </div>
<div class="line"><span class="lineno">   65</span>    format_context.advance_to(</div>
<div class="line"><span class="lineno">   66</span>        std::format_to(format_context.out(), R<span class="stringliteral">&quot;({{)&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.f()));</span></div>
<div class="line"><span class="lineno">   67</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   68</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (fcarouge::internal::has_state_transition_method&lt;Filter&gt;) {</div>
<div class="line"><span class="lineno">   69</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">   70</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;f&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.f()));</span></div>
<div class="line"><span class="lineno">   71</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">   72</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   73</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (fcarouge::internal::has_input_control_method&lt;Filter&gt;) {</div>
<div class="line"><span class="lineno">   74</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">   75</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;g&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.g()));</span></div>
<div class="line"><span class="lineno">   76</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">   77</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   78</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (fcarouge::internal::has_output_model_method&lt;Filter&gt;) {</div>
<div class="line"><span class="lineno">   79</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">   80</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;h&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.h()));</span></div>
<div class="line"><span class="lineno">   81</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">   82</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   83</span><span class="stringliteral">    format_context.advance_to(std::format_to(</span></div>
<div class="line"><span class="lineno">   84</span><span class="stringliteral">        format_context.out(), R</span><span class="stringliteral">&quot;(&quot;k&quot;: {}, &quot;p&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.k(), <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.p()));</span></div>
<div class="line"><span class="lineno">   85</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   86</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_concept" href="conceptfcarouge_1_1has__prediction__types.xhtml">fcarouge::has_prediction_types&lt;Filter&gt;</a>) {</div>
<div class="line"><span class="lineno">   87</span>      <span class="keyword">constexpr</span> <span class="keyword">auto</span> end{<a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::size&lt;typename Filter::prediction_types&gt;</a>};</div>
<div class="line"><span class="lineno">   88</span>      <span class="keyword">constexpr</span> <span class="keyword">decltype</span>(end) begin{0};</div>
<div class="line"><span class="lineno">   89</span>      <span class="keyword">constexpr</span> <span class="keyword">decltype</span>(end) next{1};</div>
<div class="line"><span class="lineno">   90</span>      fcarouge::internal::for_constexpr&lt;begin, end, next&gt;(</div>
<div class="line"><span class="lineno">   91</span>          [&amp;format_context, &amp;filter](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">   92</span>            format_context.advance_to(std::format_to(</div>
<div class="line"><span class="lineno">   93</span>                format_context.out(), R<span class="stringliteral">&quot;(&quot;prediction_{}&quot;: {}, )&quot;, position(),</span></div>
<div class="line"><span class="lineno">   94</span><span class="stringliteral">                <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.template predict&lt;position&gt;()));</span></div>
<div class="line"><span class="lineno">   95</span><span class="stringliteral">          });</span></div>
<div class="line"><span class="lineno">   96</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">   97</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">   98</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (fcarouge::internal::has_process_uncertainty_method&lt;Filter&gt;) {</div>
<div class="line"><span class="lineno">   99</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">  100</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;q&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.q()));</span></div>
<div class="line"><span class="lineno">  101</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">  102</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  103</span><span class="stringliteral">    </span><span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_concept" href="conceptfcarouge_1_1has__output__uncertainty.xhtml">fcarouge::has_output_uncertainty&lt;Filter&gt;</a>) {</div>
<div class="line"><span class="lineno">  104</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">  105</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;r&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.r()));</span></div>
<div class="line"><span class="lineno">  106</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">  107</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  108</span><span class="stringliteral">    format_context.advance_to(</span></div>
<div class="line"><span class="lineno">  109</span><span class="stringliteral">        std::format_to(format_context.out(), R</span><span class="stringliteral">&quot;(&quot;s&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.s()));</span></div>
<div class="line"><span class="lineno">  110</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  113</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (fcarouge::internal::has_input_method&lt;Filter&gt;) {</div>
<div class="line"><span class="lineno">  114</span>      format_context.advance_to(</div>
<div class="line"><span class="lineno">  115</span>          std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;u&quot;: {}, )&quot;, <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.u()));</span></div>
<div class="line"><span class="lineno">  116</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">  117</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  119</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<a class="code hl_concept" href="conceptfcarouge_1_1has__update__types.xhtml">fcarouge::has_update_types&lt;Filter&gt;</a>) {</div>
<div class="line"><span class="lineno">  120</span>      <span class="keyword">constexpr</span> <span class="keyword">auto</span> end{<a class="code hl_typedef" href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::size&lt;typename Filter::update_types&gt;</a>};</div>
<div class="line"><span class="lineno">  121</span>      <span class="keyword">constexpr</span> <span class="keyword">decltype</span>(end) begin{0};</div>
<div class="line"><span class="lineno">  122</span>      <span class="keyword">constexpr</span> <span class="keyword">decltype</span>(end) next{1};</div>
<div class="line"><span class="lineno">  123</span>      fcarouge::internal::for_constexpr&lt;begin, end, next&gt;(</div>
<div class="line"><span class="lineno">  124</span>          [&amp;format_context, &amp;filter](<span class="keyword">auto</span> position) {</div>
<div class="line"><span class="lineno">  125</span>            format_context.advance_to(</div>
<div class="line"><span class="lineno">  126</span>                std::format_to(format_context.out(), R<span class="stringliteral">&quot;(&quot;update_{}&quot;: {}, )&quot;,</span></div>
<div class="line"><span class="lineno">  127</span><span class="stringliteral">                               position(), <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.template update&lt;position&gt;()));</span></div>
<div class="line"><span class="lineno">  128</span><span class="stringliteral">          });</span></div>
<div class="line"><span class="lineno">  129</span><span class="stringliteral">    }</span></div>
<div class="line"><span class="lineno">  130</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  131</span><span class="stringliteral">    format_context.advance_to(</span></div>
<div class="line"><span class="lineno">  132</span><span class="stringliteral">        std::format_to(format_context.out(), R</span><span class="stringliteral">&quot;(&quot;x&quot;: {}, &quot;y&quot;: {}, &quot;z&quot;: {}}})&quot;,</span></div>
<div class="line"><span class="lineno">  133</span><span class="stringliteral">                       <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.x(), <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.y(), <a class="code hl_variable" href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">filter</a>.z()));</span></div>
<div class="line"><span class="lineno">  134</span><span class="stringliteral"></span> </div>
<div class="line"><span class="lineno">  135</span><span class="stringliteral">    </span><span class="keywordflow">return</span> format_context.out();</div>
<div class="line"><span class="lineno">  136</span>  }</div>
<div class="ttc" id="aconceptfcarouge_1_1has__output__uncertainty_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__output__uncertainty.xhtml">fcarouge::has_output_uncertainty</a></div><div class="ttdoc">Filter output uncertainty support concept.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00096">utility.hpp:96</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__prediction__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__prediction__types.xhtml">fcarouge::has_prediction_types</a></div><div class="ttdoc">Filter prediction pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00104">utility.hpp:104</a></div></div>
<div class="ttc" id="aconceptfcarouge_1_1has__update__types_xhtml"><div class="ttname"><a href="conceptfcarouge_1_1has__update__types.xhtml">fcarouge::has_update_types</a></div><div class="ttdoc">Filter update pack support concept.</div><div class="ttdef"><b>Definition</b> <a href="utility_8hpp_source.xhtml#l00125">utility.hpp:125</a></div></div>
<div class="ttc" id="anamespacefcarouge_1_1internal_xhtml_a90e8b68cdd277f22bfc4b4c678b5c8b8"><div class="ttname"><a href="namespacefcarouge_1_1internal.xhtml#a90e8b68cdd277f22bfc4b4c678b5c8b8">fcarouge::internal::filter</a></div><div class="ttdeci">constexpr filter_deducer&lt; Filter &gt; filter</div><div class="ttdef"><b>Definition</b> <a href="factory_8hpp_source.xhtml#l00268">factory.hpp:268</a></div></div>
<div class="ttc" id="anamespacefcarouge_xhtml_a6f496dc857f8b172efc57e3ba9bfdbf8"><div class="ttname"><a href="namespacefcarouge.xhtml#a6f496dc857f8b172efc57e3ba9bfdbf8">fcarouge::column_vector</a></div><div class="ttdeci">Eigen::Vector&lt; Type, Row &gt; column_vector</div><div class="ttdoc">Compile-time sized Eigen3 column vector.</div><div class="ttdef"><b>Definition</b> <a href="eigen_2fcarouge_2linalg_8hpp_source.xhtml#l00076">linalg.hpp:76</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5d2e3ad6c11ee8798426e55c7d88799e" name="a5d2e3ad6c11ee8798426e55c7d88799e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d2e3ad6c11ee8798426e55c7d88799e">&#9670;&#160;</a></span>parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;<a class="el" href="conceptfcarouge_1_1kalman__filter.xhtml">fcarouge::kalman_filter</a> Filter, typename Char &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto std::formatter&lt; Filter, Char &gt;::parse </td>
          <td>(</td>
          <td class="paramtype">std::basic_format_parse_context&lt; Char &gt; &amp;&#160;</td>
          <td class="paramname"><em>parse_context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="format_8hpp_source.xhtml#l00054">54</a> of file <a class="el" href="format_8hpp_source.xhtml">format.hpp</a>.</p>
<div class="fragment"><div class="line"><span class="lineno">   54</span>                                                                           {</div>
<div class="line"><span class="lineno">   55</span>    <span class="keywordflow">return</span> parse_context.begin();</div>
<div class="line"><span class="lineno">   56</span>  }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/github/workspace/include/fcarouge/internal/<a class="el" href="format_8hpp_source.xhtml">format.hpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>std</b></li><li class="navelem"><a class="el" href="structstd_1_1formatter_3_01_filter_00_01_char_01_4.xhtml">formatter&lt; Filter, Char &gt;</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
